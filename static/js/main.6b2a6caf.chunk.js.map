{"version":3,"sources":["components/RichEditor/common/Defines.ts","components/RichEditor/common/globalStore.ts","components/RichEditor/common/utils.ts","components/RichEditor/comps/Td.tsx","components/RichEditor/comps/Table.tsx","components/RichEditor/comps/TooBar/common/StaticButton.tsx","components/RichEditor/comps/TooBar/funcButtons/CleanFormatButton.tsx","components/RichEditor/comps/TooBar/common/config.ts","components/RichEditor/comps/TooBar/funcButtons/CopyFormatButton.tsx","components/RichEditor/comps/TooBar/common/ValueSelector.tsx","components/RichEditor/comps/TooBar/funcButtons/TextAlignButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontSizeButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontTypeButton.tsx","components/RichEditor/comps/TooBar/common/ColorPickerCore.tsx","components/RichEditor/comps/TooBar/common/ColorPicker.tsx","components/RichEditor/comps/TooBar/funcButtons/FontColorButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontBGColorButton.tsx","components/RichEditor/comps/TooBar/common/MarkButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontWeightButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontStyleButton.tsx","components/RichEditor/comps/TooBar/funcButtons/UnderLineButton.tsx","components/RichEditor/comps/TooBar/funcButtons/LineThroughButton.tsx","components/RichEditor/comps/ListComp.ts","components/RichEditor/comps/TodoListComp.tsx","components/RichEditor/comps/TooBar/common/ReactButton.tsx","components/RichEditor/comps/TooBar/funcButtons/ToDoListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/OrderListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/NormalListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SetLinkButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertImgButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertFileButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteColumnButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteRowButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTextAfterVoid.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTextBeforeVoid.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertColumnBeforeCell.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertColumnAfterCell.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertRowBeforeButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertRowAfterButton.tsx","components/RichEditor/comps/TooBar/funcButtons/MergeCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SplitCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/ClearCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/AddCodeBoxButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SelectCellButton.tsx","components/RichEditor/comps/TooBar/ToolBar.tsx","components/RichEditor/common/htmlToSlate.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/HandleKeyDownEvent.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleSelectedTd.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleRangeExpand.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleRangeCollapsed.ts","components/RichEditor/comps/ImgComp.tsx","components/RichEditor/comps/FileComp.tsx","components/RichEditor/comps/LinkComp.tsx","components/RichEditor/comps/Code.tsx","components/RichEditor/comps/CheckBox.tsx","components/RichEditor/RenderElements/MyElements.tsx","components/RichEditor/RenderElements/RenderLeaf.tsx","components/RichEditor/RichEditor.tsx","components/RichEditor/plugins/WithCyWrap.ts","index.tsx"],"names":["CET","Marks","TextWrappers","DIV","H1","H2","H3","H4","P","InLineTypes","IMG","LINK","CHECKBOX","CypressFlagValues","globalStore","selectedTds","Set","editingTdsPath","preSelectedTdPos","row","col","copyedCellsPath","copyedAreaHeight","copyedAreaWidth","copyedCells","copyedContent","getCopyedContent","setCopyedContent","value","setCopyedCells","getCopyedCells","setCopyedMaxRowAndCol","getStrPathSetOfSelectedTds","editor","filterPath","setStrPathSetOfSelectedTds","paths","p","path","split","map","o","Editor","hasPath","delete","getEditingTdsPath","setEditingTdsPath","editingTdPath","utils","insertCypressId","props","key","findParent","startDom","targetDom","parent","offsetParent","isElementEmpty","el","Array","from","Node","descendants","some","childEntry","node","Text","isText","text","length","isVoid","isInline","removeAllRange","window","getSelection","removeAllRanges","encodeSlateContent","data","btoa","encodeURIComponent","JSON","stringify","decodeContentToSlateData","parse","decodeURIComponent","atob","doCopy","TableLogic","getSelectedTds","copyCells","getFragment","doPaste","removeRangeElement","isGoingToPasteMultiTd","getSelectedTdsSize","isCopyedSelectTdContent","isGoingToPastInTable","isInTable","pasteCells","insertFragment","filterCopyedContent","finalContent","cell","content","array","forEach","c","isTable","isTd","push","children","selection","Range","isCollapsed","originSelection","editorRange","range","inte","intersection","equals","withoutNormalizing","reverse","childP","Transforms","removeNodes","at","hanging","voids","mode","ranges","s1","start","s2","end","isBefore","a","b","Point","compare","isEqual","nodes","match","n","table","t1","t2","beforeT1","before","afterT2","after","splitRange","r","anchor","focus","above","tableRange","tInte","tds","td","tdRange","isExpanded","setSelection","select","isTextWrapper","Element","isElement","includes","type","getFirstAboveElementType","textWrapper","getParent","element","isEditor","EDITOR","getPath","basePath","slice","t","getNodeByPath","error","this","hasNotSelectedAnyTd","getFirstSelectedTd","tdMinWidth","tdMinHeight","TD","attributes","useSlateStatic","readOnly","useReadOnly","useEffect","ReactEditor","findPath","width","height","setNodes","pathStr","join","editingTds","nowSelected","selected","tdIsEditing","add","colSpan","rowSpan","style","minWidth","maxWidth","color","Color","backgroundColor","BGColor","textAlign","TextAlign","fontSize","FontSize","fontWeight","BOLD","fontStyle","ITALIC","textDecoration","Underline","LineThrough","onClick","onDoubleClick","e","nativeEvent","target","ref","current","TdLogic","deselectAllTd","deselect","className","position","zIndex","right","top","cursor","userSelect","contentEditable","onMouseDown","x","clientX","i","ele","tagName","cellNode","toSlateNode","cellPath","tbody","TBODY","tdMap","getTdMap","tdOriginRow","tdOriginCol","targetCol","j","originCol","originRow","cells","tdInMap","tdDom","toDOMNode","initX","offsetWidth","mouseMoveHandler","dx","document","addEventListener","mouseUpHandler","querySelectorAll","tr","rowIndex","cellIndex","parseInt","tdNode","removeEventListener","left","bottom","y","clientY","targetRow","initY","offsetHeight","preventDefault","dy","minHeight","maxHeight","trs","startPoins","fill","colStart","findIndex","colEnd","rowStart","rowEnd","fillTd","getSelectedTdInTdMap","selectedTd","Map","helper","selectedTdMap","has","set","Math","min","max","selectedTdsPath","getSelectedTdsPath","unsetNodes","findTargetTd","direct","selectAll","startTd","rightX","targetTd","nextTdPath","nextTd","setTdIsEditing","tdPath","clearTd","Table","useRef","isBeginSelectTd","mouseDownStartPoint","lastSelectedPaths","preMouseOnTdPath","prePath","useContext","EditorContext","savedMarks","setSavedMarks","reCalcTdWidth","useCallback","selfDom","tableDom","nowWrapperWidth","preWrapperWidth","wrapperWidthWhenCreated","tableNode","tablePath","ro","ResizeObserver","entries","requestAnimationFrame","isArray","container","querySelector","observe","unobserve","Path","resetSelectedTds","selectTd","_","debounce","pa","pb","commonNode","common","pbTd","TR","tda","tdb","nowTdsPath","keys","nowSelectedTds","preSelectedTds","nowSelectedTdsPathSet","preSelectedTdsPathSet","deselectedPath","filter","newSelectedPath","display","tableLayout","wordBreak","overflowX","overflowY","borderCollapse","stopPropagation","slateNode","slateNodePath","find","mousemoveFunc","abs","point","console","mouseupFunc","onMouseUp","copyMarks","hasSelectTd","Object","values","model","TABLE","item","fatherIndex","index","isSelectedTd","fPath","aPath","rel","isInTd","normalizeTable","nodeEntry","child","shouldEmpty","insertNodes","string","wrapNodes","tabEvent","getEditingTd","shiftTabEvent","deleteRow","deleteVArea","Infinity","removePath","unshift","leftCol","moveNodes","to","deleteColumn","deleteHArea","sort","arow","brow","acol","bcol","insertColumn","count","nowTd","nowTr","insertCol","editorDom","getInsertCells","cloneDeep","nowTdRow","nowTdCol","size","tdInTdMap","Number","isFinite","downTd","downTdOriginPos","insertRow","insertNode","getInsertRow","tdCount","splitTd","belongTr","tdCol","tdRow","tdColSpan","tdRowSpan","leftSumColSpan","findInsertCol","sumColSpan","isInNowTr","insertTdCount","mergeTd","isOnlyOne","tbodyPath","firstTd","maxColSpan","maxRowSpan","newTdPath","toBeDeleted","fragment","deleteTable","getEditingOrSelectedTdBelongTable","pathArr","tdArr","arr","tdsPath","areaWidth","areaHeight","isSelectTableAllTd","startPoint","message","waitToDeleteTdsPath","uniqWith","minRow","reduce","nowCopyedCellsRow","insertTds","copyedTd","childLength","StaticButton","title","mouseEnterDelay","mouseLeaveDelay","disabled","mousedownFunc","CleanFormatButton","all","mark","removeMark","cleanFormat","Icon","component","viewBox","version","xmlns","d","ToolBarConfig","isMounted","CopyFormatButton","useSlate","useState","setDisabled","isDisabled","hasSelectSingleTd","isSelectionExpanded","useMemo","isNotOnlyOne","marks","warn","copyMark","FormatPainterOutlined","ValueSelector","visible","setVisible","setValue","toolDom","getValue","onMouseLeave","placeholder","bordered","open","dropdownClassName","getPopupContainer","triggerNode","parentElement","body","onSelect","afterSelect","options","Option","String","optionLabelRender","TextAlignButton","FontSizeButton","getMarkValue","addMark","FontTypeButton","setTextWrapper","toUpperCase","ColorPickerCore","hex","setColor","padding","justifyContent","flexDirection","onChange","icon","DeleteOutlined","ColorPicker","_getColor","getColor","getComputedStyle","placement","overlayStyle","overlay","trigger","FontColorButton","FontColorsOutlined","FontBGColorButton","BgColorsOutlined","MarkButton","setType","getType","isMarkActive","toggleMark","FontWeightButton","BoldOutlined","FontStyleButton","ItalicOutlined","UnderLineButton","UnderlineOutlined","LineThroughButton","StrikethroughOutlined","ListLogic","toggleList","twParent","li","isListItem","liParent","isSameTypeToggle","isChangeListType","isSetToList","unwrapNodes","parents","selectedListItems","LIST_ITEM","isOrderList","isInLi","isInList","NUMBER_LIST","NORMAL_LIST","normalizeList","nextPath","texts","liftNodes","next","colors","onlyColor","pop","liColor","preNode","mergeNodes","nextNode","first","onlyChild","childCount","universal","indentLi","liEntry","liftLi","liPath","pp","parentParent","TodoListComp","marginRight","checked","ToDoListLogic","isTodoList","TODOLIST","isInToDoList","getToDoList","normalizeToDoList","handleKeyDown","shiftKey","ReactButton","disabledCondition","_isDisabled","buttonRef","ToDoListButton","todos","todo","textWrappers","insertText","insertToDoList","cypressId","TODO_LIST","CheckSquareOutlined","OrderListButton","ORDER_LIST","OrderedListOutlined","NormalListButton","NORMALIZE_LIST","UnorderedListOutlined","SetLinkButton","url","setLink","LinkOutlined","acceptImgTypes","maxSize","uploadImg","file","formData","FormData","append","axios","method","headers","res","filename","Promise","setTimeout","URL","createObjectURL","insertImg","files","legalFiles","illegalFiles","valideImg","name","id","callback","collapse","edge","move","insertImgToEditor","Date","getTime","InsertImgButton","fileRef","replace","click","accept","multiple","hidden","PictureOutlined","acceptFileTypes","uploadFile","insertFile","valideFile","fileName","FILE","insertFileToEditor","InsertFileButton","PaperClipOutlined","InsertTableButton","counts","setCounts","tdMouseEnter","parentNode","addTable","cellCount","rowCount","isInteger","tw","twDom","tableWrapperWidth","tPath","border","onMouseEnter","TableOutlined","DeleteTableButton","DeleteColumnButton","DeleteColumnOutlined","DeleteRowButton","DeleteRowOutlined","InsertTextAfterVoid","isBlock","topBlock","insertDivAfterTable","CODE","VerticalAlignBottomOutlined","InsertTextBeforeVoid","insertDivBeforeTable","VerticalAlignTopOutlined","InsertColumnBeforeCell","InsertRowLeftOutlined","InsertColumnAfterCell","InsertRowRightOutlined","InsertRowBeforeButton","InsertRowAboveOutlined","InsertRowAfterButton","InsertRowBelowOutlined","MergeCellButton","MergeCellsOutlined","SplitCellButton","SplitCellsOutlined","ClearCellButton","ClearOutlined","AddCodeBoxButton","defaultMode","CodeOutlined","SelectCellButton","SELECTE_TD","SelectOutlined","ReadOnlyButton","setReadOnly","ToolBar","diverComp","marginBottom","align","log","localStorage","setItem","SaveOutlined","deserialize","nodeType","textContent","nodeStyle","cssText","changeKey","trim","$0","$1","$2","$3","changeValue","childNodes","nodeName","jsx","every","Block","getAttribute","htmlToSlate","html","DOMParser","parseFromString","HandleKeyDownEvent","ctrlKey","handleSelectedTd","handleRangeExpand","elementType","getTable","isInFirstRow","isDescendant","prePos","isInLastText","isInLastRow","nextPos","isStart","isEnd","handleRangeCollapsed","ImgComp","useSelected","showTool","state","setState","viewerIns","registeImgViewer","Viewer","mask","opacity","alignItems","imgFuncs","BorderOuterOutlined","BorderlessTableOutlined","FullscreenOutlined","imgNode","v","destroy","show","margin","verticalAlign","boxShadow","thisDom","bindEvnet","enable","isReadOnly","topRight","bottomRight","bottomLeft","topLeft","onResizeStop","direction","newWidth","newHeight","gutter","func","alt","src","FileComp","DownloadOutlined","download","href","LinkComp","setContent","setUrl","formItemStyle","editPanel","flex","Item","label","DisconnectOutlined","justify","link","linkPath","innerText","initEditPanel","require","lans","CodeComp","defaultCode","code","setCode","codeIns","saveContent","codeConfig","theme","lineNumbers","editorDidMount","setSize","onEditorChange","onResize","defaultValue","showArrow","lan","onBeforeChange","CheckBoxComp","MyElements","otherAttr","MyLeaf","leaf","createContext","EditorComp","deleteForward","deleteBackward","insertData","insertBreak","normalizeNode","apply","isImg","isFile","properties","newProperties","oldProperties","HistoryEditor","withoutSaving","myInsertBreak","throttle","todoList","deleteFragment","unit","afterPos","isGoingToOtherTd","isInTextWrapper","beforePos","preTd","isLiEmpty","isOnlyChild","isInTodoList","copyedCellsContent","types","newTransfer","DataTransfer","getData","setData","afterList","beforeList","previous","editorLastNode","preLastNode","withCyWrap","withHistory","withReact","createEditor","getItem","preUndos","preSelection","getEditor","renderElement","editorRef","renderLeaf","MyToolBar","Provider","overflow","screen","availHeight","autoFocus","onCompositionStart","onDOMBeforeInput","navigator","clipboard","writeText","onKeyDown","onDragStart","onBlur","onFocus","hasTextAlign","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6b2a6caf.chunk.js","sourcesContent":["import { BaseEditor, Descendant } from \"slate\";\nimport { HistoryEditor } from \"slate-history\";\nimport { Editable, ReactEditor, Slate } from \"slate-react\";\n\nexport enum CET {\n  EDITOR = \"editor\",\n  NUMBER_LIST = \"ol\",\n  NORMAL_LIST = \"ul\",\n  LIST_ITEM = \"li\",\n  DIV = \"div\",\n  Block = \"block\",\n  P = \"p\",\n  H1 = \"h1\",\n  H2 = \"h2\",\n  H3 = \"h3\",\n  H4 = \"h4\",\n  IMG = \"img\",\n  LINK = \"link\",\n  TABLE = \"table\",\n  TBODY = \"tbody\",\n  TR = \"tr\",\n  TD = \"td\",\n  TODOLIST = \"todo\",\n  CHECKBOX = \"checkbox\",\n  CODE = \"code\",\n  FILE = \"file\",\n}\n\nexport const TextWrappers = [CET.DIV, CET.H1, CET.H2, CET.H3, CET.H4, CET.P];\nexport const InLineTypes = [CET.IMG, CET.LINK, CET.CHECKBOX];\n\nexport enum Marks {\n  BOLD = \"bold\",\n  ITALIC = \"italic\",\n  FontSize = \"fontSize\",\n  Underline = \"underline\",\n  LineThrough = \"line-through\",\n  Color = \"color\",\n  BGColor = \"backgroundColor\",\n  TextAlign = \"textAlign\",\n}\n\nexport type CustomElement = {\n  type: CET;\n  [key: string]: any;\n  url?: string; // 图片，文件，Link组件的参数\n  fileName?: string; // 文件名\n  id?: number; // 唯一标识，表示图片或者文件正在上传中\n  border?: boolean; // img边框\n  colSpan?: number; // td属性\n  rowSpan?: number; // td 属性\n  width?: number; // td样式属性\n  height?: number; // td样式属性\n  selected?: boolean; // td是否被选中\n  // canTdEdit?: boolean; // td是否可以编辑\n  tdIsEditing?: boolean; // 光标是否处于该td上\n  liColor?: string; // li color\n  checked?: boolean; // todoList属性\n  wrapperWidthWhenCreated?: number; // table创建时所在的容器宽度，用于动态计算td的宽度\n  defaultMode?: string; // code 专属\n  defaultCode?: string; // code 专属\n  textAlign?: \"left\" | \"right\" | \"center\"; // textWrapper的属性\n  tdMap?: any; // 用于计算tdMap\n  children: (CustomText | CustomElement)[];\n};\nexport type CustomText = { text: string; [key: string]: any } & Partial<{\n  [key in Marks]: any;\n}>;\nexport type EditorType = BaseEditor & ReactEditor & HistoryEditor;\n\nexport type StateShape = Parameters<typeof Slate>[0][\"value\"];\nexport type EditorCompPropShape = {\n  content?: string;\n  getEditor?: (editor: EditorType) => void;\n  onChange?: (editor: EditorType, content: Descendant[]) => void;\n};\nexport type EditorCompShape = (\n  props: EditorCompPropShape\n) => React.ReactElement;\nexport type EditableProps = Parameters<typeof Editable>[0];\n\nexport const CypressTestFlag = \"data-cypress-id\";\nexport enum CypressFlagValues {\n  ORDER_LIST = \"order_list\",\n  NORMALIZE_LIST = \"unorder_list\",\n  TODO_LIST = \"todo_list\",\n  SELECTE_TD = 'select_td'\n}\n","import { Editor, NodeEntry, Path, Node } from \"slate\";\nimport { EditorType } from \"./Defines\";\n\ntype preSelectedTdPosShape = {\n  row: number;\n  col: number;\n} | null;\n\ntype globalStoreShape = {\n  selectedTds: Set<string>;\n  editingTdsPath: Set<string>;\n  preSelectedTdPos: preSelectedTdPosShape;\n  copyedCellsPath: Path[] | null;\n  copyedAreaHeight: number; // 复制的区域的高度\n  copyedAreaWidth: number; // 复制的区域的宽度\n  copyedCells: NodeEntry[] | null;\n  copyedContent: Node[] | null;\n};\nconst globalStore: globalStoreShape = {\n  selectedTds: new Set<string>(),\n  editingTdsPath: new Set<string>(),\n  preSelectedTdPos: {\n    row: 0,\n    col: 0,\n  },\n  copyedCellsPath: null,\n  copyedAreaHeight: 0,\n  copyedAreaWidth: 0,\n  copyedCells: null,\n  copyedContent: null,\n};\n\nexport const getCopyedContent = () => {\n  return globalStore.copyedContent;\n};\n\nexport const setCopyedContent = (value: globalStoreShape[\"copyedContent\"]) => {\n  globalStore.copyedContent = value;\n};\n\nexport const setCopyedCells = (value: globalStoreShape[\"copyedCells\"]) => {\n  globalStore.copyedCells = value;\n};\n\nexport const getCopyedCells = () => {\n  return globalStore.copyedCells;\n};\n\nexport const getCopyedMaxRowAndCol = () => {\n  return {\n    copyedAreaHeight: globalStore.copyedAreaHeight,\n    copyedAreaWidth: globalStore.copyedAreaWidth,\n  };\n};\n\nexport const setCopyedMaxRowAndCol = (value: {\n  copyedAreaHeight: globalStoreShape[\"copyedAreaHeight\"];\n  copyedAreaWidth: globalStoreShape[\"copyedAreaWidth\"];\n}) => {\n  globalStore.copyedAreaHeight = value.copyedAreaHeight;\n  globalStore.copyedAreaWidth = value.copyedAreaWidth;\n};\n\nexport const setCopyedCellsPath = (\n  value: globalStoreShape[\"copyedCellsPath\"]\n) => {\n  globalStore.copyedCellsPath = value;\n};\n\nexport const getCopyedCellsPath = () => {\n  return globalStore.copyedCellsPath;\n};\n\nexport const getStrPathSetOfSelectedTds = (editor: EditorType) => {\n  filterPath(editor, globalStore.selectedTds);\n  return globalStore.selectedTds;\n};\n\nexport const setStrPathSetOfSelectedTds = (\n  selectedTds: globalStoreShape[\"selectedTds\"]\n) => {\n  globalStore.selectedTds = selectedTds;\n};\n\nconst filterPath = (editor: EditorType, paths: Set<string>): void => {\n  for (const p of paths) {\n    const path = p.split(\",\").map((o) => +o);\n    if (!Editor.hasPath(editor, path)) {\n      paths.delete(p);\n      filterPath(editor, paths);\n      return;\n    }\n  }\n};\n\nexport const getEditingTdsPath = (editor: EditorType) => {\n  filterPath(editor, globalStore.editingTdsPath);\n  return globalStore.editingTdsPath;\n};\n\nexport const setEditingTdsPath = (\n  editingTdPath: globalStoreShape[\"editingTdsPath\"]\n) => {\n  globalStore.editingTdsPath = editingTdPath;\n};\n","/* eslint-disable eqeqeq */\nimport {\n  Element,\n  Editor,\n  Path,\n  Text,\n  Node,\n  Transforms,\n  Range,\n  NodeEntry,\n  Point,\n} from \"slate\";\nimport { TextWrappers, EditorType, CET, CypressTestFlag } from \"./Defines\";\nimport { TableLogic } from \"../comps/Table\";\nimport { jsx } from \"slate-hyperscript\";\nimport {\n  getCopyedCells,\n  getCopyedContent,\n  setCopyedCells,\n  setCopyedContent,\n  setCopyedMaxRowAndCol,\n} from \"../common/globalStore\";\n\nconst deserialize: any = (el: any) => {\n  // text node\n  if (el.nodeType === 3) {\n    return el.textContent;\n    // not element node\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{ text: \"\" }];\n  }\n\n  switch (el.nodeName) {\n    case \"BODY\":\n      return jsx(\"fragment\", {}, children);\n    case \"BR\":\n      return \"\\n\";\n    case \"BLOCKQUOTE\":\n      return jsx(\"element\", { type: \"quote\" }, children);\n    case \"P\":\n    case \"DIV\":\n      return jsx(\"element\", { type: CET.DIV }, children);\n    case \"A\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.LINK,\n          url: el.getAttribute(\"href\"),\n          content: el.innserHTML,\n        },\n        children\n      );\n    case \"IMG\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.IMG,\n          url: el.getAttribute(\"src\"),\n        },\n        children\n      );\n    case \"TABLE\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TABLE,\n        },\n        children\n      );\n    case \"TBODY\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TBODY,\n        },\n        children\n      );\n    case \"TR\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TR,\n        },\n        children\n      );\n    case \"TD\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TD,\n          colSpan: el.getAttribute(\"colSpan\"),\n        },\n        children\n      );\n    default:\n      return el.textContent;\n  }\n};\n\nexport const utils = {\n  /**\n   * 为组件注入cypress flag，用于cypress测试\n   * @param props\n   * @param key\n   * @returns\n   */\n  insertCypressId<T extends object>(props: T, key: keyof T) {\n    return props[key] != null\n      ? {\n          [CypressTestFlag]: props[key],\n        }\n      : {};\n  },\n  /**\n   * 从startDom开始往上找到与targetDom相同的dom元素，如果没找到，则返回null\n   * @param startDom\n   * @param targetDom\n   * @returns\n   */\n  findParent(\n    startDom: HTMLElement,\n    targetDom: HTMLElement\n  ): HTMLElement | null {\n    let parent = startDom;\n    while (parent != null && parent != targetDom) {\n      parent = parent.offsetParent as HTMLElement;\n    }\n    return parent;\n  },\n  /**\n   * 判断包含了void,inline,text元素后，父元素是否依然为空\n   * @param editor\n   * @param el\n   * @returns\n   */\n  isElementEmpty(editor: EditorType, el: NodeEntry) {\n    const isThereHasNoEmptyChild = Array.from(Node.descendants(el[0])).some(\n      (childEntry) => {\n        const node = childEntry[0];\n        return (\n          (Text.isText(node) && node.text.length > 0) ||\n          Editor.isVoid(editor, node) ||\n          Editor.isInline(editor, node)\n        );\n      }\n    );\n    return !isThereHasNoEmptyChild;\n  },\n  removeAllRange() {\n    window.getSelection()?.removeAllRanges();\n  },\n  encodeSlateContent(data: Node[]) {\n    return window?.btoa(encodeURIComponent(JSON.stringify(data)));\n  },\n  decodeContentToSlateData(data: string) {\n    return JSON.parse(decodeURIComponent(window.atob(data)));\n  },\n  /**\n   * 对所有的复制行为统一进行处理\n   * 情况如下：\n   *  有一个单元格被选中时的复制\n   *  没有单元格被选中时的复制\n   */\n  doCopy(editor: EditorType) {\n    const selectedTds = TableLogic.getSelectedTds(editor);\n    if (selectedTds.length > 0) {\n      TableLogic.copyCells(editor);\n    } else {\n      setCopyedCells(null);\n      setCopyedMaxRowAndCol({ copyedAreaHeight: 0, copyedAreaWidth: 0 });\n      setCopyedContent(editor.getFragment());\n    }\n  },\n  /**\n   * 对所有的粘贴行为进行统一处理\n   */\n  doPaste(editor: EditorType) {\n    utils.removeRangeElement(editor);\n\n    const copyedCells = getCopyedCells() || [];\n    const isGoingToPasteMultiTd = TableLogic.getSelectedTdsSize(editor) > 0;\n    const isCopyedSelectTdContent = copyedCells.length > 0;\n    const isGoingToPastInTable =\n      TableLogic.isInTable(editor) || isGoingToPasteMultiTd;\n    const copyedContent = getCopyedContent();\n\n    if (isGoingToPastInTable) {\n      // 粘贴到多个单元格\n      if (isGoingToPasteMultiTd) {\n        TableLogic.pasteCells(editor);\n      } else {\n        copyedContent &&\n          editor.insertFragment(utils.filterCopyedContent(copyedContent));\n      }\n      return;\n    } else {\n      // 粘贴多个单元格内容到表格外【有问题】\n      if (isCopyedSelectTdContent) {\n        const finalContent = utils.filterCopyedContent(\n          copyedCells.map((cell) => cell[0])\n        );\n        // 还要考虑是否全选了表格\n        editor.insertFragment(finalContent);\n      } else {\n        // 粘贴某个单元格的部分内容到表格外\n        copyedContent &&\n          editor.insertFragment(utils.filterCopyedContent(copyedContent));\n      }\n      return;\n    }\n  },\n  /**\n   * 对复制的区域进行转换，主要是防止在表格内复制了表格的内容再粘贴到表格\n   * @param content\n   * @returns\n   */\n  filterCopyedContent(content: Node[]) {\n    const array: Node[] = [];\n    content.forEach((c) => {\n      if (TableLogic.isTable(c)) {\n        Array.from(Node.descendants(c)).forEach((node) => {\n          if (TableLogic.isTd(node[0])) {\n            array.push(...node[0].children);\n          }\n        });\n      } else if (TableLogic.isTd(c)) {\n        array.push(...c.children);\n      } else {\n        array.push(c);\n      }\n    });\n    return array;\n  },\n  /**\n   * 思路：将选中区域按照表格来分开，非表格区域的可以直接用Transforms.delete进行删除，\n   * 而表格区域，需要分情况讨论：\n   *  如果选中区域全覆盖表格，那么直接删除表格\n   *  如果选中区域部分覆盖表格，那么需要按照单元格来删除，（因为多个单元格连在一起删会破坏表格结构）\n   * @param editor\n   * @returns\n   */\n  removeRangeElement(editor: EditorType) {\n    if (!editor.selection || Range.isCollapsed(editor.selection)) return;\n    const originSelection = editor.selection;\n\n    // 判断文档是否全部被选中\n    const editorRange = Editor.range(editor, []);\n    const inte = Range.intersection(editorRange, originSelection);\n    if (inte && Range.equals(inte, editorRange)) {\n      Editor.withoutNormalizing(editor, () => {\n        for (const [, childP] of Node.children(editor, [], {\n          reverse: true,\n        })) {\n          Transforms.removeNodes(editor, {\n            at: childP,\n            hanging: true,\n            voids: true,\n            mode: \"highest\",\n          });\n        }\n      });\n      return;\n    }\n\n    // 根据table的位置来分离Range\n    const splitRange = () => {\n      if (!editor.selection) return;\n      let s1 = Range.start(editor.selection);\n      let s2 = Range.end(editor.selection);\n\n      const tables = Array.from(\n        Editor.nodes(editor, {\n          match(n) {\n            return TableLogic.isTable(n);\n          },\n        })\n      );\n\n      const isBefore = (a: Point, b: Point) => {\n        return Point.compare(a, b) == -1;\n      };\n      const isEqual = (a: Point, b: Point) => {\n        return Point.compare(a, b) == 0;\n      };\n\n      const array = [];\n      for (const table of tables) {\n        const t1 = Editor.start(editor, table[1]);\n        const t2 = Editor.end(editor, table[1]);\n        const beforeT1 = Editor.before(editor, t1) || t1;\n        const afterT2 = Editor.after(editor, t2) || t2;\n\n        if (isBefore(s1, t1)) {\n          if (isBefore(s2, t2)) {\n            array.push([s1, beforeT1], [t1, s2]);\n            s1 = null as any;\n          } else if (isEqual(s2, t2)) {\n            array.push([s1, beforeT1], [t1, t2]);\n            s1 = null as any;\n          } else {\n            // s2>t2\n            array.push([s1, beforeT1], [t1, t2]);\n            s1 = afterT2;\n          }\n        } else if (isEqual(s1, t1)) {\n          if (isBefore(s2, t2)) {\n            array.push([t1, s2]);\n            s1 = null as any;\n          } else if (isEqual(s2, t2)) {\n            array.push([t1, t2]);\n            s1 = null as any;\n          } else {\n            // s2>t2\n            array.push([t1, t2]);\n            s1 = afterT2;\n          }\n        } else {\n          // s1>t1\n          if (isBefore(s2, t2)) {\n            array.push([s1, s2]);\n            s1 = null as any;\n          } else if (isEqual(s2, t2)) {\n            array.push([s1, t2]);\n            s1 = null as any;\n          } else {\n            // s2>t2\n            array.push([s1, t2]);\n            s1 = afterT2;\n          }\n        }\n        if (s1 == null) break;\n      }\n      // 处理完表格后还剩下的区域，如果符合条件，那么直接加入range数组\n      if (s1 != null && isBefore(s1, s2)) {\n        array.push([s1, s2]);\n      }\n      return array;\n    };\n\n    const ranges = splitRange() || [];\n    for (const r of ranges.reverse()) {\n      const range = {\n        anchor: r[0],\n        focus: r[1],\n      };\n      if (Range.isCollapsed(range)) continue;\n      const isTable = Editor.above(editor, {\n        at: range,\n        match(n) {\n          return TableLogic.isTable(n);\n        },\n      });\n      if (isTable) {\n        // 如果表格被全选，那么直接删除\n        const tableRange = Editor.range(editor, isTable[1]);\n        const tInte = Range.intersection(range, tableRange);\n        if (tInte && Range.equals(tInte, tableRange)) {\n          Transforms.removeNodes(editor, { at: isTable[1] });\n          continue;\n        }\n        const tds = Array.from(\n          Editor.nodes(editor, {\n            at: range,\n            match(n) {\n              return TableLogic.isTd(n);\n            },\n          })\n        );\n        for (const td of tds) {\n          const tdRange = Editor.range(editor, td[1]);\n          const inte = Range.intersection(tdRange, range);\n          if (inte && Range.isExpanded(inte)) {\n            // 对于被全选的td，用下面的方法删除不会造成内存泄漏\n            if (Range.equals(inte, tdRange)) {\n              for (const [, childP] of Node.children(editor, td[1], {\n                reverse: true,\n              })) {\n                Transforms.removeNodes(editor, { at: childP });\n              }\n            } else {\n              // 对于非全选的单元格，只好用这种方式删\n              Transforms.setSelection(editor, inte);\n              Transforms.delete(editor, {\n                hanging: true,\n                voids: true,\n              });\n            }\n          }\n        }\n      } else {\n        Transforms.setSelection(editor, range);\n        Transforms.delete(editor, {\n          hanging: true,\n          voids: true,\n        });\n      }\n    }\n\n    Transforms.select(editor, Range.start(originSelection));\n  },\n  isTextWrapper(node: Node) {\n    return Element.isElement(node) && TextWrappers.includes(node.type);\n  },\n  // 获取包裹光标文本位置的li或者td\n  getFirstAboveElementType(editor: EditorType) {\n    if (editor.selection) {\n      const textWrapper = utils.getParent(editor, editor.selection.anchor.path);\n      if (!textWrapper[0]) return null;\n      const element = utils.getParent(editor, textWrapper[1]);\n      if (!element[0]) return null;\n\n      return (\n        (Element.isElement(element[0]) && element[0].type) ||\n        (Editor.isEditor(element[0]) && CET.EDITOR)\n      );\n    }\n  },\n  getPath(path: Path, type: \"pre\" | \"next\" | \"parent\") {\n    const basePath = path.slice(0, path.length - 1);\n    const t = path[path.length - 1];\n    return type == \"parent\"\n      ? basePath\n      : [...basePath, type == \"pre\" ? t - 1 : t + 1];\n  },\n  getNodeByPath(editor: EditorType, path: Path) {\n    try {\n      return Editor.node(editor, path);\n    } catch (error) {\n      return [];\n    }\n  },\n  getParent(editor: EditorType, path: Path) {\n    return this.getNodeByPath(editor, this.getPath(path, \"parent\"));\n  },\n  hasNotSelectedAnyTd(editor: EditorType) {\n    const hasSelectedTd = TableLogic.getFirstSelectedTd(editor);\n    return hasSelectedTd == null && !TableLogic.isInTable(editor);\n  },\n};\n","/* eslint-disable eqeqeq */\nimport { DOMAttributes } from \"react\";\nimport { useEffect } from \"react\";\nimport { Editor, Node, Element, Transforms, Path, NodeEntry } from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useReadOnly,\n  useSlateStatic,\n} from \"slate-react\";\nimport { CET, CustomElement, EditorType, Marks } from \"../common/Defines\";\nimport {\n  getEditingTdsPath,\n  getStrPathSetOfSelectedTds,\n  setEditingTdsPath,\n  setStrPathSetOfSelectedTds,\n} from \"../common/globalStore\";\nimport { TableLogic } from \"./Table\";\n\nexport type customTdShape = {\n  start: boolean;\n  colSpan: number;\n  rowSpan: number;\n  row: number; // 在tdMap里的坐标\n  col: number; // 在tdMap里的坐标\n  originRow: number; // 在原来tbody里的坐标\n  originCol: number; // 在原来tbody里的坐标\n} & CustomElement;\n\ntype tdMapShape = Array<customTdShape[]>;\ntype getTdMapReturn = {\n  tdMap: tdMapShape;\n  startPoins: customTdShape[];\n};\n\nexport let tdMinWidth = 100;\nexport const tdMinHeight = 30;\n\nexport const TD: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  element,\n  children,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  useEffect(() => {\n    const path = ReactEditor.findPath(editor, element);\n    if (element.width == null || element.height == null) {\n      Transforms.setNodes(\n        editor,\n        {\n          width: element.width || tdMinWidth,\n          height: element.height || tdMinHeight,\n        },\n        {\n          at: path,\n        }\n      );\n    }\n    // 销毁时，删除状态\n    return () => {\n      const path = ReactEditor.findPath(editor, element);\n      const pathStr = path.join(\",\");\n      const selectedTds = getStrPathSetOfSelectedTds(editor);\n      const editingTds = getEditingTdsPath(editor);\n      selectedTds.delete(pathStr);\n      editingTds.delete(pathStr);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const path = ReactEditor.findPath(editor, element);\n    const pathStr = path.join(\",\");\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const editingTds = getEditingTdsPath(editor);\n    const { selected: nowSelected, tdIsEditing } = element;\n\n    if (tdIsEditing === true) {\n      editingTds.add(pathStr);\n    } else {\n      editingTds.delete(pathStr);\n    }\n\n    if (nowSelected === true) {\n      selectedTds.add(pathStr);\n    } else {\n      selectedTds.delete(pathStr);\n    }\n  });\n\n  const resizeTdX = (e: any) => {\n    let x = e.clientX;\n    let cell: any = null,\n      table: any = null;\n\n    for (let i = 0, paths = e.nativeEvent.path; i < paths.length; i++) {\n      const ele = paths[i];\n      if (ele.tagName == \"TD\") {\n        cell = ele;\n      }\n      if (ele.tagName == \"TABLE\") {\n        table = ele;\n        break;\n      }\n    }\n\n    if (cell == null || table == null) return;\n\n    const cellNode = ReactEditor.toSlateNode(editor, cell);\n    const cellPath = ReactEditor.findPath(editor, cellNode);\n    const tbody = Editor.above(editor, {\n      at: cellPath,\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    // 找到tdMap中在当前cell的最右边的cells\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    // 先找到当前的cell在tdMap中的位置\n    const [tdOriginRow, tdOriginCol] = cellPath.slice(cellPath.length - 2);\n    let targetCol: number = -1;\n    for (let i = 0; i < tdMap.length; i++) {\n      for (let j = 0; j < tdMap[i].length; j++) {\n        const td = tdMap[i][j];\n        if (td.originCol == tdOriginCol && td.originRow == tdOriginRow) {\n          targetCol = td.col + td.colSpan - 1;\n          break;\n        }\n      }\n      if (targetCol != -1) break;\n    }\n    if (targetCol == -1) return;\n\n    const cells: any[] = [];\n    for (let i = 0; i < tdMap.length; i++) {\n      const tdInMap = tdMap[i][targetCol];\n      const td = Editor.node(editor, [\n        ...tbody[1],\n        tdInMap.originRow,\n        tdInMap.originCol,\n      ]);\n      const tdDom: any = ReactEditor.toDOMNode(editor, td[0]);\n      tdDom.initX = tdDom.offsetWidth;\n      cells.push(tdDom);\n    }\n\n    // const tableInitWidth = table.offsetWidth;\n\n    const mouseMoveHandler = function (e: any) {\n      const dx = e.clientX - x;\n      cells.forEach((c) => {\n        c.style.maxWidth =\n          c.style.width =\n          c.style.minWidth =\n            (c.initX + dx < tdMinWidth ? tdMinWidth : c.initX + dx) + \"px\";\n      });\n      // table.style.width = tableInitWidth + dx + \"px\";\n    };\n\n    const mouseUpHandler = function () {\n      const trs = Array.from(table.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const width = parseInt(td.style.minWidth);\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (Element.isElement(tdNode) && tdNode.width != width) {\n            Transforms.setNodes(\n              editor,\n              { width },\n              { at: [...tbody[1], rowIndex, cellIndex] }\n            );\n          }\n        });\n      });\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", mouseUpHandler);\n    };\n\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n    document.addEventListener(\"mouseup\", mouseUpHandler);\n  };\n\n  const resizeTdY = (e: any) => {\n    let y = e.clientY;\n    let cell: any = null,\n      row: any = null,\n      table: any = null;\n\n    for (let i = 0, paths = e.nativeEvent.path; i < paths.length; i++) {\n      const ele = paths[i];\n      if (ele.tagName == \"TD\") {\n        cell = ele;\n      }\n      if (ele.tagName == \"TR\") {\n        row = ele;\n      }\n      if (ele.tagName == \"TABLE\") {\n        table = ele;\n        break;\n      }\n    }\n\n    if (cell == null || row == null || table == null) return;\n\n    const cellNode = ReactEditor.toSlateNode(editor, cell);\n    const cellPath = ReactEditor.findPath(editor, cellNode);\n    const tbody = Editor.above(editor, {\n      at: cellPath,\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    // 找到tdMap中在当前cell的最右边的cells\n    const { tdMap } = TdLogic.getTdMap(tbody);\n\n    // 先找到当前的cell在tdMap中的位置\n    const [tdOriginRow, tdOriginCol] = cellPath.slice(cellPath.length - 2);\n    let targetRow: number = -1;\n    for (let i = 0; i < tdMap.length; i++) {\n      for (let j = 0; j < tdMap[i].length; j++) {\n        const td = tdMap[i][j];\n        if (td.originCol == tdOriginCol && td.originRow == tdOriginRow) {\n          targetRow = td.row + td.rowSpan - 1;\n          break;\n        }\n      }\n      if (targetRow != -1) break;\n    }\n    if (targetRow == -1) return;\n\n    const cells: any[] = [];\n    for (let i = 0; i < tdMap[0].length; i++) {\n      const tdInMap = tdMap[targetRow][i];\n      const td = Editor.node(editor, [\n        ...tbody[1],\n        tdInMap.originRow,\n        tdInMap.originCol,\n      ]);\n      const tdDom: any = ReactEditor.toDOMNode(editor, td[0]);\n      tdDom.initY = tdDom.offsetHeight;\n      cells.push(tdDom);\n    }\n\n    // const tableInitY = parseInt(window.getComputedStyle(table).minHeight);\n\n    const mouseMoveHandler = function (e: any) {\n      e.preventDefault();\n      const dy = e.clientY - y;\n      cells.forEach(\n        (c) =>\n          (c.style.minHeight =\n            c.style.height =\n            c.style.maxHeight =\n              (c.initY + dy <= tdMinHeight ? tdMinHeight : c.initY + dy) + \"px\")\n      );\n      // table.style.height = tableInitY + dy + \"px\";\n    };\n\n    const mouseUpHandler = function () {\n      const trs = Array.from(table.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const height = parseInt(td.style.height);\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (Element.isElement(tdNode) && tdNode.height != height) {\n            Transforms.setNodes(\n              editor,\n              { height },\n              { at: [...tbody[1], rowIndex, cellIndex] }\n            );\n          }\n        });\n      });\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", mouseUpHandler);\n    };\n\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n    document.addEventListener(\"mouseup\", mouseUpHandler);\n  };\n\n  const tdClick = () => {\n    // TdLogic.deselectAllTd(editor);\n    // const path = ReactEditor.findPath(editor, element);\n    // Transforms.setNodes(\n    //   editor,\n    //   {\n    //     tdIsEditing: true,\n    //   },\n    //   {\n    //     at: path,\n    //     mode: \"lowest\",\n    //     match(n) {\n    //       return TableLogic.isTd(n);\n    //     },\n    //   }\n    // );\n  };\n\n  const tdDbClick: DOMAttributes<any>[\"onDoubleClick\"] = (e) => {\n    if ((e.nativeEvent.target as any) != attributes.ref.current) {\n      return;\n    }\n    TdLogic.deselectAllTd(editor);\n\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        start: true,\n        selected: true,\n      },\n      {\n        at: path,\n      }\n    );\n    Transforms.deselect(editor);\n  };\n\n  return (\n    <td\n      {...attributes}\n      colSpan={element.colSpan}\n      rowSpan={element.rowSpan}\n      style={{\n        minWidth: element.width || tdMinWidth,\n        maxWidth: element.width || tdMinWidth,\n        width: element.width || tdMinWidth,\n        height: element.height || tdMinHeight,\n        color: element[Marks.Color] || \"unset\",\n        backgroundColor:\n          element.selected && !readOnly\n            ? \"rgba(180,215,255,.7)\"\n            : element[Marks.BGColor] || \"unset\",\n        textAlign: element[Marks.TextAlign] || \"unset\",\n        fontSize: element[Marks.FontSize] || \"unset\",\n        fontWeight: element[Marks.BOLD] ? \"bold\" : \"unset\",\n        fontStyle: element[Marks.ITALIC] ? \"italic\" : \"unset\",\n        textDecoration: `${element[Marks.Underline] ? \"underline\" : \"\"} ${\n          element[Marks.LineThrough] ? \"line-through\" : \"\"\n        }`,\n      }}\n      onClick={tdClick}\n      onDoubleClick={tdDbClick}\n    >\n      {children}\n      {!readOnly ? (\n        <>\n          <span\n            className=\"resizer\"\n            style={{\n              position: \"absolute\",\n              zIndex: 10,\n              width: 5,\n              right: 0,\n              top: 0,\n              height: \"100%\",\n              cursor: \"col-resize\",\n              userSelect: \"none\",\n            }}\n            contentEditable={false}\n            onMouseDown={resizeTdX}\n          ></span>\n          <span\n            className=\"resizer\"\n            style={{\n              position: \"absolute\",\n              zIndex: 10,\n              width: \"100%\",\n              height: 5,\n              left: 0,\n              bottom: 0,\n              cursor: \"row-resize\",\n              userSelect: \"none\",\n            }}\n            contentEditable={false}\n            onMouseDown={resizeTdY}\n          ></span>\n        </>\n      ) : null}\n    </td>\n  );\n};\n\nexport const TdLogic = {\n  /**\n   * 获得一个以改造过后的td（fillTd）对象构成的矩阵\n   * 在这个矩阵中，如果某个fillTd占有横向两个单位，纵向两个单位，那么这四个位置都将填充此fillTd对象。\n   * 举例：td1-3,td4,td-6都是colSpan=rowSpan=1的单元格，那么他们在矩阵中只占有一个位置，而td5的colSpan=rowSpan=2，所以占四个位置\n   * 而且，这四个位置的td5都是同一个对象\n   * [\n   *  td1,td2,td3,\n   *  td4,(td5),(td5),\n   *  td6,(td5),(td5)\n   * ]\n   */\n  getTdMap(tbody: NodeEntry): getTdMapReturn {\n    const trs = tbody[0].children as Element[];\n    const startPoins: customTdShape[] = [];\n    const tdMap: any = new Array(trs.length).fill(0).map(() => []);\n    for (let i = 0; i < trs.length; i++) {\n      const tr = trs[i];\n      const tds = tr.children;\n      for (let j = 0; j < tds.length; j++) {\n        const td = tds[j] as Element;\n        if (!TableLogic.isTd(td)) continue;\n        let colStart = tdMap[i].findIndex((o: any) => o == null);\n        colStart = colStart == -1 ? tdMap[i].length : colStart;\n        let colEnd = colStart + (td.colSpan || 1),\n          rowStart = i,\n          rowEnd = rowStart + (td.rowSpan || 1);\n        const fillTd = {\n          ...td,\n          colSpan: td.colSpan || 1,\n          rowSpan: td.rowSpan || 1,\n          row: i,\n          col: colStart,\n          originRow: i,\n          originCol: j,\n        };\n        // 如果tdIsEditing存在，那么表示只是单一的对单元格进行点击\n        if (td.start || td.tdIsEditing)\n          startPoins.push(fillTd as customTdShape);\n\n        for (let row = rowStart; row < rowEnd; row++) {\n          for (let col = colStart; col < colEnd; col++) {\n            tdMap[row][col] = fillTd;\n          }\n        }\n      }\n    }\n    return {\n      tdMap,\n      startPoins,\n    };\n  },\n  // 从tdMap中获得选中的td\n  getSelectedTdInTdMap(tbody: NodeEntry) {\n    const { tdMap, startPoins } = TdLogic.getTdMap(tbody);\n    if (startPoins.length < 1) return null;\n    if (startPoins.length == 1) startPoins[1] = startPoins[0];\n    if (!tdMap) return null;\n\n    const helper = (\n      {\n        colStart,\n        colEnd,\n        rowStart,\n        rowEnd,\n      }: {\n        colStart: number;\n        colEnd: number;\n        rowStart: number;\n        rowEnd: number;\n      },\n      selectedTdMap: Map<customTdShape, number>\n    ) => {\n      for (let i = rowStart; i < rowEnd; i++) {\n        for (let j = colStart; j < colEnd; j++) {\n          const td = tdMap[i][j];\n          if (!selectedTdMap.has(td)) {\n            selectedTdMap.set(td, 1);\n            helper(\n              {\n                colStart: Math.min(td.col, colStart),\n                colEnd: Math.max(colEnd, td.col + td.colSpan),\n                rowStart: Math.min(td.row, rowStart),\n                rowEnd: Math.max(td.row + td.rowSpan, rowEnd),\n              },\n              selectedTdMap\n            );\n            return;\n          }\n        }\n      }\n    };\n\n    const [a, b] = startPoins;\n    const selectedTd = new Map<customTdShape, number>([\n      [a, 1],\n      [b, 1],\n    ]);\n    helper(\n      {\n        colStart: Math.min(a.col, b.col),\n        colEnd: Math.max(a.col + a.colSpan, b.col + b.colSpan),\n        rowStart: Math.min(a.row, b.row),\n        rowEnd: Math.max(a.row + a.rowSpan, b.row + b.rowSpan),\n      },\n      selectedTd\n    );\n    return selectedTd;\n  },\n  deselectAllTd(editor: EditorType) {\n    const selectedTdsPath = TableLogic.getSelectedTdsPath(editor);\n    for (const path of selectedTdsPath) {\n      Transforms.unsetNodes(editor, [\"selected\", \"start\", \"tdIsEditing\"], {\n        at: path,\n      });\n    }\n    setStrPathSetOfSelectedTds(new Set());\n\n    const editingTdsPath = TableLogic.getEditingTdsPath(editor);\n    for (const tdStrPath of editingTdsPath) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      Transforms.unsetNodes(editor, [\"selected\", \"start\", \"tdIsEditing\"], {\n        at: path,\n      });\n    }\n    setEditingTdsPath(new Set());\n  },\n  /**\n   * 找到下一个位置的td\n   */\n  findTargetTd(\n    editor: EditorType,\n    td: NodeEntry,\n    direct: \"left\" | \"right\" | \"up\" | \"down\",\n    selectAll: boolean = false\n  ) {\n    if (!td) return;\n    // 首先判断当前是不是只有一个单元格被选中\n    const tbody = Editor.above(editor, {\n      at: td[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody || !Element.isElement(tbody[0])) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n\n    let row, col;\n    // 获得当前单元格\n    tdMap.some((tr, i) => {\n      return tr.some((td, j) => {\n        if (td.tdIsEditing === true) {\n          row = i;\n          col = j;\n          return true;\n        }\n        return false;\n      });\n    });\n    if (row == null || col == null) return;\n    const startTd = tdMap[row][col];\n\n    let targetCol: number = col,\n      targetRow: number = row;\n    if (direct == \"left\") {\n      targetCol =\n        col == 0\n          ? row == 0\n            ? 0\n            : ((targetRow = row - 1), tdMap[0].length - 1)\n          : col - 1;\n    } else if (direct == \"right\") {\n      const rightX = col + startTd.colSpan;\n      targetCol =\n        rightX >= tdMap[0].length\n          ? row == tdMap.length - 1\n            ? col\n            : ((targetRow = row + 1), 0)\n          : rightX;\n    } else if (direct == \"up\") {\n      targetRow = row == 0 ? 0 : row - 1;\n    } else if (direct == \"down\") {\n      targetRow =\n        row + startTd.rowSpan >= tdMap.length ? row : row + startTd.rowSpan;\n    }\n    const targetTd = tdMap[targetRow][targetCol];\n\n    const nextTdPath = [...tbody[1], targetTd.originRow, targetTd.originCol];\n    const nextTd = Editor.node(editor, nextTdPath);\n    if (nextTd) {\n      Transforms.select(\n        editor,\n        selectAll\n          ? Editor.range(editor, nextTd[1])\n          : [\"down\", \"right\"].includes(direct)\n          ? Editor.start(editor, nextTd[1])\n          : Editor.end(editor, nextTd[1])\n      );\n      TdLogic.setTdIsEditing(editor, nextTd[1]);\n    }\n  },\n  setTdIsEditing(editor: EditorType, tdPath: Path) {\n    TdLogic.deselectAllTd(editor);\n\n    Transforms.setNodes(\n      editor,\n      {\n        tdIsEditing: true,\n        start: true,\n      },\n      { at: tdPath }\n    );\n  },\n  clearTd(editor: EditorType) {\n    // 清空带有selected属性的td\n    const selectedTds = TableLogic.getSelectedTds(editor);\n    for (const [, p] of selectedTds) {\n      for (const [, childP] of Node.children(editor, p, {\n        reverse: true,\n      })) {\n        Transforms.removeNodes(editor, { at: childP });\n      }\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: p });\n    }\n  },\n};\n","/* eslint-disable eqeqeq */\nimport _ from \"lodash\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport {\n  Node,\n  NodeEntry,\n  Element,\n  Text,\n  Range,\n  Transforms,\n  Editor,\n  Path,\n  Point,\n} from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useReadOnly,\n  useSlateStatic,\n} from \"slate-react\";\nimport { CET, CustomElement, EditorType, Marks } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\nimport { EditorContext } from \"../RichEditor\";\nimport { customTdShape, TdLogic, tdMinHeight, tdMinWidth } from \"./Td\";\nimport {\n  getStrPathSetOfSelectedTds,\n  getEditingTdsPath,\n  setStrPathSetOfSelectedTds,\n  setEditingTdsPath,\n  setCopyedCells,\n  setCopyedMaxRowAndCol,\n  getCopyedCells,\n  getCopyedMaxRowAndCol,\n  getCopyedContent,\n} from \"../common/globalStore\";\nimport { message } from \"antd\";\nimport { useEffect } from \"react\";\ndeclare module \"react\" {\n  interface HTMLAttributes<T> extends DOMAttributes<T> {\n    border?: any;\n  }\n}\n\ntype refShape = {\n  isBeginSelectTd: boolean;\n  mouseDownStartPoint: any;\n  preMouseOnTdPath: Path | null; //  鼠标移动时，记录上一次所处的td\n  lastSelectedPaths: Path[];\n  initX: number;\n  initY: number;\n  prePath: Path | null;\n};\n\nexport const Table: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const ref = useRef<refShape>({\n    isBeginSelectTd: false,\n    mouseDownStartPoint: null,\n    initX: 0,\n    initY: 0,\n    lastSelectedPaths: [],\n    preMouseOnTdPath: null,\n    prePath: null,\n  });\n\n  const { savedMarks, setSavedMarks } = useContext(EditorContext);\n\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  // 每次渲染时，判断自己当前的容器宽度是否和之前保存的宽度一致，如果不一致，则计算内部所有td的新的宽度\n  const reCalcTdWidth = useCallback(() => {\n    const selfDom = attributes.ref.current;\n    if (!selfDom) return;\n    const tableDom = selfDom;\n    const nowWrapperWidth = selfDom?.offsetWidth - 2;\n    const preWrapperWidth = element.wrapperWidthWhenCreated;\n    if (!tableDom || nowWrapperWidth == null || preWrapperWidth == null) return;\n    if (preWrapperWidth != nowWrapperWidth) {\n      const tableNode = ReactEditor.toSlateNode(editor, selfDom);\n      if (!tableNode) return;\n      const tablePath = ReactEditor.findPath(editor, tableNode);\n      if (!tablePath) return;\n      const trs = Array.from(tableDom.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (!Element.isElement(tdNode)) return;\n          const width =\n            ((tdNode.width || tdMinWidth) / preWrapperWidth) * nowWrapperWidth;\n          Transforms.setNodes(\n            editor,\n            { width },\n            { at: [...tablePath, 0, rowIndex, cellIndex] }\n          );\n        });\n      });\n      Transforms.setNodes(\n        editor,\n        { wrapperWidthWhenCreated: nowWrapperWidth },\n        { at: tablePath }\n      );\n    }\n  }, [attributes.ref, editor, element.wrapperWidthWhenCreated]);\n\n  useEffect(() => {\n    var ro = new ResizeObserver((entries) => {\n      window.requestAnimationFrame(() => {\n        if (!Array.isArray(entries) || !entries.length) {\n          return;\n        }\n        // your code\n        reCalcTdWidth();\n      });\n    });\n    const container = document.querySelector(\".cyEditor__content\");\n    container && ro.observe(container);\n\n    return () => {\n      container && ro.unobserve(container);\n    };\n  }, [reCalcTdWidth]);\n\n  useEffect(() => {\n    // reCalcTdWidth();\n    // 每次渲染时，判断自己的位置和之前的位置相比是否变化，如果变化，需要重新计算自己内部td的状态\n    const path = ReactEditor.findPath(editor, element);\n    if (\n      ref.current.prePath != null &&\n      !Path.equals(path, ref.current.prePath)\n    ) {\n      TableLogic.resetSelectedTds(editor);\n    }\n    ref.current.prePath = path;\n  });\n\n  // 找到需要取消选择和新选择的td的完整的path\n  const findPath = (nowSelectedTds: Path[], preSelectedTds: Path[]) => {\n    const nowSelectedTdsPathSet = new Set(\n      nowSelectedTds.map((o) => o.slice(o.length - 2).join(\",\"))\n    );\n\n    const preSelectedTdsPathSet = new Set(\n      preSelectedTds.map((o) => o.slice(o.length - 2).join(\",\"))\n    );\n\n    const deselectedPath = preSelectedTds.filter((path) => {\n      return !nowSelectedTdsPathSet.has(path.slice(path.length - 2).join(\",\"));\n    });\n\n    const newSelectedPath = nowSelectedTds.filter((path) => {\n      return !preSelectedTdsPathSet.has(path.slice(path.length - 2).join(\",\"));\n    });\n\n    return { deselectedPath, newSelectedPath };\n  };\n\n  const selectTd = _.debounce((pa: Point, pb: Point) => {\n    const commonNode = Node.common(editor, pa.path, pb.path);\n    if (!commonNode) return;\n    const pbTd = Editor.above(editor, {\n      at: pb,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (!pbTd) return;\n\n    const preMouseOnTdPath = ref.current.preMouseOnTdPath;\n    if (preMouseOnTdPath && Path.equals(preMouseOnTdPath, pbTd[1])) return;\n    ref.current.preMouseOnTdPath = pbTd[1];\n\n    const paTd = Editor.above(editor, {\n      at: pa,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (!paTd) return;\n\n    // 取消选择上一次选中的td\n    const deselectTds = () => {\n      ref.current.lastSelectedPaths.forEach((p) => {\n        Transforms.unsetNodes(editor, [\"selected\", \"start\"], {\n          at: p,\n        });\n      });\n      ref.current.lastSelectedPaths = [];\n    };\n\n    ref.current.lastSelectedPaths.forEach((p) => {\n      const td = Editor.node(editor, p);\n      if (td && Element.isElement(td[0]) && td[0].start == true) {\n        Transforms.unsetNodes(editor, [\"start\"], {\n          at: p,\n        });\n      }\n    });\n\n    // 取消单个单元格选中 2021-10-05\n    // if (Path.equals(paTd[1], pbTd[1])) {\n    //   deselectTds();\n    //   // 说明选区在一个td里\n    //   Transforms.setNodes(\n    //     editor,\n    //     { selected: true, start: true },\n    //     { at: paTd[1] }\n    //   );\n    //   ref.current.lastSelectedPaths = [paTd[1]];\n    //   return;\n    // }\n\n    if (\n      !Element.isElement(commonNode[0]) ||\n      (commonNode[0].type != CET.TBODY && commonNode[0].type != CET.TR)\n    ) {\n      deselectTds();\n      return;\n    }\n\n    // 找到两个点同一层级的td\n    const tda = Editor.above(editor, {\n      at: pa,\n      mode: \"highest\",\n      match(n, p) {\n        return TableLogic.isTd(n) && p.length > commonNode[1].length;\n      },\n    });\n    if (!tda) return;\n    Transforms.setNodes(\n      editor,\n      { start: true, selected: true },\n      { at: tda[1] }\n    );\n    const tdb = Editor.above(editor, {\n      at: pb,\n      mode: \"highest\",\n      match(n, p) {\n        return TableLogic.isTd(n) && p.length > commonNode[1].length;\n      },\n    });\n    if (!tdb) return;\n    Transforms.setNodes(\n      editor,\n      { start: true, selected: true },\n      { at: tdb[1] }\n    );\n\n    const tbody = Editor.above(editor, {\n      at: tda[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody || !Element.isElement(tbody[0])) return;\n\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n\n    if (selectedTds == null) return;\n    const nowTdsPath = Array.from(selectedTds.keys()).map((o) => [\n      ...tbody[1],\n      o.originRow,\n      o.originCol,\n    ]);\n\n    const { deselectedPath, newSelectedPath } = findPath(\n      nowTdsPath,\n      ref.current.lastSelectedPaths\n    );\n\n    for (const path of newSelectedPath) {\n      Transforms.setNodes(editor, { selected: true }, { at: path });\n    }\n\n    for (const path of deselectedPath) {\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: path });\n    }\n\n    ref.current.lastSelectedPaths = nowTdsPath;\n\n    Transforms.deselect(editor);\n  }, 3);\n\n  const handleTableMouseDown = (e: any) => {\n    // 防止事件冒泡到父元素的td\n    e.stopPropagation();\n    try {\n      TdLogic.deselectAllTd(editor);\n\n      const slateNode = ReactEditor.toSlateNode(editor, e.target);\n      const slateNodePath = ReactEditor.findPath(editor, slateNode);\n      ref.current.initX = e.clientX;\n      ref.current.initY = e.clientY;\n\n      ref.current.preMouseOnTdPath = null;\n      ref.current.lastSelectedPaths = [];\n\n      const tdDom = e.nativeEvent.path.find((e: any) => {\n        return e.tagName == \"TD\";\n      });\n      if (!tdDom) return;\n\n      const tdPath = ReactEditor.findPath(\n        editor,\n        ReactEditor.toSlateNode(editor, tdDom)\n      );\n      TdLogic.setTdIsEditing(editor, tdPath);\n\n      if (\n        !readOnly &&\n        ![\"resizer\", \"columnSelector\"].includes(e.target.className)\n      ) {\n        ref.current.isBeginSelectTd = true;\n        ref.current.preMouseOnTdPath = ref.current.mouseDownStartPoint =\n          slateNodePath;\n        ref.current.lastSelectedPaths = TableLogic.getSelectedTdsPath(editor);\n\n        const mousemoveFunc = (e: any) => {\n          try {\n            // 如果只是在同一个单元格内移动，那么不取消默认行为（也就是允许有选区）\n            if ([\"resizer\", \"columnSelector\"].includes(e.target.className)) {\n              utils.removeAllRange();\n              e.preventDefault();\n            } else {\n              // 如果移动到其他单元格，则取消\n              const parent = utils.findParent(e.target, tdDom);\n              if (parent != tdDom) {\n                utils.removeAllRange();\n                e.preventDefault();\n              }\n            }\n\n            // 如果移动距离不超过1，那么不进入逻辑\n            if (\n              ref.current.isBeginSelectTd &&\n              (Math.abs(e.clientX - ref.current.initX) > 1 ||\n                Math.abs(e.clientY - ref.current.initY) > 1)\n            ) {\n              const slateNode = ReactEditor.toSlateNode(editor, e.target);\n              const path = ReactEditor.findPath(editor, slateNode);\n              selectTd(\n                Editor.point(editor, ref.current.mouseDownStartPoint),\n                Editor.point(editor, path)\n              );\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        };\n        const mouseupFunc = (e: any) => {\n          ref.current.isBeginSelectTd = false;\n          window.removeEventListener(\"mousemove\", mousemoveFunc);\n          window.removeEventListener(\"mouseup\", mouseupFunc);\n        };\n\n        window.addEventListener(\"mousemove\", mousemoveFunc);\n        window.addEventListener(\"mouseup\", mouseupFunc);\n      }\n    } catch (error) {}\n  };\n\n  const handleTableMouseUp = () => {\n    if (savedMarks) {\n      const copyMarks: any = {};\n      const hasSelectTd = TableLogic.getSelectedTdsSize(editor);\n      for (const key of Object.values(Marks)) {\n        copyMarks[key] = savedMarks[key];\n      }\n      if (hasSelectTd > 0) {\n        const selectedTdsPath = TableLogic.getSelectedTdsPath(editor);\n        for (const path of selectedTdsPath) {\n          Transforms.setNodes(editor, copyMarks, {\n            at: path,\n          });\n        }\n        setSavedMarks(null);\n        return;\n      }\n    }\n  };\n\n  const ui = (\n    <table\n      {...attributes}\n      style={{\n        display: \"block\",\n        tableLayout: \"auto\",\n        wordBreak: \"break-all\",\n        overflowX: \"auto\",\n        overflowY: \"hidden\",\n        borderCollapse: \"collapse\",\n        position: \"relative\",\n      }}\n      onMouseDown={handleTableMouseDown}\n      onMouseUp={handleTableMouseUp}\n    >\n      {children}\n    </table>\n  );\n  return ui;\n};\n\nconst getEditingOrSelectedTdBelongTable = (editor: Editor) => {\n  const td = TableLogic.getFirstSelectedTd(editor);\n  let table;\n  if (td) {\n    table = Editor.above(editor, {\n      mode: \"lowest\",\n      at: td[1],\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n  } else if (editor.selection) {\n    table = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n  }\n  return table;\n};\n\nexport const TableLogic = {\n  model: [\n    {\n      type: CET.TABLE,\n      children: [\n        {\n          type: CET.TBODY,\n          children: new Array(100).fill(0).map((item, fatherIndex) => {\n            return {\n              type: CET.TR,\n              children: new Array(10).fill(0).map((item, index) => {\n                return {\n                  type: CET.TD,\n                  width: 100,\n                  height: 50,\n                  children: [\n                    {\n                      type: CET.DIV,\n                      children: [{ text: `string${fatherIndex}-${index}` }],\n                    },\n                  ],\n                };\n              }),\n            };\n          }),\n        },\n      ],\n    },\n    {\n      type: CET.DIV,\n      children: [{ text: \"1\" }],\n    },\n  ],\n  isSelectedTd(n: Node) {\n    return TableLogic.isTd(n) && n.selected == true;\n  },\n  isTable(node: Node): node is Element {\n    return Element.isElement(node) && CET.TABLE == node.type;\n  },\n  isTd(node: Node): node is Element {\n    return Element.isElement(node) && [CET.TD].includes(node.type);\n  },\n  // 判断当前selection是否在表格内\n  isInTable(editor: EditorType) {\n    if (!editor.selection) return false;\n\n    const {\n      focus: { path: fPath },\n      anchor: { path: aPath },\n    } = editor.selection;\n\n    let rel = Editor.above(editor, {\n      at: fPath,\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n\n    if (rel) return true;\n\n    rel = Editor.above(editor, {\n      at: aPath,\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n\n    if (rel) return true;\n\n    return false;\n  },\n  isInTd(editor: EditorType) {\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      return utils.getFirstAboveElementType(editor) == CET.TD;\n    }\n    return false;\n  },\n  normalizeTable(editor: EditorType, nodeEntry: NodeEntry) {\n    const [node, path] = nodeEntry;\n\n    if (Element.isElement(node) && [CET.TABLE].includes(node.type)) {\n      // 如果table的子元素里含有其他非tbody的标签，删除\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (child.type != CET.TBODY) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n    }\n\n    // tbody校验规则\n    if (Element.isElement(node) && [CET.TBODY].includes(node.type)) {\n      // 如果tbody的父元素不是table，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && parent.type == CET.TABLE)) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (child.type != CET.TR) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n    }\n\n    // tr校验规则\n    if (Element.isElement(node) && CET.TR == node.type) {\n      // 如果父元素不为tbody，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && [CET.TBODY].includes(parent.type))) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (node.shouldEmpty) continue;\n        if (child.type != CET.TD) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n      if (node.children.length === 0) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: [...path, 0] });\n        Transforms.setNodes(editor, { shouldEmpty: true }, { at: path });\n        return true;\n      }\n      if (node.children.length == 1 && Node.child(node, 0).type != CET.TD) {\n        Transforms.setNodes(editor, { shouldEmpty: true }, { at: path });\n        return true;\n      } else {\n        if (node.children.length > 1) {\n          for (const [child, childP] of Node.children(editor, path, {\n            reverse: true,\n          })) {\n            if (Text.isText(child)) {\n              Transforms.removeNodes(editor, { at: childP });\n              return true;\n            }\n          }\n        }\n\n        Transforms.setNodes(editor, { shouldEmpty: false }, { at: path });\n        return true;\n      }\n    }\n    // td校验\n    if (Element.isElement(node) && CET.TD == node.type) {\n      // 如果父元素不是tr，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && [CET.TR].includes(parent.type))) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      // 如果没有子元素，那么默认添加一个\n      if (\n        node.children.length == 1 &&\n        Text.isText(Node.child(node, 0)) &&\n        Editor.string(editor, path, { voids: true }) == \"\"\n      ) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"\" }],\n          },\n          {\n            at: [...path, 0],\n          }\n        );\n        return true;\n      }\n    }\n  },\n  tabEvent(editor: EditorType) {\n    const td = TableLogic.getEditingTd(editor);\n    if (!td) return;\n\n    TdLogic.findTargetTd(editor, td, \"right\", true);\n  },\n  shiftTabEvent(editor: EditorType) {\n    const td = TableLogic.getEditingTd(editor);\n    if (!td) return;\n\n    Transforms.deselect(editor);\n    TdLogic.findTargetTd(editor, td, \"left\", true);\n  },\n  deleteRow(editor: EditorType) {\n    // 删除选区对应的列\n    let deleteVArea: number[] = [Infinity, -Infinity];\n    const selectedTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    if (!selectedTd) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    if (!tdMap) return;\n    const selectedTds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || []\n    );\n    if (selectedTds.length == 0) return;\n\n    selectedTds.forEach((td) => {\n      deleteVArea[0] = Math.min(deleteVArea[0], td.row);\n      deleteVArea[1] = Math.max(deleteVArea[1], td.row + td.rowSpan);\n    });\n\n    // 说明是整个表格所有行被删除\n    if (deleteVArea[1] - deleteVArea[0] == tdMap.length) {\n      // 直接删除表格\n      Transforms.removeNodes(editor, {\n        at: Path.parent(tbody[1]),\n      });\n      return;\n    }\n\n    const removePath = [];\n    for (let row = deleteVArea[0]; row < deleteVArea[1]; row++) {\n      removePath.unshift([...tbody[1], row]);\n      for (let col = 0; col < tdMap[row].length; col++) {\n        const td = tdMap[row][col];\n        td.rowSpan--;\n        const tdPath = [...tbody[1], td.originRow, td.originCol];\n        // 如果rowSpan被减去到0，说明这个cell在要删除的行里\n        if (td.rowSpan != 0) {\n          Transforms.setNodes(\n            editor,\n            {\n              rowSpan: td.rowSpan,\n            },\n            {\n              at: tdPath,\n            }\n          );\n        }\n        col += td.colSpan - 1;\n      }\n    }\n\n    // 再次遍历，找到那些起始点身处删除范围内，且rowSpan>0的\n    for (let row = deleteVArea[0]; row < deleteVArea[1]; row++) {\n      for (let col = 0; col < tdMap[row].length; col++) {\n        const td = tdMap[row][col];\n        if (\n          td.rowSpan > 0 &&\n          td.row >= deleteVArea[0] &&\n          td.row == row &&\n          td.col == col\n        ) {\n          const targetRow = deleteVArea[1];\n          const leftCol = tdMap[targetRow][td.col - 1];\n          if (leftCol) {\n            Transforms.moveNodes(editor, {\n              at: [...tbody[1], td.originRow, td.originCol],\n              to: [...tbody[1], targetRow, leftCol.originCol + 1],\n            });\n          } else {\n            Transforms.moveNodes(editor, {\n              at: [...tbody[1], td.originRow, td.originCol],\n              to: [...tbody[1], targetRow, 0],\n            });\n          }\n        }\n        col += td.colSpan - 1;\n      }\n    }\n\n    // 从最低点开始删除\n    removePath.forEach((path) => {\n      Transforms.removeNodes(editor, { at: path });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  deleteColumn(editor: EditorType) {\n    // 删除选区对应的列\n    let deleteHArea: number[] = [Infinity, -Infinity];\n    const selectedTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    if (!selectedTd) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    if (!tdMap) return;\n    const selectedTds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || []\n    );\n    if (selectedTds.length == 0) return;\n\n    selectedTds.forEach((td) => {\n      deleteHArea[0] = Math.min(deleteHArea[0], td.col);\n      deleteHArea[1] = Math.max(deleteHArea[1], td.col + td.colSpan);\n    });\n\n    // 说明是整个表格所有列被删除\n    if (deleteHArea[1] - deleteHArea[0] == tdMap[0].length) {\n      // 直接删除表格\n      Transforms.removeNodes(editor, {\n        at: Path.parent(tbody[1]),\n      });\n      return;\n    }\n\n    const removePath = [];\n    for (let col = deleteHArea[0]; col < deleteHArea[1]; col++) {\n      for (let row = 0; row < tdMap.length; row++) {\n        const td = tdMap[row][col];\n        td.colSpan--;\n        const tdPath = [...tbody[1], td.originRow, td.originCol];\n        if (td.colSpan == 0) {\n          removePath.push(tdPath);\n        } else {\n          Transforms.setNodes(\n            editor,\n            {\n              colSpan: td.colSpan,\n            },\n            {\n              at: tdPath,\n            }\n          );\n        }\n        row += td.rowSpan - 1;\n      }\n    }\n\n    // 从最低点开始删除\n    removePath.sort((a, b) => {\n      const arow = a[a.length - 2];\n      const brow = b[b.length - 2];\n      const acol = a[a.length - 1];\n      const bcol = b[b.length - 1];\n      return arow > brow ? -1 : arow == brow ? bcol - acol : 1;\n    });\n    removePath.forEach((path) => {\n      Transforms.removeNodes(editor, { at: path });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertColumn(\n    editor: EditorType,\n    type: \"before\" | \"after\",\n    count: number = 1\n  ) {\n    const nowTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    if (!nowTd) return;\n    const nowTr = Editor.parent(editor, nowTd[1]);\n    if (!nowTr) return;\n    const tbody = Editor.parent(editor, nowTr[1]);\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(tbody[0])\n    )\n      return;\n\n    const editorDom = ReactEditor.toDOMNode(editor, editor);\n\n    const getInsertCells = (): CustomElement[] => {\n      return _.cloneDeep(\n        new Array(count).fill(0).map(() => {\n          return _.cloneDeep({\n            type: CET.TD,\n            width: editorDom.offsetWidth / 10,\n            height: tdMinHeight,\n            children: [\n              {\n                type: CET.DIV,\n                children: [{ text: \"\" }],\n              },\n            ],\n          } as CustomElement);\n        })\n      );\n    };\n\n    // 首先找到第一插入点\n    const [nowTdRow, nowTdCol] = nowTd[1].slice(nowTd[1].length - 2);\n    let insertCol;\n    if (selectedTds && selectedTds.size > 0) {\n      insertCol = type == \"after\" ? -Infinity : Infinity;\n      for (const tdInTdMap of selectedTds.keys()) {\n        insertCol =\n          type == \"after\"\n            ? Math.max(insertCol, tdInTdMap.col + tdInTdMap.colSpan)\n            : Math.min(insertCol, tdInTdMap.col);\n      }\n    } else {\n      insertCol = -1;\n      for (let i = 0; i < tdMap[nowTdRow].length; i++) {\n        const td = tdMap[nowTdRow][i];\n        // 找到当前td在tdMap中的位置\n        if (td.originCol == nowTdCol && td.originRow == nowTdRow) {\n          insertCol = td.col + (type == \"after\" ? td.colSpan : 0);\n          break;\n        }\n      }\n    }\n    if (insertCol == null || !Number.isFinite(insertCol)) return;\n    // 从上到下遍历整个表格当前列\n    for (let row = 0; row < tdMap.length; row++) {\n      const downTd = tdMap[row][insertCol] as customTdShape;\n      // 如果不存在，那么说明是插在最后\n      if (!downTd) {\n        Transforms.insertNodes(editor, getInsertCells(), {\n          at: [\n            ...tbody[1],\n            row,\n            tbody[0]?.children?.[row]?.children?.length || 0,\n          ],\n        });\n        continue;\n      }\n      const downTdOriginPos = [...tbody[1], downTd.originRow, downTd.originCol];\n      if (downTd.col == insertCol) {\n        Transforms.insertNodes(editor, getInsertCells(), {\n          at: [...tbody[1], row, downTd.originCol],\n        });\n      } else {\n        Transforms.setNodes(\n          editor,\n          {\n            colSpan: downTd.colSpan + 1,\n          },\n          {\n            at: downTdOriginPos,\n          }\n        );\n        row += downTd.rowSpan - 1;\n      }\n    }\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertRow(editor: EditorType, type: \"after\" | \"before\", count: number = 1) {\n    const nowTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    // 如果没有选中的td，那么就从光标位置找\n    if (!nowTd) return;\n    const nowTr = Editor.parent(editor, nowTd[1]);\n    if (!nowTr) return;\n    const tbody = Editor.parent(editor, nowTr[1]);\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(tbody[0])\n    )\n      return;\n\n    const editorDom = ReactEditor.toDOMNode(editor, editor);\n\n    const insertNode = {\n      type: CET.TD,\n      width: editorDom.offsetWidth / 10,\n      height: tdMinHeight,\n      children: [\n        {\n          type: CET.DIV,\n          children: [{ text: \"\" }],\n        },\n      ],\n    };\n\n    // 首先找到第一插入点\n    const [nowTdRow, nowTdCol] = nowTd[1].slice(nowTd[1].length - 2);\n    let insertRow;\n    if (selectedTds && selectedTds.size > 0) {\n      insertRow = type == \"after\" ? -Infinity : Infinity;\n      for (const tdInTdMap of selectedTds.keys()) {\n        insertRow =\n          type == \"after\"\n            ? Math.max(insertRow, tdInTdMap.row + tdInTdMap.rowSpan)\n            : Math.min(insertRow, tdInTdMap.row);\n      }\n    } else {\n      insertRow = -1;\n      for (let i = 0; i < tdMap[nowTdRow].length; i++) {\n        const td = tdMap[nowTdRow][i];\n        // 找到当前td在tdMap中的位置\n        if (td.originCol == nowTdCol && td.originRow == nowTdRow) {\n          insertRow = td.row + (type == \"after\" ? td.rowSpan : 0);\n          break;\n        }\n      }\n    }\n    if (insertRow == -1 || !Number.isFinite(insertRow)) return;\n\n    const getInsertRow = (tdCount: number) => {\n      return new Array(count).fill(0).map(() => {\n        return _.cloneDeep({\n          type: CET.TR,\n          children: new Array(tdCount).fill(0).map(() => {\n            return _.cloneDeep(insertNode);\n          }),\n        });\n      });\n    };\n\n    // 最后一行的插入\n    if (tdMap[insertRow] == null) {\n      Transforms.insertNodes(editor, getInsertRow(tdMap[0].length), {\n        at: [...tbody[1], insertRow],\n      });\n      return;\n    }\n\n    // 找到tdMap中的当前行\n    let tdCount = 0;\n    for (let i = 0; i < tdMap[insertRow].length; i++) {\n      const td = tdMap[insertRow][i] as customTdShape;\n      if (td.row == insertRow) {\n        tdCount++;\n      } else {\n        Transforms.setNodes(\n          editor,\n          {\n            rowSpan: td.rowSpan + 1,\n          },\n          {\n            at: [...tbody[1], td.originRow, td.originCol],\n          }\n        );\n        i += td.colSpan - 1;\n      }\n    }\n\n    Transforms.insertNodes(editor, getInsertRow(tdCount), {\n      at: [...tbody[1], insertRow],\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  splitTd(editor: EditorType) {\n    const selectedTds = Editor.nodes(editor, {\n      at: [],\n      match(n) {\n        return (\n          TableLogic.isSelectedTd(n) ||\n          (Element.isElement(n) && n.tdIsEditing == true)\n        );\n      },\n    });\n    if (!selectedTds) return;\n\n    let tbody = null;\n    for (const [td, tdPath] of selectedTds) {\n      if (!Element.isElement(td)) continue;\n      Transforms.setNodes(editor, { colSpan: 1, rowSpan: 1 }, { at: tdPath });\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: tdPath });\n      if ((!td.colSpan || td.colSpan < 2) && (!td.rowSpan || td.rowSpan < 2))\n        continue;\n\n      if (!tbody) {\n        tbody = Editor.above(editor, {\n          at: tdPath,\n          mode: \"lowest\",\n          match(n) {\n            return Element.isElement(n) && n.type == CET.TBODY;\n          },\n        });\n        if (!tbody) continue;\n      }\n\n      const belongTr = Editor.parent(editor, tdPath),\n        tdCol = tdPath[tdPath.length - 1],\n        tdRow = tdPath[tdPath.length - 2],\n        tdColSpan = td.colSpan || 1,\n        tdRowSpan = td.rowSpan || 1;\n      let leftSumColSpan = 0;\n      for (let i = 0; i < tdCol; i++) {\n        leftSumColSpan =\n          leftSumColSpan + (belongTr[0]?.children?.[i]?.colSpan || 1);\n      }\n\n      // 找到当前tr应该插入新td的位置\n      const findInsertCol = (tr: NodeEntry) => {\n        let sumColSpan = 0;\n        for (let i = 0; i < tr[0].children.length; i++) {\n          sumColSpan = sumColSpan + (tr[0].children[i].colSpan || 1);\n          if (sumColSpan == leftSumColSpan) return i + 1;\n        }\n        return 0;\n      };\n\n      for (let row = tdRow, count = 0; count < tdRowSpan; count++, row++) {\n        const isInNowTr = row == tdRow;\n        const insertCol = findInsertCol(\n          Editor.node(editor, [...tbody[1], row])\n        );\n\n        // 插入几个td\n        const insertTdCount = tdColSpan - (isInNowTr ? 1 : 0);\n        Transforms.insertNodes(\n          editor,\n          new Array(insertTdCount).fill(0).map(() => {\n            return _.cloneDeep({\n              type: CET.TD,\n              children: [\n                {\n                  type: CET.DIV,\n                  children: [{ text: \"\" }],\n                },\n              ],\n            });\n          }),\n          {\n            at: [...tbody[1], row, insertCol + (isInNowTr ? 1 : 0)],\n          }\n        );\n      }\n      TableLogic.splitTd(editor);\n      TableLogic.resetSelectedTds(editor);\n      return;\n    }\n  },\n  mergeTd(editor: EditorType) {\n    const isOnlyOne = TableLogic.getSelectedTdsSize(editor) == 1;\n\n    const selectedTd = TableLogic.getFirstSelectedTd(editor);\n    if (!selectedTd || isOnlyOne == null) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (!selectedTds) return;\n    const tbodyPath = tbody[1];\n    const tds = Array.from(selectedTds?.keys());\n\n    tds.sort((a, b) => {\n      if (a.row > b.row) {\n        return 1;\n      }\n      if (a.row == b.row) {\n        return a.col - b.col;\n      }\n      return -1;\n    });\n\n    let firstTd = tds[0];\n    let maxColSpan = 0,\n      maxRowSpan = 0;\n    tds.forEach((td) => {\n      maxColSpan = Math.max(maxColSpan, td.colSpan + td.col - firstTd.col);\n      maxRowSpan = Math.max(maxRowSpan, td.rowSpan + td.row - firstTd.row);\n    });\n\n    const newTdPath = [...tbodyPath, firstTd.originRow, firstTd.originCol];\n    Transforms.setNodes(\n      editor,\n      {\n        colSpan: maxColSpan,\n        rowSpan: maxRowSpan,\n      },\n      { at: newTdPath }\n    );\n\n    tds.forEach((td) => {\n      if (td.col == firstTd.col && td.row == firstTd.row) return;\n      const tdPath = [...tbodyPath, td.originRow, td.originCol];\n      Transforms.setNodes(editor, { toBeDeleted: true }, { at: tdPath });\n      if (Editor.string(editor, tdPath, { voids: true }) === \"\") return;\n      const fragment = td.children;\n      Transforms.insertNodes(editor, fragment, {\n        at: [...newTdPath, Editor.node(editor, newTdPath)?.[0].children.length],\n      });\n    });\n\n    Transforms.removeNodes(editor, {\n      at: [],\n      match(n) {\n        return TableLogic.isTd(n) && n.toBeDeleted == true;\n      },\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  deleteTable(editor: EditorType) {\n    const table = getEditingOrSelectedTdBelongTable(editor);\n    if (!table) return;\n    Transforms.removeNodes(editor, { at: table[1] });\n    TableLogic.resetSelectedTds(editor);\n  },\n  getSelectedTdsPath(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const pathArr = [];\n    for (const tdStrPath of selectedTds) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      pathArr.push(path);\n    }\n    return pathArr;\n  },\n  getSelectedTds(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const tdArr = [];\n    for (const tdStrPath of selectedTds) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      const td = Editor.node(editor, path);\n      tdArr.push(td);\n    }\n    return tdArr;\n  },\n  getFirstSelectedTd(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const arr = Array.from(selectedTds).sort((a, b) =>\n      a > b ? 1 : a === b ? 0 : -1\n    );\n    if (arr.length == 0) return null;\n\n    const path: Path = arr[0].split(\",\").map((o) => +o);\n    const td = Editor.node(editor, path);\n    return td;\n  },\n  // 获取当前光标所处的td\n  getEditingTd(editor: EditorType) {\n    const [match] = Editor.nodes(editor, {\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n      mode: \"lowest\",\n    });\n    return match;\n  },\n  getEditingTdsPath(editor: EditorType): Set<string> {\n    return getEditingTdsPath(editor);\n  },\n  getSelectedTdsSize(editor: EditorType) {\n    return getStrPathSetOfSelectedTds(editor).size;\n  },\n  resetSelectedTds(editor: EditorType) {\n    const tdsPath = Array.from(\n      Editor.nodes(editor, {\n        at: [],\n        match(n) {\n          return TableLogic.isSelectedTd(n);\n        },\n      })\n    ).map((o) => o[1].join(\",\"));\n\n    setStrPathSetOfSelectedTds(new Set(tdsPath));\n\n    const editingTdsPath = Array.from(\n      Editor.nodes(editor, {\n        at: [],\n        match(n) {\n          return TableLogic.isTd(n) && n.start == true;\n        },\n      })\n    ).map((o) => o[1].join(\",\"));\n\n    setEditingTdsPath(new Set(editingTdsPath));\n  },\n  copyCells(editor: EditorType) {\n    const selectedTds = TableLogic.getSelectedTds(editor);\n    setCopyedCells(\n      selectedTds.sort((a, b) => {\n        const [arow, acol] = a[1].slice(a[1].length - 2);\n        const [brow, bcol] = b[1].slice(b[1].length - 2);\n        return arow > brow ? 1 : arow === brow ? acol - bcol : -1;\n      })\n    );\n    const tbody = Editor.above(editor, {\n      at: selectedTds[0][1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const tds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || ([] as customTdShape[])\n    );\n    const { startPoins } = TdLogic.getTdMap(tbody);\n    let areaWidth = 0,\n      areaHeight = 0;\n    tds.forEach((td) => {\n      const { row, col } = td;\n      areaWidth = Math.max(\n        col + (td.colSpan || 1) - startPoins[0].col,\n        areaWidth\n      );\n      areaHeight = Math.max(\n        row + (td.rowSpan || 1) - startPoins[0].row,\n        areaHeight\n      );\n    });\n    setCopyedMaxRowAndCol({\n      copyedAreaWidth: areaWidth,\n      copyedAreaHeight: areaHeight,\n    });\n  },\n  isSelectTableAllTd(editor: EditorType) {\n    const tds = TableLogic.getSelectedTds(editor);\n    if (tds.length <= 0) return false;\n\n    const td = tds[0];\n    const [table] = Editor.nodes(editor, {\n      at: td[1],\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n    if (!table) return false;\n\n    const tdLength = Array.from(Node.descendants(table[0])).filter((node) => {\n      return node[0].type === CET.TD;\n    }).length;\n\n    return tdLength === tds.length;\n  },\n  pasteCells(editor: EditorType) {\n    const copyedContent = getCopyedContent();\n    const copyedCells = getCopyedCells();\n    if (copyedContent && !copyedCells) {\n      // 将复制的内容全部加入到选择的td中\n      const selectedTdsPath = Array.from(TableLogic.getSelectedTdsPath(editor));\n      TdLogic.clearTd(editor);\n      for (const path of selectedTdsPath) {\n        Transforms.insertNodes(\n          editor,\n          _.cloneDeep(utils.filterCopyedContent(copyedContent)),\n          {\n            at: [...path, 0],\n          }\n        );\n        Transforms.removeNodes(editor, {\n          at: [...path, Array.from(Node.children(editor, path)).length - 1],\n        });\n      }\n      return;\n    }\n    // 检查复制的单元格区域能否完全覆盖目标区域\n    if (!copyedCells) return;\n    const { copyedAreaWidth: areaWidth, copyedAreaHeight: areaHeight } =\n      getCopyedMaxRowAndCol();\n    const selectedTds = Array.from(TableLogic.getSelectedTds(editor));\n    const tbody = Editor.above(editor, {\n      at: selectedTds[0][1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    // 如果复制的单元格只有一个，那么将选中的单元格的内容全部替换成复制的单元格内容\n    if (copyedCells.length == 1) {\n      const copyedTd = copyedCells[copyedCells.length - 1];\n      if (!copyedTd) return;\n      selectedTds.forEach((td) => {\n        let childLength = td[0].children.length;\n        Transforms.insertNodes(editor, _.cloneDeep(copyedTd[0].children), {\n          at: [...td[1], 0],\n        });\n        for (const [, childP] of Node.children(editor, td[1], {\n          reverse: true,\n        })) {\n          if (childLength-- == 0) break;\n          Transforms.removeNodes(editor, {\n            at: childP,\n          });\n        }\n      });\n      return;\n    }\n    const { tdMap, startPoins } = TdLogic.getTdMap(tbody);\n    const startPoint = startPoins[0];\n    if (\n      startPoint.row + areaHeight > tdMap.length ||\n      startPoint.col + areaWidth > tdMap[0].length\n    ) {\n      message.error(\"无法完整覆盖目标区域\");\n      return false;\n    }\n    const waitToDeleteTdsPath = [];\n    // 验证覆盖区域是否合法\n    for (\n      let row = startPoint.row;\n      row < tdMap.length && row < startPoint.row + areaHeight;\n      row++\n    ) {\n      for (\n        let col = startPoint.col;\n        col < tdMap[0].length && col < startPoint.col + areaWidth;\n        col++\n      ) {\n        const td = tdMap[row][col];\n        waitToDeleteTdsPath.unshift([td.originRow, td.originCol]);\n        if (\n          td.col < startPoint.col ||\n          td.col + td.colSpan > startPoint.col + areaWidth ||\n          td.row < startPoint.row ||\n          td.row + td.rowSpan > startPoint.row + areaHeight\n        ) {\n          message.error(\"无法完整覆盖目标区域\");\n          return false;\n        }\n      }\n    }\n\n    // 缓存之前复制的td\n    _.uniqWith(waitToDeleteTdsPath, (a, b) => {\n      return a.join(\",\") === b.join(\",\");\n    }).forEach((path) => {\n      Transforms.removeNodes(editor, { at: [...tbody[1], ...path] });\n    });\n\n    let minRow = copyedCells.slice().reduce((p, c) => {\n      return Math.min(p, c[1][c[1].length - 2]);\n    }, Infinity);\n\n    for (\n      let row = startPoint.row, nowCopyedCellsRow = minRow;\n      row < startPoint.row + areaHeight;\n      row++, nowCopyedCellsRow++\n    ) {\n      const td = tdMap[row][startPoint.col];\n      const insertTds: any[] = [];\n      copyedCells.forEach((td) => {\n        const path = td[1];\n        if (path[path.length - 2] === nowCopyedCellsRow) {\n          insertTds.push({\n            ...td[0],\n            selected: false,\n            start: false,\n          });\n        }\n      });\n      insertTds.length > 0 &&\n        Transforms.insertNodes(editor, _.cloneDeep(insertTds), {\n          at: [...tbody[1], row, td.originCol],\n        });\n    }\n\n    TdLogic.deselectAllTd(editor);\n    TableLogic.resetSelectedTds(editor);\n  },\n};\n","import { Tooltip, Button } from \"antd\";\n\nexport const StaticButton: React.FC<{\n  title: string;\n  mousedownFunc: (e: any) => void;\n  disabled?: boolean;\n}> = (props) => {\n  return (\n    <Tooltip title={props.title} mouseEnterDelay={0} mouseLeaveDelay={0}>\n      <Button\n        className=\"cyEditor__toolbar__button\"\n        type={\"text\"}\n        disabled={props.disabled}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          props.mousedownFunc(e);\n        }}\n      >\n        {props.children}\n      </Button>\n    </Tooltip>\n  );\n};\n","import Icon from \"@ant-design/icons\";\nimport { Transforms, Editor } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { EditorType, Marks } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { StaticButton } from \"../common/StaticButton\";\n\nexport const cleanFormat = (editor: EditorType) => {\n  const tds = TableLogic.getSelectedTds(editor);\n  if (tds.length > 0) {\n    for (const td of tds) {\n      Transforms.unsetNodes(editor, Object.values(Marks), { at: td[1] });\n    }\n    return;\n  }\n\n  const all = Editor.nodes(editor, {\n    mode: \"lowest\",\n    match(n) {\n      return utils.isTextWrapper(n);\n    },\n  });\n  for (const el of all) {\n    Transforms.unsetNodes(editor, Object.values(Marks), { at: el[1] });\n  }\n\n  for (const mark of Object.values(Marks)) {\n    Editor.removeMark(editor, mark);\n  }\n};\n\nexport const CleanFormatButton: React.FC<{}> = () => {\n  const editor = useSlateStatic();\n  return (\n    <StaticButton\n      title=\"清除格式\"\n      mousedownFunc={() => {\n        cleanFormat(editor);\n      }}\n    >\n      <Icon\n        component={() => (\n          <svg\n            viewBox=\"0 0 1084 1024\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            p-id=\"853\"\n            width=\"14\"\n            height=\"14\"\n          >\n            <defs>\n              <style type=\"text/css\"></style>\n            </defs>\n            <path\n              d=\"M719.329882 422.249412l-255.578353 255.578353 234.315295 234.315294 255.518117-255.638588-234.315294-234.255059zM59.151059 315.813647l298.164706-298.164706a60.235294 60.235294 0 0 1 85.172706 0l596.329411 596.329412a60.235294 60.235294 0 0 1 0 85.172706l-298.164706 298.164706a60.235294 60.235294 0 0 1-85.232941 0l-596.329411-596.329412a60.235294 60.235294 0 0 1 0-85.172706z\"\n              fill=\"#333333\"\n              p-id=\"854\"\n            ></path>\n          </svg>\n        )}\n      ></Icon>\n    </StaticButton>\n  );\n};\n","export const ToolBarConfig = {\n    calcStatusDelay:50\n}","import { FormatPainterOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nimport { useContext, useState, useRef, useEffect, useMemo } from \"react\";\nimport { Editor, Element, Range } from \"slate\";\nimport { useSlate } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { EditorContext } from \"../../../RichEditor\";\nimport { TableLogic } from \"../../Table\";\nimport { ToolBarConfig } from \"../common/config\";\nimport { StaticButton } from \"../common/StaticButton\";\n\nvar isMounted = false;\n\nexport const CopyFormatButton: React.FC<{}> = (props) => {\n  const editor = useSlate();\n  const { setSavedMarks } = useContext(EditorContext);\n  const [disabled, setDisabled] = useState(false);\n  const ref = useRef<any>({\n    isDisabled: _.debounce(() => {\n      const hasSelectSingleTd = TableLogic.getSelectedTdsSize(editor) === 1;\n      const isSelectionExpanded =\n        editor.selection != null && Range.isExpanded(editor.selection);\n      // 允许格式刷的条件：只选择了单个单元格或者有文字选择区域\n      isMounted && setDisabled(!(hasSelectSingleTd || isSelectionExpanded));\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    ref.current.isDisabled();\n  });\n\n  const copyMark = () => {\n    try {\n      const isNotOnlyOne = TableLogic.getSelectedTdsSize(editor) > 1;\n      const td = TableLogic.getFirstSelectedTd(editor);\n      if (td && !isNotOnlyOne && Element.isElement(td[0])) {\n        setSavedMarks(td[0] || null);\n        return;\n      }\n      if (!editor.selection) return null;\n      const marks = Editor.marks(editor);\n      const textWrapper = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n      if (textWrapper) setSavedMarks({ ...marks, ...textWrapper[0] } || null);\n      else setSavedMarks(marks || null);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n  return useMemo(() => {\n    return (\n      <StaticButton\n        title=\"格式刷\"\n        disabled={disabled}\n        mousedownFunc={() => {\n          copyMark();\n        }}\n      >\n        <FormatPainterOutlined />\n      </StaticButton>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disabled]);\n};\n","import { Tooltip, Select } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { EditorType } from \"../../../common/Defines\";\nimport { ToolBarConfig } from \"./config\";\n\nvar isMounted = false;\n\nexport const ValueSelector = (props: {\n  options: (string | number)[];\n  optionLabelRender?: (value: string | number) => any;\n  title: string;\n  getValue: (editor: EditorType) => any;\n  afterSelect?: (value: string | number) => void;\n}) => {\n  const editor = useSlate();\n  const [visible, setVisible] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const toolDom = useRef<any>();\n  const ref = useRef<any>({\n    getValue: _.debounce(() => {\n      isMounted && setValue(props.getValue(editor));\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    ref.current.getValue();\n  });\n  return useMemo(() => {\n    return (\n      <Tooltip\n        title={props.title}\n        zIndex={99}\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n      >\n        <div\n          ref={toolDom}\n          style={{\n            width: 100,\n            position: \"relative\",\n          }}\n          className=\"cyEditor__toolbar__button\"\n          onMouseLeave={() => {\n            setVisible(false);\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              zIndex: 1,\n              cursor: \"pointer\",\n            }}\n            onMouseDown={(e) => {\n              e.preventDefault();\n              setVisible(!visible);\n            }}\n          ></div>\n          <Select\n            placeholder={props.title}\n            value={value}\n            bordered={false}\n            style={{ width: \"100%\" }}\n            open={visible}\n            dropdownClassName=\"cyEditor__toolbar__dropdown\"\n            getPopupContainer={(triggerNode) =>\n              triggerNode.parentElement || document.body\n            }\n            onSelect={(value) => {\n              ReactEditor.focus(editor);\n              props?.afterSelect?.(value);\n              setVisible(false);\n            }}\n          >\n            {props.options.map((value) => {\n              return (\n                <Select.Option value={String(value)} key={value}>\n                  {props?.optionLabelRender?.(value) || value}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </div>\n      </Tooltip>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible, value]);\n};\n","import { Editor, Element, Transforms } from \"slate\";\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ValueSelector } from \"../common/ValueSelector\";\n\nexport const TextAlignButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ValueSelector\n      getValue={(editor) => {\n        const td = TableLogic.getFirstSelectedTd(editor);\n        if (td && Element.isElement(td[0])) {\n          return td[0][Marks.TextAlign] || \"左对齐\";\n        }\n\n        const [node] = Editor.nodes(editor, {\n          match(n) {\n            return utils.isTextWrapper(n);\n          },\n        });\n        if (!node) return \"左对齐\";\n        const textAlign = Element.isElement(node[0]) && node[0].textAlign;\n        return textAlign === false || textAlign == null ? \"left\" : textAlign;\n      }}\n      options={[\"left\", \"right\", \"center\"]}\n      optionLabelRender={(value) => {\n        if (value === \"left\") return \"左对齐\";\n        if (value === \"right\") return \"右对齐\";\n        if (value === \"center\") return \"居中对齐\";\n        return `${value}`;\n      }}\n      title=\"对齐方式\"\n      afterSelect={(value) => {\n        ReactEditor.focus(editor);\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              { textAlign: value },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Transforms.setNodes(\n          editor,\n          { textAlign: value },\n          {\n            mode: \"lowest\",\n            match(n) {\n              return utils.isTextWrapper(n);\n            },\n          }\n        );\n      }}\n    ></ValueSelector>\n  );\n};\n","import { Transforms, Editor, Element } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { EditorType, Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ValueSelector } from \"../common/ValueSelector\";\n\nconst getMarkValue = (editor: EditorType, mark: Marks) => {\n  try {\n    const td = TableLogic.getFirstSelectedTd(editor);\n    if (td && Element.isElement(td[0])) {\n      return td[0][mark];\n    }\n    if (!editor.selection) return null;\n    const marks = Editor.marks(editor);\n    return marks?.[mark];\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nexport const FontSizeButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ValueSelector\n      getValue={(editor) => {\n        return String(getMarkValue(editor, Marks.FontSize) || 14);\n      }}\n      options={[12, 13, 14, 15, 16, 19, 22, 24, 29, 32, 40, 48]}\n      optionLabelRender={(value) => {\n        return `${value}px`;\n      }}\n      title=\"字体大小\"\n      afterSelect={(value) => {\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              {\n                [Marks.FontSize]: Number(value),\n              },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Editor.addMark(editor, Marks.FontSize, Number(value));\n      }}\n    ></ValueSelector>\n  );\n};\n","import { Editor, Element, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { EditorType, CET } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ValueSelector } from \"../common/ValueSelector\";\n\nexport const FontTypeButton = () => {\n  const editor = useSlateStatic();\n\n  const setTextWrapper = (type: CET) => {\n    const tds = TableLogic.getSelectedTds(editor);\n    if (tds.length > 0) {\n      tds.forEach((td) => {\n        Transforms.setNodes(\n          editor,\n          {\n            type,\n          },\n          {\n            at: td[1],\n            match(n) {\n              return utils.isTextWrapper(n);\n            },\n          }\n        );\n      });\n    } else {\n      Transforms.setNodes(\n        editor,\n        { type: type },\n        {\n          hanging: true,\n          mode: \"lowest\",\n          match(n) {\n            return utils.isTextWrapper(n);\n          },\n        }\n      );\n    }\n  };\n\n  return (\n    <ValueSelector\n      getValue={(editor: EditorType) => {\n        const [node] = Editor.nodes(editor, {\n          match(n) {\n            return utils.isTextWrapper(n);\n          },\n        });\n        if (!node) return \"正文\";\n        const type = Element.isElement(node[0]) && node[0].type;\n        return type === \"div\" || type === false ? \"正文\" : type.toUpperCase();\n      }}\n      options={[\"H1\", \"H2\", \"H3\", \"H4\", \"正文\"]}\n      optionLabelRender={(value) => {\n        return <span>{value}</span>;\n      }}\n      title=\"字体样式\"\n      afterSelect={(value) => {\n        if (value === \"H1\") setTextWrapper(CET.H1);\n        if (value === \"H2\") setTextWrapper(CET.H2);\n        if (value === \"H3\") setTextWrapper(CET.H3);\n        if (value === \"H4\") setTextWrapper(CET.H4);\n        if (value === \"正文\") setTextWrapper(CET.DIV);\n      }}\n    ></ValueSelector>\n  );\n};\n","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport { useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\n\nexport const ColorPickerCore: React.FC<{\n  value: string;\n  onChange?: (color?: string) => void;\n}> = (props) => {\n  const [color, setColor] = useState<{ hex: any }>({\n    hex: props.value,\n  });\n\n  return (\n    <div\n      style={{\n        padding: 8,\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        backgroundColor: \"white\",\n        flexDirection: \"column\",\n      }}\n      className=\"cyEditor__toolbar__colorPanelWrapper\"\n    >\n      <CompactPicker\n        color={color.hex}\n        onChange={(color) => {\n          setColor(color);\n          props?.onChange?.(color.hex);\n        }}\n      ></CompactPicker>\n      <Button\n        icon={<DeleteOutlined></DeleteOutlined>}\n        size=\"small\"\n        onClick={() => {\n          props?.onChange?.(\"unset\");\n          setColor({ hex: \"\" });\n        }}\n      >\n        重置\n      </Button>\n    </div>\n  );\n};\n","import { Tooltip, Dropdown, Button } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Editor, Element } from \"slate\";\nimport { useSlate } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ColorPickerCore } from \"./ColorPickerCore\";\nimport { ToolBarConfig } from \"./config\";\n\nvar isMounted = false;\n\nexport const ColorPicker: React.FC<{\n  title: string;\n  onChange?: (color?: string) => void;\n  icon?: any;\n  mark: Marks;\n}> = (props) => {\n  const editor = useSlate();\n  const [color, setColor] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const ref = useRef<any>({\n    _getColor: _.debounce(() => {\n      isMounted && setColor(getColor());\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  const getColor = () => {\n    const td = TableLogic.getFirstSelectedTd(editor);\n    if (td) {\n      return Element.isElement(td[0]) && (td[0][props.mark] || \"unset\");\n    }\n\n    if (!editor.selection) return \"unset\";\n    if (!props.mark) return \"unset\";\n    const marks = Editor.marks(editor);\n    return (\n      (marks && marks?.[props?.mark]) ||\n      window.getComputedStyle(document.body).color\n    );\n  };\n\n  useEffect(() => {\n    ref.current._getColor();\n  });\n\n  return useMemo(() => {\n    return (\n      <Tooltip\n        title={props.title}\n        zIndex={99}\n        mouseLeaveDelay={0}\n        mouseEnterDelay={0}\n      >\n        <div\n          onMouseLeave={() => {\n            setVisible(false);\n          }}\n        >\n          <Dropdown\n            placement=\"bottomCenter\"\n            overlayStyle={{ zIndex: 999 }}\n            visible={visible}\n            overlay={() => {\n              return (\n                <ColorPickerCore\n                  value={color}\n                  onChange={(color) => {\n                    props?.onChange?.(color);\n                    setVisible(false);\n                  }}\n                ></ColorPickerCore>\n              );\n            }}\n            trigger={[\"click\"]}\n            getPopupContainer={(triggerNode) =>\n              triggerNode.parentElement || document.body\n            }\n          >\n            <Button\n              type=\"text\"\n              style={{ color }}\n              onMouseDown={(e) => {\n                e.preventDefault();\n                setVisible(true);\n              }}\n            >\n              {props.icon}\n            </Button>\n          </Dropdown>\n        </div>\n      </Tooltip>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [color, visible]);\n};\n","import { FontColorsOutlined } from \"@ant-design/icons\";\nimport { Transforms, Editor } from \"slate\";\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ColorPicker } from \"../common/ColorPicker\";\n\nexport const FontColorButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ColorPicker\n      title=\"字体颜色\"\n      onChange={(color) => {\n        ReactEditor.focus(editor);\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              {\n                [Marks.Color]: color,\n              },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Editor.addMark(editor, Marks.Color, color);\n      }}\n      mark={Marks.Color}\n      icon={<FontColorsOutlined />}\n    ></ColorPicker>\n  );\n};\n","import { BgColorsOutlined } from \"@ant-design/icons\";\nimport { Transforms, Editor } from \"slate\";\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ColorPicker } from \"../common/ColorPicker\";\n\nexport const FontBGColorButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ColorPicker\n      title=\"背景色\"\n      onChange={(color) => {\n        ReactEditor.focus(editor);\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              {\n                [Marks.BGColor]: color,\n              },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Editor.addMark(editor, Marks.BGColor, color);\n      }}\n      mark={Marks.BGColor}\n      icon={<BgColorsOutlined />}\n    ></ColorPicker>\n  );\n};\n","import { Button, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Transforms, Editor, Element } from \"slate\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { EditorType, Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ToolBarConfig } from \"./config\";\n\nconst isMarkActive = (editor: EditorType, mark: Marks) => {\n  try {\n    const td = TableLogic.getFirstSelectedTd(editor);\n    if (td && Element.isElement(td[0])) {\n      return td[0][mark];\n    }\n\n    if (!editor.selection) return null;\n    const marks = Editor.marks(editor);\n    return marks?.[mark] === true ? true : false;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nvar isMounted = false;\n\nexport const MarkButton: React.FC<{\n  title: string;\n  mark?: Marks;\n}> = (props) => {\n  const editor = useSlate();\n  const [type, setType] = useState(\"text\");\n  const ref = useRef<any>({\n    getType: _.debounce(() => {\n      isMounted &&\n        setType(\n          props.mark && isMarkActive(editor, props.mark) ? \"link\" : \"text\"\n        );\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    ref.current.getType();\n  });\n\n  const toggleMark = (mark: Marks) => {\n    // 针对选中表格的情况\n    const tds = TableLogic.getSelectedTds(editor);\n\n    if (tds.length > 0) {\n      ReactEditor.focus(editor);\n      const firstTd = tds[0][0];\n      if (!Element.isElement(firstTd)) return;\n      tds.forEach((td) => {\n        if (!Element.isElement(td[0])) return;\n        if (firstTd[mark]) {\n          Transforms.unsetNodes(editor, [mark], { at: td[1] });\n        } else {\n          Transforms.setNodes(editor, { [mark]: true }, { at: td[1] });\n        }\n      });\n      return;\n    }\n\n    if (!editor.selection) return;\n\n    const marks = Editor.marks(editor);\n\n    if (marks?.[mark]) {\n      Editor.removeMark(editor, mark);\n    } else {\n      Editor.addMark(editor, mark, true);\n    }\n  };\n\n  return useMemo(() => {\n    return (\n      <Tooltip title={props.title} mouseEnterDelay={0} mouseLeaveDelay={0}>\n        <Button\n          className=\"cyEditor__toolbar__button\"\n          type={type as any}\n          onMouseDown={(e) => {\n            e.preventDefault();\n            props.mark && toggleMark(props.mark);\n          }}\n        >\n          {props.children}\n        </Button>\n      </Tooltip>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type]);\n};\n","import { BoldOutlined } from \"@ant-design/icons\";\nimport { Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const FontWeightButton = () => {\n  return (\n    <MarkButton title=\"加粗\" mark={Marks.BOLD}>\n      <BoldOutlined />\n    </MarkButton>\n  );\n};\n","import { ItalicOutlined } from \"@ant-design/icons\";\nimport { Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const FontStyleButton = () => {\n  return (\n    <MarkButton title=\"斜体\" mark={Marks.ITALIC}>\n      <ItalicOutlined />\n    </MarkButton>\n  );\n};\n","import { UnderlineOutlined } from \"@ant-design/icons\";\nimport { Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const UnderLineButton = () => {\n  return (\n    <MarkButton title=\"下划线\" mark={Marks.Underline}>\n      <UnderlineOutlined />\n    </MarkButton>\n  );\n};\n","import { StrikethroughOutlined } from \"@ant-design/icons\";\nimport { Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const LineThroughButton = () => {\n  return (\n    <MarkButton title=\"删除线\" mark={Marks.LineThrough}>\n      <StrikethroughOutlined />\n    </MarkButton>\n  );\n};\n","/* eslint-disable eqeqeq */\nimport {\n  Transforms,\n  Range,\n  Text,\n  Element,\n  Editor,\n  Node,\n  NodeEntry,\n  Path,\n  Descendant,\n} from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { CET, EditorType, Marks } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\n\nexport const ListLogic = {\n  toggleList(editor: EditorType, type: CET.NORMAL_LIST | CET.NUMBER_LIST) {\n    // 判断当前是不是列表形态\n    const [text] = Editor.nodes(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return Text.isText(n) || Editor.isInline(editor, n);\n      },\n    });\n    if (!text) return;\n    const textWrapper = Editor.parent(editor, text[1]);\n    if (!textWrapper) return;\n    const twParent = Editor.parent(editor, textWrapper[1]);\n    const li = ListLogic.isListItem(twParent[0]) && twParent;\n    const liParent = li && utils.getParent(editor, li[1]);\n\n    const isSameTypeToggle =\n      li &&\n      liParent &&\n      Element.isElement(liParent[0]) &&\n      liParent?.[0].type == type;\n    // 是否改变列表类型\n    const isChangeListType = li && !isSameTypeToggle;\n    // 是否删除列表\n    const isCancelList = li && isSameTypeToggle;\n    // 是否设置为列表\n    const isSetToList = !li;\n\n    const cancelList = () => {\n      Transforms.unwrapNodes(editor, {\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n    };\n\n    const changeListType = () => {\n      Editor.withoutNormalizing(editor, () => {\n        const parents = new Set<string>();\n        const selectedListItems = Editor.nodes(editor, {\n          mode: \"lowest\",\n          match(n) {\n            return ListLogic.isListItem(n);\n          },\n        });\n        for (const [, path] of selectedListItems) {\n          const parent = utils.getParent(editor, path);\n          parent[0] != null && parents.add(parent[1].join(\"-\"));\n        }\n        parents.forEach((value) => {\n          const p = value.split(\"-\").map((o) => +o);\n          Transforms.setNodes(\n            editor,\n            {\n              type,\n            },\n            {\n              at: p,\n              hanging: true,\n            }\n          );\n        });\n      });\n    };\n\n    const setList = () => {\n      Editor.withoutNormalizing(editor, () => {\n        const elementsInRange = Array.from(\n          Editor.nodes(editor, {\n            reverse: true,\n            mode: \"lowest\",\n            match(n) {\n              return utils.isTextWrapper(n);\n            },\n          })\n        );\n\n        for (const [, path] of elementsInRange) {\n          if (path.length == 0) continue;\n          const [parent] = utils.getParent(editor, path);\n          if (ListLogic.isListItem(parent)) continue;\n          Transforms.wrapNodes(\n            editor,\n            {\n              type: CET.LIST_ITEM,\n              children: [],\n            },\n            { at: path }\n          );\n          if (!ListLogic.isOrderList(parent)) {\n            Transforms.wrapNodes(\n              editor,\n              {\n                type,\n                children: [],\n              },\n              { at: path }\n            );\n          }\n        }\n      });\n    };\n\n    if (isCancelList) {\n      cancelList();\n    } else if (isChangeListType) {\n      changeListType();\n    } else if (isSetToList) {\n      setList();\n    }\n  },\n  isInLi(editor: EditorType) {\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      return utils.getFirstAboveElementType(editor) == CET.LIST_ITEM;\n    }\n    if (!editor.selection) return false;\n\n    const {\n      focus: { path: fPath },\n      anchor: { path: aPath },\n    } = editor.selection;\n\n    let rel = Editor.above(editor, {\n      at: fPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    rel = Editor.above(editor, {\n      at: aPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    return false;\n  },\n  isInList(editor: EditorType) {\n    if (!editor.selection) return false;\n\n    const {\n      focus: { path: fPath },\n      anchor: { path: aPath },\n    } = editor.selection;\n\n    let rel = Editor.above(editor, {\n      at: fPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    rel = Editor.above(editor, {\n      at: aPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    return false;\n  },\n  isListItem(node: Node): node is Element {\n    return Element.isElement(node) && [CET.LIST_ITEM].includes(node.type);\n  },\n  isOrderList(node: Node | null | undefined): node is Element {\n    return (\n      Element.isElement(node) &&\n      [CET.NUMBER_LIST, CET.NORMAL_LIST].includes(node.type)\n    );\n  },\n  normalizeList(editor: EditorType, nodeEntry: NodeEntry) {\n    const [node, path] = nodeEntry;\n\n    if (ListLogic.isListItem(node)) {\n      // 如果有多个textWrapper，那么从第二个开始就包裹成li\n      if (node.children.length > 1) {\n        Editor.withoutNormalizing(editor, () => {\n          const nextPath = [...path, 1];\n          const texts = Array.from(\n            Editor.nodes(editor, {\n              at: nextPath,\n              match(n) {\n                return Text.isText(n) || Editor.isInline(editor, n);\n              },\n            })\n          );\n\n          Transforms.wrapNodes(\n            editor,\n            {\n              type: CET.LIST_ITEM,\n              children: [],\n            },\n            {\n              at: nextPath,\n            }\n          );\n\n          Transforms.removeNodes(editor, {\n            at: [...nextPath, 0],\n          });\n          Transforms.insertNodes(\n            editor,\n            {\n              type: CET.DIV,\n              children: texts.map((t) => t[0]) as Descendant[],\n            },\n            {\n              at: [...nextPath, 0],\n            }\n          );\n          Transforms.liftNodes(editor, { at: nextPath });\n          Transforms.select(editor, Editor.start(editor, Path.next(path)));\n        });\n        return true;\n      }\n\n      // 如果父元素不是list，那么unwrap li 组件\n      if (!ListLogic.isOrderList(Editor.parent(editor, path)?.[0])) {\n        Editor.withoutNormalizing(editor, () => {\n          Transforms.unwrapNodes(editor, { at: path });\n          Transforms.select(editor, Editor.start(editor, path));\n        });\n        return true;\n      }\n\n      // li里只允许有textWrapper包裹的inline元素\n      for (const [child, childP] of Node.children(editor, nodeEntry[1], {\n        reverse: true,\n      })) {\n        if (ListLogic.isOrderList(child)) {\n          Transforms.liftNodes(editor, { at: childP });\n          return true;\n        }\n        if (!utils.isTextWrapper(child)) {\n          Editor.withoutNormalizing(editor, () => {\n            const texts = Array.from(\n              Editor.nodes(editor, {\n                at: Editor.range(editor, childP),\n                match(n) {\n                  return Text.isText(n) || Editor.isInline(editor, n);\n                },\n              })\n            );\n            Transforms.wrapNodes(\n              editor,\n              {\n                type: CET.DIV,\n                children: [],\n              },\n              {\n                at: childP,\n              }\n            );\n            Transforms.removeNodes(editor, {\n              at: [...childP, 0],\n            });\n            Transforms.insertNodes(\n              editor,\n              texts.map((t) => t[0]),\n              { at: [...childP, 0] }\n            );\n          });\n          return true;\n        }\n      }\n\n      // 如果所有的text都是一样的Color，那么设置li的color也为该color\n      const colors = new Set();\n      for (const [child] of Node.texts(node)) {\n        colors.add(child[Marks.Color]);\n      }\n      if (colors.size == 1) {\n        const onlyColor = Array.from(colors).pop();\n        onlyColor &&\n          Transforms.setNodes(editor, { liColor: onlyColor }, { at: path });\n        return;\n      }\n    }\n\n    if (ListLogic.isOrderList(node)) {\n      // 如果自己跟前一个节点都是列表节点，那么将前一个改成和自己一样\n      const prePath = utils.getPath(path, \"pre\");\n      const [preNode] = utils.getNodeByPath(editor, prePath);\n\n      if (ListLogic.isOrderList(preNode) && preNode.type != node.type) {\n        Transforms.setNodes(editor, { type: node.type }, { at: prePath });\n        return true;\n      }\n\n      // 合并前一个相同的列表元素\n      if (ListLogic.isOrderList(preNode) && preNode.type == node.type) {\n        Transforms.mergeNodes(editor, { at: path });\n        return true;\n      }\n\n      const nextPath = utils.getPath(path, \"next\");\n      const [nextNode] = utils.getNodeByPath(editor, nextPath);\n\n      // 如果自己跟后一个节点都是列表节点，那么将自己的类型改成和它一样\n      if (ListLogic.isOrderList(nextNode) && nextNode.type != node.type) {\n        Transforms.setNodes(editor, { type: nextNode.type }, { at: nextPath });\n        return true;\n      }\n\n      // 合并后一个相同的列表元素\n      if (ListLogic.isOrderList(nextNode) && nextNode.type == node.type) {\n        Transforms.mergeNodes(editor, { at: nextPath });\n        return true;\n      }\n\n      // 如果只有一个列表子节点，那么将自己变成和子节点一样的类型\n      if (node.children.length == 1) {\n        const [onlyChild] = Node.first(node, [0]);\n        if (ListLogic.isOrderList(onlyChild) && onlyChild.type != node.type) {\n          Transforms.setNodes(editor, { type: onlyChild.type }, { at: path });\n          return true;\n        }\n      }\n\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        // 如果不为li元素，则提升\n        if (!ListLogic.isListItem(child) && !ListLogic.isOrderList(child)) {\n          Transforms.liftNodes(editor, { at: childP });\n          return true;\n        }\n      }\n\n      // 如果没有符合条件的子元素，那么删除此列表元素\n      let childCount = 0; // li,ul,ol数量\n      for (const [child] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (ListLogic.isOrderList(child) || ListLogic.isListItem(child)) {\n          childCount++;\n        }\n      }\n      if (childCount == 0) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n    }\n    return false;\n  },\n  tabEvent(editor: EditorType) {\n    Editor.withoutNormalizing(editor, () => {\n      const selectedListItems = Editor.nodes(editor, {\n        universal: true,\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n\n      for (const [n, p] of selectedListItems) {\n        ListLogic.indentLi(editor, [n, p]);\n      }\n    });\n  },\n  indentLi(editor: EditorType, liEntry: NodeEntry) {\n    Editor.withoutNormalizing(editor, () => {\n      const [li] = liEntry;\n      const p = ReactEditor.findPath(editor, li);\n\n      const nextNode = utils.getNodeByPath(editor, utils.getPath(p, \"next\"));\n      const parent = utils.getParent(editor, p);\n      if (nextNode.length > 0 && ListLogic.isOrderList(nextNode?.[0])) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: nextNode[0].type,\n            children: [],\n          },\n          { at: p }\n        );\n      } else if (parent.length > 0 && ListLogic.isOrderList(parent?.[0])) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: parent[0].type,\n            children: [],\n          },\n          { at: p }\n        );\n      }\n    });\n  },\n  shiftTabEvent(editor: EditorType) {\n    Editor.withoutNormalizing(editor, () => {\n      const selectedListItems = Editor.nodes(editor, {\n        universal: true,\n        reverse: true,\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n\n      for (const [n, p] of selectedListItems) {\n        ListLogic.liftLi(editor, [n, p]);\n      }\n    });\n  },\n  liftLi(editor: EditorType, liEntry: NodeEntry) {\n    const [, liPath] = liEntry;\n    const [parent, pp] = utils.getParent(editor, liPath);\n    const [parentParent] = parent && utils.getParent(editor, pp);\n\n    if (ListLogic.isOrderList(parentParent)) {\n      Transforms.liftNodes(editor, {\n        at: liPath,\n      });\n    }\n  },\n};\n","/* eslint-disable eqeqeq */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Checkbox } from \"antd\";\nimport { Editor, Element, Node, NodeEntry, Text, Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport { CET, EditorType } from \"../common/Defines\";\n\nexport const TodoListComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  return (\n    <div {...attributes}>\n      <span contentEditable={false} style={{ marginRight: 4 }}>\n        <Checkbox\n          checked={element.checked}\n          onChange={(e) => {\n            Transforms.setNodes(\n              editor,\n              {\n                checked: e.target.checked,\n              },\n              {\n                at: ReactEditor.findPath(editor, element),\n              }\n            );\n          }}\n          disabled={readOnly}\n        ></Checkbox>\n      </span>\n      <span>{children}</span>\n    </div>\n  );\n};\n\nexport const ToDoListLogic = {\n  isTodoList(node: Node) {\n    return Element.isElement(node) && node.type === CET.TODOLIST;\n  },\n  isInToDoList(editor: EditorType) {\n    return ToDoListLogic.getToDoList(editor) != null;\n  },\n  getToDoList(editor: EditorType) {\n    return Editor.above(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TODOLIST;\n      },\n    });\n  },\n  normalizeToDoList(editor: EditorType, nodeEntry: NodeEntry): boolean {\n    if (Element.isElement(nodeEntry[0]) && nodeEntry[0].type === CET.TODOLIST) {\n      for (const [child, childP] of Node.descendants(nodeEntry[0], {\n        reverse: true,\n      })) {\n        if (!(Text.isText(child) || Editor.isInline(editor, child))) {\n          Editor.withoutNormalizing(editor, () => {\n            const texts = Array.from(\n              Editor.nodes(editor, {\n                at: Editor.range(editor, childP),\n                match(n) {\n                  return Text.isText(n) || Editor.isInline(editor, n);\n                },\n              })\n            );\n            Transforms.removeNodes(editor, {\n              at: [...nodeEntry[1], ...childP],\n            });\n            Transforms.insertNodes(\n              editor,\n              texts.map((t) => t[0]),\n              {\n                at: Editor.end(editor, nodeEntry[1]),\n              }\n            );\n          });\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * 避免在todoList里按home键时，光标消失的问题\n   * @param e\n   * @param editor\n   */\n  handleKeyDown(e: KeyboardEvent, editor: EditorType) {\n    const isInToDoList = ToDoListLogic.getToDoList(editor);\n    if (isInToDoList && e.key === \"Home\" && e.shiftKey == false) {\n      e.preventDefault();\n      Transforms.select(editor, Editor.start(editor, isInToDoList[1]));\n    }\n  },\n};\n","import { Button, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useSlate } from \"slate-react\";\nimport { CypressFlagValues, EditorType } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { ToolBarConfig } from \"./config\";\n\nvar isMounted = false;\n\nexport const ReactButton: React.FC<{\n  title: string;\n  mousedownFunc: (e: any) => void;\n  disabledCondition?: (editor: EditorType) => boolean;\n  cypressId?: CypressFlagValues;\n}> = (props) => {\n  const editor = useSlate();\n  const { mousedownFunc, title, disabledCondition = () => false } = props;\n  const [disabled, setDisabled] = useState(false);\n  const ref = useRef({\n    _isDisabled: _.debounce(() => {\n      isMounted && setDisabled(disabledCondition(editor));\n    }, ToolBarConfig.calcStatusDelay),\n  });\n  const buttonRef = useRef(null);\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ref.current._isDisabled = (() => {}) as any;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    ref.current._isDisabled();\n  });\n  return (\n    <div ref={buttonRef}>\n      <Tooltip title={title} mouseEnterDelay={0} mouseLeaveDelay={0}>\n        <Button\n          className=\"cyEditor__toolbar__button\"\n          type={\"text\"}\n          disabled={disabled}\n          onMouseDown={(e) => {\n            e.preventDefault();\n            mousedownFunc(e);\n          }}\n          {...utils.insertCypressId(props, \"cypressId\")}\n        >\n          {props.children}\n        </Button>\n      </Tooltip>\n    </div>\n  );\n};\n","import { CheckSquareOutlined } from \"@ant-design/icons\";\nimport { Editor, Text, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { ListLogic } from \"../../ListComp\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const ToDoListButton = () => {\n  const editor = useSlateStatic();\n\n  const insertToDoList = () => {\n    const todos = Array.from(\n      Editor.nodes(editor, {\n        match: (n) => ToDoListLogic.isTodoList(n),\n        reverse: true,\n      })\n    );\n    // 如果当前选取里有todo组件，那么取消所有的todo\n    if (todos.length > 0) {\n      todos.forEach((todo) => {\n        Editor.withoutNormalizing(editor, () => {\n          Transforms.unwrapNodes(editor, {\n            at: todo[1],\n          });\n          Transforms.wrapNodes(\n            editor,\n            { type: CET.DIV, children: [] },\n            {\n              at: todo[1],\n              mode: \"lowest\",\n              match(n) {\n                return Text.isText(n);\n              },\n            }\n          );\n        });\n      });\n    } else {\n      // 将所有选区的内容变成todo\n      Editor.withoutNormalizing(editor, () => {\n        const textWrappers = Array.from(\n          Editor.nodes(editor, {\n            mode: \"lowest\",\n            match: (n) => utils.isTextWrapper(n),\n            reverse: true,\n          })\n        );\n        if (textWrappers.length > 0) {\n          textWrappers.forEach((textWrapper) => {\n            Transforms.wrapNodes(\n              editor,\n              {\n                type: CET.TODOLIST,\n                children: [],\n              },\n              {\n                at: textWrapper[1],\n              }\n            );\n            Transforms.unwrapNodes(editor, {\n              at: [...textWrapper[1], 0],\n            });\n            if (utils.isElementEmpty(editor, textWrapper)) {\n              Transforms.insertText(editor, \"todo...\", {\n                at: Editor.end(editor, [...textWrapper[1]]),\n              });\n            }\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"待办列表\"\n      mousedownFunc={() => {\n        insertToDoList();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null || ListLogic.isInLi(editor);\n      }}\n      cypressId={CypressFlagValues.TODO_LIST}\n    >\n      <CheckSquareOutlined />\n    </ReactButton>\n  );\n};\n","import { OrderedListOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { ListLogic } from \"../../ListComp\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const OrderListButton = () => {\n  const editor = useSlateStatic();\n\n  const setNumberList = () => {\n    ListLogic.toggleList(editor, CET.NUMBER_LIST);\n  };\n\n  return (\n    <ReactButton\n      title=\"有序列表\"\n      mousedownFunc={() => {\n        setNumberList();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null || ToDoListLogic.isInToDoList(editor);\n      }}\n      cypressId={CypressFlagValues.ORDER_LIST}\n    >\n      <OrderedListOutlined />\n    </ReactButton>\n  );\n};\n","import { UnorderedListOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { ListLogic } from \"../../ListComp\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const NormalListButton = () => {\n  const editor = useSlateStatic();\n\n  const setNormalList = () => {\n    ListLogic.toggleList(editor, CET.NORMAL_LIST);\n  };\n\n  return (\n    <ReactButton\n      title=\"无序列表\"\n      mousedownFunc={() => {\n        setNormalList();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null || ToDoListLogic.isInToDoList(editor);\n      }}\n      cypressId={CypressFlagValues.NORMALIZE_LIST}\n    >\n      <UnorderedListOutlined />\n    </ReactButton>\n  );\n};\n","import { LinkOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const SetLinkButton = () => {\n  const editor = useSlateStatic();\n\n  const setLink = () => {\n    const [isLinkActive] = Editor.nodes(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type === CET.LINK;\n      },\n    });\n    if (!isLinkActive) {\n      Transforms.wrapNodes(\n        editor,\n        {\n          type: CET.LINK,\n          url: \"http://www.baidu.com\",\n          children: [],\n        },\n        {\n          split: true,\n        }\n      );\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"设置链接\"\n      mousedownFunc={() => {\n        setLink();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <LinkOutlined />\n    </ReactButton>\n  );\n};\n","import { PictureOutlined } from \"@ant-design/icons\";\nimport { message } from \"antd\";\nimport { InputHTMLAttributes } from \"react\";\nimport { useRef } from \"react\";\nimport { Element, Range, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, EditorType } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\nimport axios from \"axios\";\n\nconst acceptImgTypes = [\n  \"image/apng\",\n  \"image/avif\",\n  \"image/gif\",\n  \"image/jpeg\",\n  \"image/png\",\n  \"image/svg+xml\",\n  \"image/webp\",\n];\n\nconst maxSize = 1024 * 1024 * 5; // 5M\n\nconst valideImg: (param: FileList | File[] | null) => {\n  legalFiles: File[];\n  illegalFiles: File[];\n} = (files) => {\n  const legalFiles: File[] = [];\n  const illegalFiles: File[] = [];\n  // all img types https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n  Array.isArray(files) &&\n    Array.from(files).forEach((file) => {\n      if (!acceptImgTypes.includes(file.type) || file.size > maxSize) {\n        illegalFiles.push(file);\n      } else {\n        legalFiles.push(file);\n      }\n    });\n  return {\n    legalFiles,\n    illegalFiles,\n  };\n};\n\nfunction sleep() {\n  return new Promise<void>((rel) => {\n    setTimeout(() => {\n      rel();\n    }, 2000);\n  });\n}\n\nconst uploadImg = async (file: File): Promise<string> => {\n  try {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:3001/uploadFile\",\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\n      },\n    });\n    return `http://localhost:3001/${res?.data?.[0]?.filename}`;\n  } catch (error) {\n    await sleep();\n    return URL.createObjectURL(file);\n  }\n};\n\nconst insertImgToEditor = (\n  editor: EditorType,\n  url: string,\n  id: number,\n  callback: Function\n) => {\n  if (editor.selection && Range.isExpanded(editor.selection)) {\n    Transforms.collapse(editor, { edge: \"end\" });\n  }\n  Transforms.insertNodes(editor, {\n    type: CET.IMG,\n    url,\n    id,\n    children: [\n      {\n        text: \"\",\n      },\n    ],\n  });\n  Transforms.move(editor);\n  callback(id);\n};\n\nexport const insertImg = (editor: EditorType, files: FileList | File[]) => {\n  files = Array.from(files);\n  const { illegalFiles, legalFiles } = valideImg(files);\n  if (illegalFiles.length > 0) {\n    message.error(\n      illegalFiles.map((file) => file.name).join(\"，\") +\n        `，文件格式非法（或超过最大限制${maxSize / 1024 / 1024}M）`\n    );\n  }\n\n  for (const file of legalFiles) {\n    insertImgToEditor(\n      editor,\n      URL.createObjectURL(file),\n      new Date().getTime(),\n      async (id: number) => {\n        const url = await uploadImg(file);\n        Transforms.setNodes(\n          editor,\n          {\n            id: null,\n            url,\n          },\n          {\n            at: [],\n            match(n) {\n              return Element.isElement(n) && n.id === id;\n            },\n          }\n        );\n      }\n    );\n  }\n};\n\nexport const InsertImgButton = () => {\n  const editor = useSlateStatic();\n  const fileRef = useRef<any>();\n\n  const chooseImg = () => {\n    if (fileRef.current) {\n      fileRef.current.click();\n      return;\n    }\n  };\n\n  const afterChooseImg: InputHTMLAttributes<HTMLInputElement>[\"onChange\"] = (\n    e\n  ) => {\n    const files = e.target.files;\n    if (!files) return;\n\n    insertImg(editor, files);\n  };\n\n  return (\n    <ReactButton\n      title={`插入图片（支持格式：${acceptImgTypes\n        .join(\"，\")\n        .replace(/image\\//gi, \".\")}）`}\n      mousedownFunc={() => {\n        chooseImg();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <input\n        ref={fileRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={afterChooseImg}\n      ></input>\n      <PictureOutlined />\n    </ReactButton>\n  );\n};\n","import { PaperClipOutlined } from \"@ant-design/icons\";\nimport { message } from \"antd\";\nimport { InputHTMLAttributes } from \"react\";\nimport { useRef } from \"react\";\nimport { Element, Range, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, EditorType } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\nimport axios from \"axios\";\n\nconst acceptFileTypes = [\n  \".doc\",\n  \".docx\",\n  \".xlsx\",\n  \".xls\",\n  \".csv\",\n  \".pdf\",\n  \".txt\",\n  \".zip\",\n  \".7z\",\n  \".ppt\",\n  \".pptx\",\n];\n\nconst maxSize = 1024 * 1024 * 10; // 10M\n\nconst valideFile: (param: FileList | File[] | null) => {\n  legalFiles: File[];\n  illegalFiles: File[];\n} = (files) => {\n  const legalFiles: File[] = [];\n  const illegalFiles: File[] = [];\n\n  Array.isArray(files) &&\n    Array.from(files).forEach((file) => {\n      const type = file.name.match(/\\.\\w+$/g)?.[0];\n      if (!type || !acceptFileTypes.includes(type) || file.size > maxSize) {\n        illegalFiles.push(file);\n      } else {\n        legalFiles.push(file);\n      }\n    });\n\n  return {\n    legalFiles,\n    illegalFiles,\n  };\n};\n\nfunction sleep() {\n  return new Promise<void>((rel) => {\n    setTimeout(() => {\n      rel();\n    }, 2000);\n  });\n}\n\nconst uploadFile = async (file: File): Promise<string> => {\n  try {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:3001/uploadFile\",\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\n      },\n    });\n    return `http://localhost:3001/${res?.data?.[0]?.filename}`;\n  } catch (error) {\n    await sleep();\n    return URL.createObjectURL(file);\n  }\n};\n\nconst insertFileToEditor = (\n  editor: EditorType,\n  url: string,\n  fileName: string,\n  id: number,\n  callback: Function\n) => {\n  if (editor.selection && Range.isExpanded(editor.selection)) {\n    Transforms.collapse(editor, { edge: \"end\" });\n  }\n  Transforms.insertNodes(editor, {\n    type: CET.FILE,\n    url,\n    fileName,\n    id,\n    children: [\n      {\n        text: \"\",\n      },\n    ],\n  });\n  Transforms.move(editor);\n  callback(id);\n};\n\nexport const insertFile = (editor: EditorType, files: FileList | File[]) => {\n  files = Array.from(files);\n  const { illegalFiles, legalFiles } = valideFile(files);\n  if (illegalFiles.length > 0) {\n    message.error(\n      illegalFiles.map((file) => file.name).join(\"，\") +\n        `，文件格式非法（或超过最大限制${maxSize / 1024 / 1024}M）`\n    );\n  }\n\n  for (const file of legalFiles) {\n    insertFileToEditor(\n      editor,\n      URL.createObjectURL(file),\n      file.name,\n      new Date().getTime(),\n      async (id: number) => {\n        const url = await uploadFile(file);\n        Transforms.setNodes(\n          editor,\n          {\n            id: null,\n            url,\n          },\n          {\n            at: [],\n            match(n) {\n              return Element.isElement(n) && n.id === id;\n            },\n          }\n        );\n      }\n    );\n  }\n};\n\nexport const InsertFileButton = () => {\n  const editor = useSlateStatic();\n  const fileRef = useRef<any>();\n\n  const chooseFile = () => {\n    if (fileRef.current) {\n      fileRef.current.click();\n      return;\n    }\n  };\n\n  const afterChooseFile: InputHTMLAttributes<HTMLInputElement>[\"onChange\"] = (\n    e\n  ) => {\n    const files = e.target.files;\n    if (!files) return;\n\n    insertFile(editor, files);\n  };\n\n  return (\n    <ReactButton\n      title={`插入附件（支持格式：${acceptFileTypes.join(\"，\")}）`}\n      mousedownFunc={() => {\n        chooseFile();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <input\n        ref={fileRef}\n        type=\"file\"\n        multiple\n        hidden\n        onChange={afterChooseFile}\n      ></input>\n      <PaperClipOutlined />\n    </ReactButton>\n  );\n};\n","import { TableOutlined } from \"@ant-design/icons\";\nimport { Button, Dropdown, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Editor, Transforms } from \"slate\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { tdMinHeight } from \"../../Td\";\nimport { ToolBarConfig } from \"../common/config\";\n\nexport const InsertTableButton: React.FC<{\n  onChange?: (color?: string) => void;\n}> = (props) => {\n  const editor = useSlate();\n  const [visible, setVisible] = useState(false);\n  const [counts, setCounts] = useState<string>(\"\");\n  const tableDom = useRef<any>();\n  const [disabled] = useState(false);\n  const ref = useRef({\n    _isDisabled: _.debounce(() => {\n      // 应该是任何时候都能添加表格，只是最终行为可能不同。\n      // 当前行为：表格只能添加到路径为[]的后面，也就是处于整个文档的第一层，在作为根节点的一个直接子元素。\n      // setDisabled(\n      //   editor.selection == null ||\n      //     TableLogic.isInTable(editor) ||\n      //     ListLogic.isInList(editor)\n      // );\n    }, ToolBarConfig.calcStatusDelay),\n  });\n  useEffect(() => {\n    ref.current._isDisabled();\n  });\n\n  const rowCount = 10,\n    cellCount = 10;\n\n  const tdMouseEnter = (e: any) => {\n    const table: any = tableDom.current;\n    const td = e.target;\n    const tr = e.target.parentNode;\n    if (!table || !td || !tr) return;\n\n    Array.from(table.querySelectorAll(\"td\")).forEach((td: any) => {\n      td.style.backgroundColor = \"unset\";\n    });\n    const trs = Array.from(table.querySelectorAll(\"tr\"));\n\n    for (let i = 0; i <= tr.rowIndex; i++) {\n      const nowTr: any = trs[i];\n      const tds: any = Array.from(nowTr.querySelectorAll(\"td\"));\n      for (let j = 0; j <= td.cellIndex; j++) {\n        const nowTd = tds[j];\n        nowTd.style.backgroundColor = \"rgba(180,215,255,.7)\";\n      }\n    }\n\n    setCounts(`${td.cellIndex + 1}x${tr.rowIndex + 1}`);\n  };\n\n  const addTable = () => {\n    const cellCount = Number(counts.split(\"x\")[0]);\n    const rowCount = Number(counts.split(\"x\")[1]);\n    if (!Number.isInteger(cellCount) || !Number.isInteger(rowCount)) return;\n\n    ReactEditor.focus(editor);\n\n    if (!editor.selection) return;\n\n    const [tw] = Editor.nodes(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return utils.isTextWrapper(n);\n      },\n    });\n    if (!tw) return;\n    const twDom = ReactEditor.toDOMNode(editor, tw[0]);\n    const parent: any = twDom.offsetParent;\n    if (!parent) return;\n    const tableWrapperWidth = twDom.offsetWidth - 2;\n\n    Transforms.collapse(editor);\n\n    const tPath = editor.selection.anchor.path;\n\n    Transforms.insertNodes(\n      editor,\n      {\n        type: CET.TABLE,\n        wrapperWidthWhenCreated: tableWrapperWidth,\n        children: [\n          {\n            type: CET.TBODY,\n            children: new Array(rowCount).fill(\"0\").map(() => {\n              return {\n                type: CET.TR,\n                children: new Array(cellCount).fill(\"0\").map(() => {\n                  return {\n                    type: CET.TD,\n                    width: tableWrapperWidth / cellCount,\n                    height: tdMinHeight,\n                    children: [\n                      {\n                        type: CET.DIV,\n                        children: [{ text: \"\" }],\n                      },\n                    ],\n                  };\n                }),\n              };\n            }),\n          },\n        ],\n      },\n      {\n        at: [tPath[0] + 1],\n      }\n    );\n\n    Transforms.deselect(editor);\n    setVisible(false);\n  };\n\n  return useMemo(() => {\n    return (\n      <div\n        onMouseLeave={() => {\n          setVisible(false);\n        }}\n      >\n        <Dropdown\n          placement=\"bottomCenter\"\n          overlayStyle={{ zIndex: 999 }}\n          visible={visible}\n          overlay={() => {\n            return (\n              <div\n                className=\"cyEditor__toolbar__tablePanelWrapper\"\n                style={{\n                  width: 200,\n                  padding: 8,\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  backgroundColor: \"white\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {visible ? (\n                  <table border=\"1\" ref={tableDom}>\n                    <tbody>\n                      {new Array(rowCount).fill(0).map((item, index) => {\n                        return (\n                          <tr key={index}>\n                            {new Array(cellCount).fill(0).map((item, index) => {\n                              return (\n                                <td\n                                  key={index}\n                                  onMouseEnter={tdMouseEnter}\n                                  onClick={addTable}\n                                ></td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                ) : null}\n                <div style={{ textAlign: \"right\" }}>{counts}</div>\n              </div>\n            );\n          }}\n          trigger={[\"click\"]}\n          getPopupContainer={(triggerNode) =>\n            triggerNode.parentElement || document.body\n          }\n        >\n          <Tooltip\n            title=\"表格\"\n            zIndex={99}\n            mouseLeaveDelay={0}\n            mouseEnterDelay={0}\n          >\n            <Button\n              type=\"text\"\n              onMouseDown={(e) => {\n                e.preventDefault();\n                setVisible(true);\n              }}\n              disabled={disabled}\n            >\n              <TableOutlined />\n            </Button>\n          </Tooltip>\n        </Dropdown>\n      </div>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible, disabled, counts]);\n};\n","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const DeleteTableButton = () => {\n  const editor = useSlateStatic();\n\n  const deleteTable = () => {\n    TableLogic.deleteTable(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"删除表格\"\n      mousedownFunc={() => {\n        deleteTable();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <DeleteOutlined />\n    </ReactButton>\n  );\n};\n","import { DeleteColumnOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const DeleteColumnButton = () => {\n  const editor = useSlateStatic();\n\n  const deleteColumn = () => {\n    TableLogic.deleteColumn(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"删除列\"\n      mousedownFunc={() => {\n        deleteColumn();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <DeleteColumnOutlined />\n    </ReactButton>\n  );\n};\n","import { DeleteRowOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const DeleteRowButton = () => {\n  const editor = useSlateStatic();\n\n  const deleteRow = () => {\n    TableLogic.deleteRow(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"删除行\"\n      mousedownFunc={() => {\n        deleteRow();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <DeleteRowOutlined />\n    </ReactButton>\n  );\n};\n","import { VerticalAlignBottomOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, Path, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertTextAfterVoid = () => {\n  const editor = useSlateStatic();\n\n  const insertDivAfterTable = () => {\n    if (editor.selection) {\n      const [topBlock] = Editor.nodes(editor, {\n        mode: \"highest\",\n        match(n) {\n          return (\n            !Editor.isEditor(n) &&\n            (Editor.isBlock(editor, n) || Editor.isVoid(editor, n))\n          );\n        },\n      });\n      if (topBlock) {\n        Transforms.insertNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"some text...\" }],\n          },\n          { at: Path.next(topBlock[1]) }\n        );\n      }\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"后插入文本\"\n      mousedownFunc={() => {\n        insertDivAfterTable();\n      }}\n      disabledCondition={(editor) => {\n        const isInTable = TableLogic.isInTable(editor);\n        const [isInCode] = Editor.nodes(editor, {\n          mode: \"highest\",\n          match(n) {\n            return Element.isElement(n) && CET.CODE === n.type;\n          },\n        });\n        return !(isInCode || isInTable);\n      }}\n    >\n      <VerticalAlignBottomOutlined />\n    </ReactButton>\n  );\n};\n","import { VerticalAlignTopOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertTextBeforeVoid = () => {\n  const editor = useSlateStatic();\n\n  const insertDivBeforeTable = () => {\n    if (editor.selection) {\n      const [topBlock] = Editor.nodes(editor, {\n        mode: \"highest\",\n        match(n) {\n          return (\n            !Editor.isEditor(n) &&\n            (Editor.isBlock(editor, n) || Editor.isVoid(editor, n))\n          );\n        },\n      });\n      if (topBlock) {\n        Transforms.insertNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"some text...\" }],\n          },\n          { at: topBlock[1] }\n        );\n      }\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"前插入文本\"\n      mousedownFunc={() => {\n        insertDivBeforeTable();\n      }}\n      disabledCondition={(editor) => {\n        const isInTable = TableLogic.isInTable(editor);\n        const [isInCode] = Editor.nodes(editor, {\n          mode: \"highest\",\n          match(n) {\n            return Element.isElement(n) && CET.CODE === n.type;\n          },\n        });\n        return !(isInCode || isInTable);\n      }}\n    >\n      <VerticalAlignTopOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowLeftOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertColumnBeforeCell = () => {\n  const editor = useSlateStatic();\n\n  const insertColumnBefore = () => {\n    TableLogic.insertColumn(editor, \"before\");\n  };\n\n  return (\n    <ReactButton\n      title=\"左插入列\"\n      mousedownFunc={() => {\n        insertColumnBefore();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowLeftOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowRightOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertColumnAfterCell = () => {\n  const editor = useSlateStatic();\n\n  const insertColumnAfter = () => {\n    TableLogic.insertColumn(editor, \"after\");\n  };\n\n  return (\n    <ReactButton\n      title=\"右插入列\"\n      mousedownFunc={() => {\n        insertColumnAfter();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowRightOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowAboveOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertRowBeforeButton = () => {\n  const editor = useSlateStatic();\n\n  const insertRowBefore = () => {\n    TableLogic.insertRow(editor, \"before\");\n  };\n\n  return (\n    <ReactButton\n      title=\"上插入行\"\n      mousedownFunc={() => {\n        insertRowBefore();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowAboveOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowBelowOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertRowAfterButton = () => {\n  const editor = useSlateStatic();\n\n  const insertRowAfter = () => {\n    TableLogic.insertRow(editor, \"after\");\n  };\n\n  return (\n    <ReactButton\n      title=\"下插入行\"\n      mousedownFunc={() => {\n        insertRowAfter();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowBelowOutlined />\n    </ReactButton>\n  );\n};\n","import { MergeCellsOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const MergeCellButton = () => {\n  const editor = useSlateStatic();\n\n  const mergeTd = () => {\n    TableLogic.mergeTd(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"合并单元格\"\n      mousedownFunc={() => {\n        mergeTd();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <MergeCellsOutlined />\n    </ReactButton>\n  );\n};\n","import { SplitCellsOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const SplitCellButton = () => {\n  const editor = useSlateStatic();\n\n  const splitTd = () => {\n    TableLogic.splitTd(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"拆分单元格\"\n      mousedownFunc={() => {\n        splitTd();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <SplitCellsOutlined />\n    </ReactButton>\n  );\n};\n","import { ClearOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TdLogic } from \"../../Td\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const ClearCellButton = () => {\n  const editor = useSlateStatic();\n\n  const clearTd = () => {\n    TdLogic.clearTd(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"清空单元格\"\n      mousedownFunc={() => {\n        clearTd();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <ClearOutlined />\n    </ReactButton>\n  );\n};\n","import { CodeOutlined } from \"@ant-design/icons\";\nimport { Editor, Path, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const AddCodeBoxButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ReactButton\n      title=\"插入代码块\"\n      mousedownFunc={() => {\n        if (!editor.selection) return;\n        const [topBlock] = Editor.nodes(editor, {\n          mode: \"highest\",\n          match(n) {\n            return !Editor.isEditor(n);\n          },\n        });\n        if (topBlock) {\n          Transforms.insertNodes(\n            editor,\n            {\n              type: CET.CODE,\n              defaultMode: \"javascript\",\n              children: [{ text: \"\" }],\n            },\n            { at: Path.next(topBlock[1]) }\n          );\n        }\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <CodeOutlined />\n    </ReactButton>\n  );\n};\n","import { SelectOutlined } from \"@ant-design/icons\";\nimport { Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const SelectCellButton = () => {\n  const editor = useSlateStatic();\n\n  return (\n    <ReactButton\n      title=\"选中单元格（鼠标移动到单元格的边缘出现十字标双击）\"\n      mousedownFunc={() => {\n        const td = TableLogic.getEditingTd(editor);\n        if (!td) return;\n        Transforms.setNodes(\n          editor,\n          {\n            start: true,\n            selected: true,\n          },\n          {\n            at: td[1],\n          }\n        );\n        Transforms.deselect(editor);\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n      cypressId={CypressFlagValues.SELECTE_TD}\n    >\n      <SelectOutlined />\n    </ReactButton>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable eqeqeq */\nimport { Col, Row, Divider } from \"antd\";\nimport { Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport _ from \"lodash\";\nimport { SaveOutlined } from \"@ant-design/icons\";\nimport \"./ToolBar.css\";\nimport React, { useContext, useEffect } from \"react\";\nimport { EditorContext } from \"../../RichEditor\";\nimport { slateToHtml } from \"../../common/slateToHtml\";\nimport { htmlToSlate } from \"../../common/htmlToSlate\";\nimport { CleanFormatButton } from \"./funcButtons/CleanFormatButton\";\nimport { StaticButton } from \"./common/StaticButton\";\nimport { CopyFormatButton } from \"./funcButtons/CopyFormatButton\";\nimport { TextAlignButton } from \"./funcButtons/TextAlignButton\";\nimport { FontSizeButton } from \"./funcButtons/FontSizeButton\";\nimport { FontTypeButton } from \"./funcButtons/FontTypeButton\";\nimport { FontColorButton } from \"./funcButtons/FontColorButton\";\nimport { FontBGColorButton } from \"./funcButtons/FontBGColorButton\";\nimport { FontWeightButton } from \"./funcButtons/FontWeightButton\";\nimport { FontStyleButton } from \"./funcButtons/FontStyleButton\";\nimport { UnderLineButton } from \"./funcButtons/UnderLineButton\";\nimport { LineThroughButton } from \"./funcButtons/LineThroughButton\";\nimport { ToDoListButton } from \"./funcButtons/ToDoListButton\";\nimport { OrderListButton } from \"./funcButtons/OrderListButton\";\nimport { NormalListButton } from \"./funcButtons/NormalListButton\";\nimport { SetLinkButton } from \"./funcButtons/SetLinkButton\";\nimport { InsertImgButton } from \"./funcButtons/InsertImgButton\";\nimport { InsertFileButton } from \"./funcButtons/InsertFileButton\";\nimport { InsertTableButton } from \"./funcButtons/InsertTableButton\";\nimport { DeleteTableButton } from \"./funcButtons/DeleteTableButton\";\nimport { DeleteColumnButton } from \"./funcButtons/DeleteColumnButton\";\nimport { DeleteRowButton } from \"./funcButtons/DeleteRowButton\";\nimport { InsertTextAfterVoid } from \"./funcButtons/InsertTextAfterVoid\";\nimport { InsertTextBeforeVoid } from \"./funcButtons/InsertTextBeforeVoid\";\nimport { InsertColumnBeforeCell } from \"./funcButtons/InsertColumnBeforeCell\";\nimport { InsertColumnAfterCell } from \"./funcButtons/InsertColumnAfterCell\";\nimport { InsertRowBeforeButton } from \"./funcButtons/InsertRowBeforeButton\";\nimport { InsertRowAfterButton } from \"./funcButtons/InsertRowAfterButton\";\nimport { MergeCellButton } from \"./funcButtons/MergeCellButton\";\nimport { SplitCellButton } from \"./funcButtons/SplitCellButton\";\nimport { ClearCellButton } from \"./funcButtons/ClearCellButton\";\nimport { CET } from \"../../common/Defines\";\nimport { AddCodeBoxButton } from \"./funcButtons/AddCodeBoxButton\";\nimport {SelectCellButton} from './funcButtons/SelectCellButton';\n\nconst ReadOnlyButton: React.FC<{}> = (props) => {\n  const { readOnly, setReadOnly } = useContext(EditorContext);\n  const title = readOnly ? \"编辑模式\" : \"只读模式\";\n  return (\n    <StaticButton\n      title={title}\n      mousedownFunc={() => {\n        setReadOnly(!readOnly);\n      }}\n    >\n      {title}\n    </StaticButton>\n  );\n};\n\nexport const ToolBar: React.FC<{}> = (props) => {\n  const editor = useSlateStatic();\n\n  const diverComp = (\n    <Divider\n      style={{ height: 20, backgroundColor: \"rgb(0 0 0 / 10%)\" }}\n      type=\"vertical\"\n    />\n  );\n\n  return (\n    <div\n      className=\"cyEditor__toolBar\"\n      style={{ position: \"relative\", marginBottom: 4 }}\n    >\n      <Row align=\"middle\">\n        {/* 设置字体规格 */}\n        <Col>\n          <FontTypeButton></FontTypeButton>\n        </Col>\n        {/* 设置字体大小 */}\n        <Col>\n          <FontSizeButton></FontSizeButton>\n        </Col>\n        {/* 设置对齐方式 */}\n        <Col>\n          <TextAlignButton></TextAlignButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <CopyFormatButton></CopyFormatButton>\n        </Col>\n        <Col>\n          <CleanFormatButton></CleanFormatButton>\n        </Col>\n        <Col>\n          <FontColorButton></FontColorButton>\n        </Col>\n        <Col>\n          <FontBGColorButton></FontBGColorButton>\n        </Col>\n        <Col>\n          <FontWeightButton></FontWeightButton>\n        </Col>\n        <Col>\n          <FontStyleButton></FontStyleButton>\n        </Col>\n        <Col>\n          <UnderLineButton></UnderLineButton>\n        </Col>\n        <Col>\n          <LineThroughButton></LineThroughButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <AddCodeBoxButton></AddCodeBoxButton>\n        </Col>\n        <Col>\n          <ToDoListButton></ToDoListButton>\n        </Col>\n        <Col>\n          <OrderListButton></OrderListButton>\n        </Col>\n        <Col>\n          <NormalListButton></NormalListButton>\n        </Col>\n        <Col>\n          <InsertTextAfterVoid></InsertTextAfterVoid>\n        </Col>\n        <Col>\n          <InsertTextBeforeVoid></InsertTextBeforeVoid>\n        </Col>\n        <Col>\n          <SetLinkButton></SetLinkButton>\n        </Col>\n        <Col>\n          <InsertImgButton></InsertImgButton>\n        </Col>\n        <Col>\n          <InsertFileButton></InsertFileButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <InsertTableButton></InsertTableButton>\n        </Col>\n        <Col>\n          <DeleteTableButton></DeleteTableButton>\n        </Col>\n        <Col>\n          <SelectCellButton></SelectCellButton>\n        </Col>\n        <Col>\n          <DeleteColumnButton></DeleteColumnButton>\n        </Col>\n        <Col>\n          <DeleteRowButton></DeleteRowButton>\n        </Col>\n        <Col>\n          <InsertColumnBeforeCell></InsertColumnBeforeCell>\n        </Col>\n        <Col>\n          <InsertColumnAfterCell></InsertColumnAfterCell>\n        </Col>\n        <Col>\n          <InsertRowBeforeButton></InsertRowBeforeButton>\n        </Col>\n        <Col>\n          <InsertRowAfterButton></InsertRowAfterButton>\n        </Col>\n        <Col>\n          <MergeCellButton></MergeCellButton>\n        </Col>\n        <Col>\n          <SplitCellButton></SplitCellButton>\n        </Col>\n        <Col>\n          <ClearCellButton></ClearCellButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <StaticButton\n            title=\"输出内容\"\n            mousedownFunc={() => {\n              console.log(JSON.stringify(editor.children));\n              window.localStorage.setItem(\n                \"savedContent\",\n                JSON.stringify(editor.children)\n              );\n            }}\n          >\n            <SaveOutlined />\n          </StaticButton>\n        </Col>\n        {/* <Col>\n          <StaticButton\n            title=\"输出内容HTML\"\n            mousedownFunc={(e) => {\n              // const editorDom = e.nativeEvent.path.find((o: any) => o.className == \"cyEditor\");\n              // if(!editorDom) return;\n              // const content = editorDom.querySelector(':scope>.cyEditor__content');\n              // console.log(content.innerHTML);\n              console.log(slateToHtml(editor));\n            }}\n          >\n            slateToHtml\n          </StaticButton>\n        </Col>\n        <Col>\n          <StaticButton\n            title=\"输入内容\"\n            mousedownFunc={(e) => {\n              // const editorDom = e.nativeEvent.path.find((o: any) => o.className == \"cyEditor\");\n              // if(!editorDom) return;\n              // const content = editorDom.querySelector(':scope>.cyEditor__content');\n              // console.log(content.innerHTML);\n              const content = htmlToSlate(\n                `<table><tbody><tr><td>123</td></tr></tbody></table>`\n              );\n              Transforms.insertNodes(editor, content);\n            }}\n          >\n            htmlToSlate\n          </StaticButton>\n        </Col> */}\n        <Col>\n          <ReadOnlyButton></ReadOnlyButton>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import { jsx } from \"slate-hyperscript\";\nimport { CET, Marks } from \"./Defines\";\n\nconst deserialize = (el: any): any => {\n  if (el.nodeType === 3) {\n    return el.textContent;\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  const nodeStyle: Partial<\n    {\n      [key in Marks]: any;\n    } & {\n      width: number;\n      height: number;\n    }\n  > = {};\n  el.style?.cssText\n    ?.split(\";\")\n    // eslint-disable-next-line array-callback-return\n    .forEach((style: string) => {\n      const [key, value] = style.split(\":\");\n      if (!key) return null;\n      const changeKey = key\n        .trim()\n        .replace(/^([a-z]+)-([a-z])([a-z]+)$/gi, ($0, $1, $2, $3) => {\n          return $1 + $2.toUpperCase() + $3;\n        });\n      const changeValue = value.trim();\n      if (changeKey === \"textDecoration\") {\n        if (changeValue.includes(\"underline\")) {\n          nodeStyle[Marks.Underline] = true;\n        }\n        if (changeValue.includes(\"line-through\")) {\n          nodeStyle[Marks.LineThrough] = true;\n        }\n      } else if (changeValue === \"bold\") {\n        nodeStyle[Marks.BOLD] = true;\n      } else if (changeValue === \"italic\") {\n        nodeStyle[Marks.ITALIC] = true;\n      } else if (Object.values(Marks).includes(changeKey as Marks)) {\n        nodeStyle[changeKey as Marks] = changeValue;\n      }\n\n      if (changeKey === \"width\") {\n        nodeStyle.width = parseInt(changeValue);\n      }\n      if (changeKey === \"height\") {\n        nodeStyle.height = parseInt(changeValue);\n      }\n    });\n\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{ text: \"\" }];\n  }\n  switch (el.nodeName) {\n    case \"BR\":\n      return \"\\n\";\n    case \"BODY\":\n      return jsx(\"fragment\", {}, children);\n    case \"P\":\n    case \"DIV\": {\n      const isTextWrapper = (Array.from(el?.childNodes) || []).every(\n        (node: any) => node.nodeType === 3\n      );\n      return jsx(\n        \"element\",\n        { type: isTextWrapper ? CET.DIV : CET.Block, ...nodeStyle },\n        children\n      );\n    }\n    case \"H1\":\n      return jsx(\"element\", { type: CET.H1, ...nodeStyle }, children);\n    case \"H2\":\n      return jsx(\"element\", { type: CET.H2, ...nodeStyle }, children);\n    case \"H3\":\n      return jsx(\"element\", { type: CET.H3, ...nodeStyle }, children);\n    case \"H4\":\n      return jsx(\"element\", { type: CET.H4, ...nodeStyle }, children);\n    case \"A\":\n      return jsx(\n        \"element\",\n        { type: CET.LINK, url: el.getAttribute(\"href\"), ...nodeStyle },\n        children\n      );\n    case \"IMG\":\n      return jsx(\n        \"element\",\n        { type: CET.IMG, url: el.getAttribute(\"src\"), ...nodeStyle },\n        children\n      );\n    case \"UL\":\n      return jsx(\"element\", { type: CET.NORMAL_LIST, ...nodeStyle }, children);\n    case \"OL\":\n      return jsx(\"element\", { type: CET.NUMBER_LIST, ...nodeStyle }, children);\n    case \"LI\":\n      return jsx(\"element\", { type: CET.LIST_ITEM, ...nodeStyle }, children);\n    case \"TABLE\":\n      return jsx(\"element\", { type: CET.TABLE, ...nodeStyle }, children);\n    case \"TBODY\":\n      return jsx(\"element\", { type: CET.TBODY, ...nodeStyle }, children);\n    case \"TR\":\n      return jsx(\"element\", { type: CET.TR, ...nodeStyle }, children);\n    case \"TD\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TD,\n          ...nodeStyle,\n          rowSpan: el.getAttribute(\"rowspan\") || 1,\n          colSpan: el.getAttribute(\"colspan\") || 1,\n        },\n        children\n      );\n    default:\n      return el.textContent;\n  }\n};\n\nexport const htmlToSlate = (html: string): any => {\n  // 去掉标签之间的空格和回车等其他符号\n  const document = new DOMParser().parseFromString(html, \"text/html\");\n  return deserialize(document.body);\n};\n","/* eslint-disable eqeqeq */\nimport { Range } from \"slate\";\nimport { EditorType } from \"../../common/Defines\";\nimport { handleSelectedTd } from \"./handleSelectedTd\";\nimport { handleRangeCollapsed } from \"./handleRangeCollapsed\";\nimport { handleRangeExpand } from \"./handleRangeExpand\";\nimport { getStrPathSetOfSelectedTds } from \"../../common/globalStore\";\n\nexport const HandleKeyDownEvent = (e: any, editor: EditorType) => {\n  const selectedTds = getStrPathSetOfSelectedTds(editor);\n\n  if (selectedTds.size > 0) {\n    handleSelectedTd(e, editor);\n    return;\n  }\n\n  const { selection } = editor;\n  if (!selection) return;\n\n  if (Range.isExpanded(selection)) {\n    return handleRangeExpand(e, editor);\n  }\n\n  if (Range.isCollapsed(selection)) {\n    return handleRangeCollapsed(e, editor);\n  }\n};\n","import { EditorType } from \"../../common/Defines\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { TdLogic } from \"../../comps/Td\";\n// import { TableLogic } from \"../../comps/Table\";\n// import { setCopyedContent } from \"../../common/globalStore\";\n\nexport const handleSelectedTd = (e: any, editor: EditorType) => {\n  switch (e.key) {\n    case \"Delete\":\n    case \"Backspace\": {\n      TdLogic.clearTd(editor);\n      break;\n    }\n    // case \"Tab\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, e.shiftKey ? \"left\" : \"right\");\n    //   break;\n    // }\n    case \"Escape\": {\n      e.preventDefault();\n      TdLogic.deselectAllTd(editor);\n      break;\n    }\n    // 直接全选选中的td的内容，进入编辑状态\n    // case \" \":\n    // case \"Enter\":\n    //   {\n    //     e.preventDefault();\n    //     if (isNotOnlyOneTd) break;\n    //     const td = getFirstTd();\n    //     td && TdLogic.editTd(editor, td);\n    //   }\n    //   break;\n    // case \"ArrowUp\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"up\");\n    //   break;\n    // }\n    // case \"ArrowDown\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"down\");\n    //   break;\n    // }\n    // case \"ArrowLeft\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"left\");\n    //   break;\n    // }\n    // case \"ArrowRight\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"right\");\n    //   break;\n    // }\n  }\n\n  // if (!e.ctrlKey && (e.key.length === 1 || e.key === \"Process\")) {\n  //   if (isNotOnlyOneTd) return;\n  //   const td = getFirstTd();\n  //   TdLogic.clearTd(editor);\n  //   td && TdLogic.editTd(editor, td);\n  //   return;\n  // }\n\n  // 选中单元格进行复制\n  if (e.ctrlKey && e.key === \"c\") {\n    TableLogic.copyCells(editor);\n    return;\n  }\n\n  // // 粘贴单元格\n  if (e.ctrlKey && e.key === \"v\") {\n    TableLogic.pasteCells(editor);\n    return;\n  }\n\n  return;\n};\n","import { Editor } from \"slate\";\nimport { EditorType } from \"../../common/Defines\";\nimport { utils } from \"../../common/utils\";\nimport { ListLogic } from \"../../comps/ListComp\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { ToDoListLogic } from \"../../comps/TodoListComp\";\n\nexport const handleRangeExpand = (e: any, editor: EditorType): void => {\n  const { selection } = editor;\n  if (!selection) return;\n\n  switch (e.key) {\n    case \"Home\": {\n      ToDoListLogic.handleKeyDown(e, editor);\n      return;\n    }\n    case \"Tab\": {\n      e.preventDefault();\n\n      const isInLi = ListLogic.isInLi(editor);\n\n      if (isInLi) {\n        for (const [, p] of Editor.nodes(editor, {\n          at: selection,\n          reverse: true,\n          universal: true,\n          match(n) {\n            return utils.isTextWrapper(n);\n          },\n        })) {\n          const [parent, pp] = utils.getParent(editor, p);\n          if (!parent) continue;\n          if (ListLogic.isListItem(parent)) {\n            !e.shiftKey\n              ? ListLogic.indentLi(editor, [parent, pp])\n              : ListLogic.liftLi(editor, [parent, pp]);\n          }\n        }\n        break;\n      } else {\n        const isInTable = TableLogic.isInTable(editor);\n        if (isInTable) {\n          !e.shiftKey\n            ? TableLogic.tabEvent(editor)\n            : TableLogic.shiftTabEvent(editor);\n        }\n      }\n    }\n  }\n};\n","/* eslint-disable eqeqeq */\nimport { Transforms, Editor, Path, Element, NodeEntry } from \"slate\";\nimport { CET, EditorType } from \"../../common/Defines\";\nimport { utils } from \"../../common/utils\";\nimport { ListLogic } from \"../../comps/ListComp\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { TdLogic } from \"../../comps/Td\";\nimport { ToDoListLogic } from \"../../comps/TodoListComp\";\n\nexport const handleRangeCollapsed = (e: any, editor: EditorType): void => {\n  const { selection } = editor;\n  if (!selection) return;\n\n  // 以下是没有选区的情况下的事件\n  const elementType = utils.getFirstAboveElementType(editor);\n\n  const getEditingTd = () => {\n    return TableLogic.getEditingTd(editor);\n  };\n  const getTable = (td: NodeEntry) => {\n    return td && Editor.above(editor, {\n      at: td[1],\n      match: (n) => TableLogic.isTable(n),\n    });\n  };\n\n  // 如果默认事件没有被组件拦截掉，那么在这里重新定义拦截逻辑\n  switch (e.key) {\n    case \"Tab\": {\n      e.preventDefault();\n      if (CET.LIST_ITEM === elementType) {\n        e.shiftKey\n          ? ListLogic.shiftTabEvent(editor)\n          : ListLogic.tabEvent(editor);\n        break;\n      }\n      if (CET.TD === elementType) {\n        e.shiftKey\n          ? TableLogic.shiftTabEvent(editor)\n          : TableLogic.tabEvent(editor);\n        break;\n      }\n      // 如果是在其他元素上\n      !e.shiftKey && Transforms.insertText(editor, \"    \");\n      break;\n    }\n    case \"ArrowUp\": {\n      const td = getEditingTd();\n      if (td) {\n        const [text] = Editor.nodes(editor, {\n          at: td[1],\n          mode: \"lowest\",\n          match(n) {\n            return Editor.isBlock(editor, n);\n          },\n        });\n        // 判断是否是第一行的td\n        const isInFirstRow = td[1][td[1].length - 2] === 0;\n        const isInFirstText = Path.isDescendant(selection.anchor.path, text[1]);\n        if (isInFirstText) {\n          if (isInFirstRow) {\n            const [table] = Editor.nodes(editor, {\n              at: td[1],\n              match(n) {\n                return TableLogic.isTable(n);\n              },\n            });\n            if (table) {\n              const prePos = Editor.before(editor, table[1]);\n              e.preventDefault();\n              prePos && Transforms.select(editor, prePos);\n            }\n            return;\n          }\n          TdLogic.findTargetTd(editor, td, \"up\");\n          e.preventDefault();\n          return;\n        }\n        return;\n      }\n      return;\n    }\n    case \"ArrowDown\": {\n      const td = getEditingTd();\n      if (td) {\n        const [text] = Editor.nodes(editor, {\n          at: td[1],\n          mode: \"lowest\",\n          reverse: true,\n          match(n) {\n            return Editor.isBlock(editor, n);\n          },\n        });\n        const [tbody] = Editor.nodes(editor, {\n          at: td[1],\n          match(n) {\n            return Element.isElement(n) && n.type === CET.TBODY;\n          },\n        });\n        if (!tbody) return;\n        const isInLastText = Path.isDescendant(selection.anchor.path, text[1]);\n        const isInLastRow =\n          td[1][td[1].length - 2] === tbody[0].children.length - 1;\n        if (isInLastText) {\n          if (isInLastRow) {\n            const [table] = Editor.nodes(editor, {\n              at: td[1],\n              match(n) {\n                return TableLogic.isTable(n);\n              },\n            });\n            if (table) {\n              const nextPos = Editor.after(editor, table[1]);\n              e.preventDefault();\n              nextPos && Transforms.select(editor, nextPos);\n            }\n            return;\n          }\n          TdLogic.findTargetTd(editor, td, \"down\");\n          e.preventDefault();\n          return;\n        }\n        return;\n      }\n      return;\n    }\n    case \"ArrowLeft\": {\n      const td = getEditingTd();\n      const table = getTable(td);\n      if (table && Editor.isStart(editor, selection.anchor, table[1])) {\n        TdLogic.deselectAllTd(editor);\n        return;\n      }\n      if (td && Editor.isStart(editor, selection.anchor, td[1])) {\n        TdLogic.findTargetTd(editor, td, \"left\");\n        e.preventDefault();\n        return;\n      }\n      return;\n    }\n    case \"ArrowRight\": {\n      const td = getEditingTd();\n      const table = getTable(td);\n      if (table && Editor.isEnd(editor, selection.anchor, table[1])) {\n        TdLogic.deselectAllTd(editor);\n        return;\n      }\n      if (td && Editor.isEnd(editor, selection.anchor, td[1])) {\n        TdLogic.findTargetTd(editor, td, \"right\");\n        e.preventDefault();\n        return;\n      }\n      return;\n    }\n    case \"Home\": {\n      ToDoListLogic.handleKeyDown(e, editor);\n      return;\n    }\n  }\n  return;\n};\n","/* eslint-disable eqeqeq */\nimport {\n  BorderlessTableOutlined,\n  BorderOuterOutlined,\n  DeleteOutlined,\n  FullscreenOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Tooltip } from \"antd\";\nimport { Resizable } from \"re-resizable\";\nimport { useRef, useState } from \"react\";\nimport { Transforms } from \"slate\";\nimport {\n  useSelected,\n  ReactEditor,\n  RenderElementProps,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nimport { useCallback } from \"react\";\nimport { utils } from \"../common/utils\";\n\nexport const ImgComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n  const editor = useSlateStatic();\n  const [state, setState] = useState({\n    size: {\n      width: element.width || 100,\n      height: element.height || 100,\n    },\n    showTool: false,\n  });\n  const viewerIns = useRef<InstanceType<typeof Viewer>>();\n\n  const enableResize = () => {\n    return ReactEditor.isReadOnly(editor)\n      ? {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }\n      : {\n          top: true,\n          right: true,\n          bottom: true,\n          left: true,\n          topRight: true,\n          bottomRight: true,\n          bottomLeft: true,\n          topLeft: true,\n        };\n  };\n\n  const onResizeStop: ConstructorParameters<\n    typeof Resizable\n  >[0][\"onResizeStop\"] = (e, direction, ref, d) => {\n    const newWidth = state.size.width + d.width;\n    const newHeight = state.size.height + d.height;\n    setState((t) => ({\n      ...t,\n      size: {\n        width: newWidth,\n        height: newHeight,\n      },\n    }));\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        width: newWidth,\n        height: newHeight,\n      },\n      { at: path }\n    );\n  };\n\n  const registeImgViewer = useCallback(\n    (el) => {\n      if (el && !viewerIns.current && readOnly) {\n        viewerIns.current = new Viewer(el, {});\n      }\n    },\n    [readOnly]\n  );\n\n  const showBigImg = () => {\n    const domNode = ReactEditor.toDOMNode(editor, element);\n    const imgNode = domNode.querySelector(\"img\");\n    if (imgNode) {\n      const v = new Viewer(imgNode, {\n        hidden() {\n          v.destroy();\n        },\n      });\n      v.show();\n    }\n  };\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.8,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"black\",\n        zIndex: 9,\n      }}\n    >\n      uploading...\n    </div>\n  );\n\n  const addBorder = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(editor, { border: true }, { at: path });\n  };\n\n  const removeBorder = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.unsetNodes(editor, \"border\", { at: path });\n  };\n\n  const deleteImg = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.delete(editor, { at: path, voids: true, reverse: true });\n    ReactEditor.focus(editor);\n  };\n  const imgFuncs = [\n    {\n      title: \"边框\",\n      icon: <BorderOuterOutlined />,\n      method: addBorder,\n    },\n    {\n      title: \"取消边框\",\n      icon: <BorderlessTableOutlined />,\n      method: removeBorder,\n    },\n    {\n      title: \"查看大图\",\n      icon: <FullscreenOutlined />,\n      method: showBigImg,\n    },\n    {\n      title: \"删除\",\n      icon: <DeleteOutlined />,\n      method: deleteImg,\n    },\n  ];\n\n  /**\n   * 当点击图片的时候，显示工具条，并且如果在当前文档视口内点击任何非本图片的区域后，将会隐藏工具条\n   */\n  const handleImgClick = () => {\n    setState((t) => ({ ...t, showTool: true }));\n    const thisDom = attributes.ref.current;\n    const bindEvnet = (e: any) => {\n      const parent = utils.findParent(e.target, thisDom);\n      if (parent != thisDom) {\n        setState((t) => ({ ...t, showTool: false }));\n        window.removeEventListener(\"click\", bindEvnet);\n      }\n    };\n    window.addEventListener(\"click\", bindEvnet);\n  };\n\n  return (\n    <div\n      {...attributes}\n      contentEditable={false}\n      style={{\n        position: \"relative\",\n        display: \"inline-block\",\n        margin: 5,\n        verticalAlign: \"bottom\",\n        boxShadow: selected ? \"0 0 0 3px rgba(180,215,255,.7)\" : \"none\",\n        border: element.border ? \"1px solid #e5e5e5\" : \"none\",\n      }}\n      onClick={handleImgClick}\n    >\n      <Resizable\n        enable={enableResize()}\n        style={{ display: \"inline-block\" }}\n        size={state.size}\n        onResizeStop={onResizeStop}\n      >\n        {element.id ? mask : null}\n        <Popover\n          content={\n            <Row gutter={8}>\n              {imgFuncs.map((func) => {\n                return (\n                  <Col key={func.title}>\n                    <Tooltip title={func.title}>\n                      <Button\n                        onClick={func.method}\n                        type=\"text\"\n                        icon={func.icon}\n                      ></Button>\n                    </Tooltip>\n                  </Col>\n                );\n              })}\n            </Row>\n          }\n          // trigger={readOnly ? [] : \"click\"}\n          placement=\"bottomLeft\"\n          visible={readOnly ? false : state.showTool}\n        >\n          <img\n            ref={registeImgViewer}\n            width=\"100%\"\n            height=\"100%\"\n            alt=\"\"\n            src={element.url}\n          ></img>\n        </Popover>\n        {children}\n      </Resizable>\n    </div>\n  );\n};\n","/* eslint-disable eqeqeq */\nimport {\n  DeleteOutlined,\n  DownloadOutlined,\n  PaperClipOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Tooltip } from \"antd\";\nimport { Transforms } from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\n\nexport const FileComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const editor = useSlateStatic();\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.5,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"black\",\n        zIndex: 9,\n      }}\n    >\n      uploading...\n    </div>\n  );\n\n  const deleteFile = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.delete(editor, { at: path, voids: true, reverse: true });\n    ReactEditor.focus(editor);\n  };\n\n  const downloadFile = () => {\n    window.open(element.url);\n  };\n\n  const imgFuncs = [\n    {\n      title: \"下载\",\n      icon: <DownloadOutlined />,\n      method: downloadFile,\n    },\n    {\n      title: \"删除\",\n      icon: <DeleteOutlined />,\n      method: deleteFile,\n    },\n  ];\n\n  return (\n    <div\n      {...attributes}\n      contentEditable={false}\n      style={{\n        position: \"relative\",\n        display: \"inline-block\",\n        margin: \"0 5px\",\n        verticalAlign: \"bottom\",\n      }}\n    >\n      {element.id ? mask : null}\n      <Popover\n        content={\n          <Row gutter={8}>\n            {imgFuncs.map((func) => {\n              return (\n                <Col key={func.title}>\n                  <Tooltip title={func.title}>\n                    <Button\n                      onClick={func.method}\n                      type=\"text\"\n                      icon={func.icon}\n                    ></Button>\n                  </Tooltip>\n                </Col>\n              );\n            })}\n          </Row>\n        }\n        trigger={readOnly ? [] : \"click\"}\n        placement=\"bottomLeft\"\n      >\n        <a\n          download\n          href={element.url}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <PaperClipOutlined style={{ marginRight: 2 }} />\n          {element.fileName}\n        </a>\n      </Popover>\n      {children}\n    </div>\n  );\n};\n","/* eslint-disable eqeqeq */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { DisconnectOutlined, SelectOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Form, Input, Popover, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport { CET } from \"../common/Defines\";\n\nexport const LinkComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n  const [content, setContent] = useState<string>();\n  const [url, setUrl] = useState<string>();\n\n  const visitLink = () => {\n    window.open(element.url);\n  };\n\n  const cancelLink = (e: any) => {\n    e.preventDefault();\n    ReactEditor.focus(editor);\n\n    const { selection } = editor;\n    if (!selection) return;\n\n    Transforms.unwrapNodes(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type == CET.LINK;\n      },\n    });\n  };\n\n  const formItemStyle = { marginBottom: 6 };\n\n  const submitChange = () => {\n    ReactEditor.focus(editor);\n    const link = ReactEditor.toSlateNode(editor, attributes.ref.current);\n    const linkPath = ReactEditor.findPath(editor, link);\n    if (link && linkPath) {\n      Transforms.insertText(editor, content || \"link\", {\n        at: Editor.range(editor, linkPath),\n      });\n      Transforms.setNodes(editor, { url }, { at: linkPath });\n    }\n  };\n\n  const editPanel = (\n    <Form size=\"small\">\n      <Row gutter={8} style={{ flexDirection: \"column\", width: 300 }}>\n        <Col flex=\"1\">\n          <Form.Item label=\"操作\" style={formItemStyle}>\n            <Button size=\"small\" onClick={visitLink}>\n              <SelectOutlined title=\"访问链接\" /> 访问链接\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onMouseDown={cancelLink}>\n              <DisconnectOutlined title=\"取消链接\" /> 取消链接\n            </Button>\n          </Form.Item>\n        </Col>\n        <Col flex=\"1\">\n          <Form.Item label=\"文字\" style={formItemStyle}>\n            <Input\n              value={content}\n              onChange={(el: any) => {\n                setContent(el.target.value);\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item label=\"链接\" style={formItemStyle}>\n            <Input\n              value={url}\n              onChange={(el: any) => {\n                setUrl(el.target.value);\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Row justify=\"end\">\n          <Button\n            type=\"primary\"\n            style={{ width: 100, marginRight: 4 }}\n            onClick={submitChange}\n          >\n            确定\n          </Button>\n        </Row>\n      </Row>\n    </Form>\n  );\n\n  const initEditPanel = () => {\n    const linkWrapper = attributes.ref.current;\n    const link = linkWrapper.querySelector(\"a\");\n\n    if (!link) return;\n\n    setUrl(link.href);\n    setContent(link.innerText);\n  };\n\n  return (\n    <div {...attributes} style={{ display: \"inline\", position: \"relative\" }}>\n      <Popover\n        placement=\"right\"\n        content={editPanel}\n        trigger={readOnly ? [] : [\"hover\"]}\n      >\n        <a\n          href={element.url}\n          target=\"__blank\"\n          onMouseEnter={() => initEditPanel()}\n        >\n          {children}\n        </a>\n      </Popover>\n    </div>\n  );\n};\n","// https://github.com/scniro/react-codemirror2\n// https://codemirror.net/doc/manual.html#config\nimport { Select } from \"antd\";\nimport _ from \"lodash\";\nimport { Resizable } from \"re-resizable\";\nimport { useRef } from \"react\";\nimport { useCallback } from \"react\";\nimport { useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { ICodeMirror, Controlled as CodeMirror } from \"react-codemirror2\";\nimport { Transforms } from \"slate\";\nimport { useSlateStatic, ReactEditor, useReadOnly } from \"slate-react\";\nimport { RenderElementProps } from \"slate-react/dist/components/editable\";\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/theme/material.css\");\nrequire(\"codemirror/theme/neat.css\");\nrequire(\"codemirror/theme/darcula.css\");\nrequire(\"codemirror/theme/material-palenight.css\");\nrequire(\"codemirror/mode/xml/xml.js\");\nrequire(\"codemirror/mode/javascript/javascript.js\");\nrequire(\"codemirror/mode/jsx/jsx.js\");\nrequire(\"codemirror/mode/vue/vue.js\");\nrequire(\"codemirror/mode/clike/clike.js\");\n\nconst lans = [\n  {\n    title: \"html\",\n    value: \"text/html\",\n  },\n  {\n    title: \"javascript\",\n    value: \"javascript\",\n  },\n  {\n    title: \"react\",\n    value: \"text/jsx\",\n  },\n  {\n    title: \"react-ts\",\n    value: \"text/typescript-jsx\",\n  },\n  {\n    title: \"vue\",\n    value: \"vue\",\n  },\n  {\n    title: \"java\",\n    value: \"text/x-java\",\n  },\n  {\n    title: \"c++\",\n    value: \"text/x-c++src\",\n  },\n];\n\nexport const CodeComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const editor = useSlateStatic();\n  const [state, setState] = useState({\n    size: {\n      width: \"100%\",\n      height: element.height || 300,\n    },\n    showTool: false,\n  });\n  const [code, setCode] = useState(element.defaultCode || \"\");\n  const codeIns = useRef<any>(null);\n  const saveContent = useRef<any>(\n    _.debounce((value) => {\n      const path = ReactEditor.findPath(editor, element);\n      Transforms.setNodes(\n        editor,\n        {\n          children: [],\n          defaultCode: value,\n        },\n        { at: path }\n      );\n    }, 100)\n  );\n  const codeConfig = useMemo(() => {\n    return {\n      mode: element.defaultMode,\n      theme: \"darcula\",\n      lineNumbers: true,\n      readOnly: readOnly ? \"nocursor\" : false,\n    };\n  }, [element.defaultMode, readOnly]);\n\n  const enableResize = () => {\n    return ReactEditor.isReadOnly(editor)\n      ? {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }\n      : {\n          top: false,\n          right: false,\n          bottom: true,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        };\n  };\n  const onResizeStop: ConstructorParameters<\n    typeof Resizable\n  >[0][\"onResizeStop\"] = (e, direction, ref, d) => {\n    setState((t) => ({\n      ...t,\n      size: {\n        ...t.size,\n        height: ref.offsetHeight,\n      },\n    }));\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        height: ref.offsetHeight,\n      },\n      { at: path }\n    );\n  };\n\n  const onLanChange = (value: string) => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        defaultMode: value,\n      },\n      { at: path }\n    );\n  };\n  const editorDidMount: ICodeMirror[\"editorDidMount\"] = useCallback(\n    (editor: any) => {\n      codeIns.current = editor;\n      editor.setSize(\"100%\", element.height);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const onEditorChange: ICodeMirror[\"onChange\"] = useCallback(\n    (editor, data, value) => {\n      saveContent.current(value);\n    },\n    [saveContent]\n  );\n\n  return (\n    <div {...attributes} contentEditable={false}>\n      <Resizable\n        enable={enableResize()}\n        style={{ display: \"inline-block\", position: \"relative\" }}\n        size={state.size}\n        onResizeStop={onResizeStop}\n        onResize={(a, b, c, d) => {\n          codeIns.current?.setSize(\"100%\", c.offsetHeight);\n        }}\n      >\n        <div\n          style={{\n            color: \"white\",\n            position: \"absolute\",\n            right: 30,\n            top: 5,\n            zIndex: 7,\n          }}\n        >\n          <Select\n            size=\"small\"\n            defaultValue={element.defaultMode}\n            style={{ width: 120, color: \"white\", textAlign: \"right\" }}\n            bordered={false}\n            showArrow={false}\n            onChange={onLanChange}\n          >\n            {lans.map((lan) => {\n              return (\n                <Select.Option key={lan.value} value={lan.value}>\n                  {lan.title}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </div>\n        {useMemo(() => {\n          return (\n            <CodeMirror\n              value={code}\n              onBeforeChange={(editor, data, value) => {\n                setCode(value);\n              }}\n              options={codeConfig}\n              onChange={onEditorChange}\n              editorDidMount={editorDidMount}\n            />\n          );\n        }, [code, codeConfig, editorDidMount, onEditorChange])}\n      </Resizable>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\n\nexport const CheckBoxComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n  return (\n    <div {...attributes}>\n      <Checkbox\n        checked={element.checked}\n        onChange={(e) => {\n          Transforms.setNodes(\n            editor,\n            {\n              checked: e.target.checked,\n            },\n            {\n              at: ReactEditor.findPath(editor, element),\n            }\n          );\n        }}\n        disabled={readOnly}\n      ></Checkbox>\n    </div>\n  );\n};\n","import {\n  EditorType,\n  CustomElement,\n  CustomText,\n  CET,\n  TextWrappers,\n} from \"../common/Defines\";\nimport { TD } from \"../comps/Td\";\nimport { Table } from \"../comps/Table\";\nimport { ImgComp } from \"../comps/ImgComp\";\nimport { FileComp as File } from \"../comps/FileComp\";\nimport { LinkComp } from \"../comps/LinkComp\";\nimport { CodeComp as CODE } from \"../comps/Code\";\nimport { TodoListComp as TODO } from \"../comps/TodoListComp\";\nimport { CheckBoxComp } from \"../comps/CheckBox\";\nimport { RenderElementProps } from \"slate-react\";\n\ndeclare module \"slate\" {\n  interface CustomTypes {\n    Editor: EditorType;\n    Element: CustomElement;\n    Text: CustomText;\n  }\n}\nexport const MyElements: (props: RenderElementProps) => JSX.Element = (\n  props\n) => {\n  const { attributes, children, element } = props;\n  const style: any = {};\n  if (TextWrappers.includes(element.type) && element.textAlign)\n    style.textAlign = element.textAlign;\n\n  switch (element.type) {\n    case CET.CHECKBOX:\n      return <CheckBoxComp {...props} />;\n    case CET.TODOLIST:\n      return <TODO {...props}></TODO>;\n    case CET.NUMBER_LIST:\n      return <ol {...attributes}>{children}</ol>;\n    case CET.NORMAL_LIST:\n      return <ul {...attributes}>{children}</ul>;\n    case CET.LIST_ITEM:\n      return (\n        <li {...attributes} style={{ color: element.liColor || \"unset\" }}>\n          {children}\n        </li>\n      );\n    case CET.DIV:\n      return (\n        <div {...attributes} style={style}>\n          {children}\n        </div>\n      );\n    case CET.H1:\n      return (\n        <h1 {...attributes} style={{ ...style }}>\n          {children}\n        </h1>\n      );\n    case CET.H2:\n      return (\n        <h2 {...attributes} style={{ ...style }}>\n          {children}\n        </h2>\n      );\n    case CET.H3:\n      return (\n        <h3 {...attributes} style={{ ...style }}>\n          {children}\n        </h3>\n      );\n    case CET.H4:\n      return (\n        <h4 {...attributes} style={{ ...style }}>\n          {children}\n        </h4>\n      );\n    case CET.IMG:\n      return <ImgComp {...props}>{children}</ImgComp>;\n    case CET.LINK:\n      return <LinkComp {...props}></LinkComp>;\n    case CET.TABLE:\n      return <Table {...props}></Table>;\n    case CET.TBODY:\n      return <tbody {...attributes}>{children}</tbody>;\n    case CET.TR:\n      const otherAttr: any = {};\n      if (element.shouldEmpty) {\n        otherAttr.contentEditable = false;\n      }\n      return (\n        <tr {...attributes} {...otherAttr}>\n          {element.shouldEmpty ? null : children}\n        </tr>\n      );\n    case CET.TD:\n      return <TD {...props}></TD>;\n    case CET.CODE:\n      return <CODE {...props}></CODE>;\n    case CET.FILE:\n      return <File {...props}></File>;\n    default:\n      return <div {...attributes}>{children}</div>;\n  }\n};\n","import { Marks, EditableProps } from \"../common/Defines\";\n\nexport const MyLeaf: NonNullable<EditableProps[\"renderLeaf\"]> = ({\n  attributes,\n  children,\n  leaf,\n}) => {\n  const style: any = {};\n  if (leaf[Marks.BOLD]) style.fontWeight = \"bold\";\n  if (leaf[Marks.ITALIC]) style.fontStyle = \"italic\";\n  if (leaf[Marks.FontSize]) style.fontSize = leaf.fontSize;\n  if (leaf[Marks.Underline] || leaf[Marks.LineThrough])\n    style.textDecoration = `${leaf[Marks.Underline] ? \"underline\" : \"\"} ${\n      leaf[Marks.LineThrough] ? \"line-through\" : \"\"\n    }`;\n  if (leaf[Marks.Color]) style.color = leaf[Marks.Color];\n  if (leaf[Marks.BGColor]) style.backgroundColor = leaf[Marks.BGColor];\n\n  return (\n    <span {...attributes} style={style}>\n      {children}\n    </span>\n  );\n};\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  createContext,\n} from \"react\";\nimport { createEditor, Transforms, Editor, Operation, Selection } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport {\n  CET,\n  CustomElement,\n  EditableProps,\n  EditorCompShape,\n  Marks,\n  StateShape,\n} from \"./common/Defines\";\nimport { TableLogic } from \"./comps/Table\";\nimport { utils } from \"./common/utils\";\nimport { ToolBar } from \"./comps/TooBar/ToolBar\";\nimport { TdLogic } from \"./comps/Td\";\nimport { withCyWrap } from \"./plugins/WithCyWrap\";\nimport { HandleKeyDownEvent } from \"./EventHandler/HandleKeyDownEvent/HandleKeyDownEvent\";\nimport { MyElements } from \"./RenderElements/MyElements\";\nimport { MyLeaf } from \"./RenderElements/RenderLeaf\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport \"./RichEditor.css\";\nimport { getCopyedCells } from \"./common/globalStore\";\n\ntype savedMarksShape =\n  | (Partial<{\n      [key in Marks]: any;\n    }> &\n      Partial<{\n        [key in keyof CustomElement]: CustomElement[key];\n      }> & {\n        [key: string]: any;\n      })\n  | null\n  | undefined;\n\nexport const EditorContext = createContext<{\n  savedMarks: savedMarksShape;\n  setSavedMarks: (marks: savedMarksShape) => void;\n  readOnly: boolean;\n  setReadOnly: (value: boolean) => void;\n}>({\n  savedMarks: null,\n  setSavedMarks: () => {},\n  readOnly: false,\n  setReadOnly: () => {},\n});\n\nconst EditorComp: EditorCompShape = (props) => {\n  /**\n   * 解决live refresh问题的链接\n   * https://github.com/ianstormtaylor/slate/issues/4081\n   */\n  const [editor] = useState(withCyWrap(withHistory(withReact(createEditor()))));\n  // const [editor] = useState(withCyWrap(withReact(createEditor())));\n  const [value, setValue] = useState<StateShape>(() => {\n    const content =\n      props.content ||\n      window.localStorage.getItem(\"savedContent\") ||\n      JSON.stringify([{ type: CET.DIV, children: [{ text: \"\" }] }]);\n    // return TableLogic.model || JSON.parse(content);\n    return JSON.parse(content);\n  });\n  const ref = useRef<{\n    preUndos: Operation[][];\n    preSelection: Selection | null;\n  }>({\n    preUndos: [],\n    preSelection: null,\n  });\n  const [savedMarks, setSavedMarks] = useState<savedMarksShape>();\n\n  useEffect(() => {\n    if (savedMarks != null) {\n      document.body.style.cursor = \"copy\";\n    } else {\n      document.body.style.cursor = \"auto\";\n    }\n  }, [savedMarks]);\n  const [readOnly, setReadOnly] = useState(false);\n\n  useEffect(() => {\n    // setTimeout(() => {\n    //   unitTest(editor);\n    // }, 100);\n    // TableLogic.resetSelectedTds(editor);\n    props.getEditor?.(editor);\n\n    editor.normalizeNode([editor, []]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n\n  const renderElement: EditableProps[\"renderElement\"] = useCallback(\n    (props) => <MyElements {...props} editorRef={ref}></MyElements>,\n    []\n  );\n  const renderLeaf: EditableProps[\"renderLeaf\"] = useCallback((props) => {\n    return <MyLeaf {...props}></MyLeaf>;\n  }, []);\n  const MyToolBar = useMemo(() => {\n    return <ToolBar></ToolBar>;\n  }, []);\n\n  const handleSelect = () => {\n    // 处理格式刷逻辑\n    if (savedMarks != null) {\n      const hasSelectTd = TableLogic.getFirstSelectedTd(editor);\n      if (hasSelectTd) return;\n\n      const hasTextAlign = savedMarks[Marks.TextAlign];\n      const textWrapper = Editor.above(editor, {\n        at: editor.selection?.anchor,\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n      if (!textWrapper) return;\n      for (const key of Object.values(Marks)) {\n        Editor.removeMark(editor, key);\n      }\n      if (hasTextAlign) {\n        Transforms.unsetNodes(editor, Marks.TextAlign, { at: textWrapper[1] });\n      }\n      for (const key in savedMarks) {\n        if (key === \"children\") continue;\n        Editor.addMark(editor, key, savedMarks[key]);\n      }\n      if (hasTextAlign) {\n        Transforms.setNodes(\n          editor,\n          {\n            [Marks.TextAlign]: savedMarks[Marks.TextAlign],\n          },\n          { at: textWrapper[1] }\n        );\n      }\n      setSavedMarks(null);\n      document.body.style.cursor = \"auto\";\n      editor.selection &&\n        Transforms.select(editor, Editor.start(editor, editor.selection));\n    }\n  };\n  const handleFocus = () => {\n    ref.current.preSelection &&\n      Editor.hasPath(editor, ref.current.preSelection.anchor.path) &&\n      Editor.hasPath(editor, ref.current.preSelection.focus.path) &&\n      Transforms.select(editor, ref.current.preSelection);\n  };\n  const handleBlur = () => {\n    ref.current.preSelection = editor.selection;\n  };\n  const handleMouseDown = (e: any) => {\n    // 取消所有表格的选中状态，因为表格部分已经阻止了自己的mousedown事件传递到父组件，所以只要能在这里触发的，都肯定不是在表格里\n    TdLogic.deselectAllTd(editor);\n  };\n  const handleKeyDown = (e: any) => HandleKeyDownEvent(e, editor);\n\n  return (\n    <div className=\"cyEditor\" style={{ position: \"relative\" }}>\n      <Slate\n        editor={editor}\n        value={value}\n        onChange={(value) => {\n          setValue(value);\n        }}\n      >\n        <EditorContext.Provider\n          value={useMemo(() => {\n            return {\n              savedMarks: savedMarks,\n              setSavedMarks: setSavedMarks,\n              readOnly,\n              setReadOnly,\n            };\n          }, [readOnly, savedMarks])}\n        >\n          {MyToolBar}\n          <div\n            className=\"cyEditor__content\"\n            style={{\n              overflow: \"auto\",\n              height: window.screen.availHeight - 200,\n              border: \"1px solid\",\n              padding: 12,\n            }}\n          >\n            <Editable\n              renderElement={renderElement}\n              renderLeaf={renderLeaf}\n              autoFocus\n              readOnly={readOnly}\n              onCompositionStart={() => {\n                utils.removeRangeElement(editor);\n              }}\n              onDOMBeforeInput={(e) => {\n                const copyedCells = getCopyedCells() || [];\n                if (copyedCells.length > 0) {\n                  window?.navigator?.clipboard?.writeText(\"selected td paste only\");\n                }\n              }}\n              placeholder=\"welcome to cyEditor!\"\n              onKeyDown={handleKeyDown}\n              onMouseDown={handleMouseDown}\n              onDragStart={(e) => {\n                e.preventDefault();\n              }}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              onSelect={handleSelect}\n            />\n          </div>\n        </EditorContext.Provider>\n      </Slate>\n    </div>\n  );\n};\n\nexport default EditorComp;\n","import _ from \"lodash\";\nimport {\n  Editor,\n  Range,\n  Element,\n  Text,\n  Transforms,\n  NodeEntry,\n  Path,\n} from \"slate\";\nimport { CET, CustomElement, EditorType, InLineTypes } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\nimport { ListLogic } from \"../comps/ListComp\";\nimport { TableLogic } from \"../comps/Table\";\nimport { htmlToSlate } from \"../common/htmlToSlate\";\nimport { HistoryEditor } from \"slate-history\";\nimport { insertImg } from \"../comps/TooBar/funcButtons/InsertImgButton\";\nimport { insertFile } from \"../comps/TooBar/funcButtons/InsertFileButton\";\nimport {\n  setCopyedCells,\n  setCopyedMaxRowAndCol,\n  setCopyedContent,\n  getCopyedCells,\n} from \"../common/globalStore\";\nimport { ToDoListLogic } from \"../comps/TodoListComp\";\n\nexport const withCyWrap = (editor: EditorType) => {\n  const {\n    deleteForward,\n    deleteBackward,\n    insertText,\n    getFragment,\n    insertFragment,\n    insertData,\n    insertBreak,\n    isInline,\n    isVoid,\n    normalizeNode,\n    apply,\n  } = editor;\n\n  editor.apply = (e) => {\n    try {\n      if (e.type === \"set_node\") {\n        const node = Editor.node(editor, e.path);\n        const isImg =\n          node && Element.isElement(node[0]) && node[0].type === CET.IMG;\n        const isFile =\n          node && Element.isElement(node[0]) && node[0].type === CET.FILE;\n        const isTd = node && TableLogic.isTd(node[0]);\n        const isTable = node && TableLogic.isTable(node[0]);\n        const properties = e.newProperties as Partial<CustomElement>;\n        const oldProperties = e.properties as Partial<CustomElement>;\n        if (\n          (isTd &&\n            (properties.selected ||\n              properties.width ||\n              properties.start ||\n              properties.tdIsEditing ||\n              oldProperties.start ||\n              oldProperties.selected ||\n              oldProperties.width ||\n              oldProperties.tdIsEditing)) ||\n          (isTable &&\n            (properties.wrapperWidthWhenCreated ||\n              oldProperties.wrapperWidthWhenCreated)) ||\n          isImg ||\n          isFile\n        ) {\n          HistoryEditor.withoutSaving(editor, () => {\n            apply(e);\n          });\n          return;\n        }\n      }\n      apply(e);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n  const myInsertBreak = _.throttle(() => {\n    if (!editor.selection) return;\n    const todoList = ToDoListLogic.getToDoList(editor);\n    if (todoList) {\n      if (\n        todoList &&\n        Editor.string(editor, todoList[1], { voids: true }) === \"\"\n      ) {\n        Transforms.setNodes(editor, { type: CET.DIV }, { at: todoList[1] });\n        return;\n      }\n      insertBreak();\n      return;\n    }\n    if (Range.isExpanded(editor.selection)) {\n      utils.removeRangeElement(editor);\n    } else {\n      const textWrapper = utils.getParent(editor, editor.selection.anchor.path);\n      if (!textWrapper[0]) return;\n      const twParent = Editor.parent(editor, textWrapper[1]);\n\n      const li = ListLogic.isListItem(twParent[0]) && twParent;\n      if (li && Editor.string(editor, li[1], { voids: true }) === \"\") {\n        Transforms.liftNodes(editor, { at: li[1] });\n        return;\n      }\n    }\n    insertBreak();\n  }, 50);\n\n  editor.insertBreak = () => {\n    myInsertBreak();\n  };\n\n  editor.deleteFragment = () => {\n    utils.removeRangeElement(editor);\n    // deleteFragment(direction);\n  };\n\n  editor.deleteForward = (unit) => {\n    if (!editor.selection) return;\n\n    const afterPos = Editor.after(editor, editor.selection.anchor);\n\n    const nextTd = Editor.above(editor, {\n      at: afterPos,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    const nowTd = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    // 退格后是否即将进入其他td，包括从一个td到另一个td，以及非td元素进入td\n    const isGoingToOtherTd =\n      (nextTd != null && nowTd != null && !Path.equals(nowTd[1], nextTd[1])) ||\n      (nextTd != null && nowTd == null);\n\n    const dealList = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      normalizeList();\n\n      const isInList = ListLogic.isInList(editor);\n\n      if (isInList && isGoingToOtherTd) return true;\n    };\n    const dealTextWrapper = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      const isInTextWrapper = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n\n      if (isInTextWrapper && utils.isElementEmpty(editor, isInTextWrapper)) {\n        if (isGoingToOtherTd) {\n          Transforms.removeNodes(editor, {\n            hanging: true,\n          });\n          Transforms.move(editor);\n          setTimeout(() => {\n            Transforms.move(editor, { reverse: true });\n          }, 0);\n        } else deleteForward(unit);\n        return true;\n      }\n\n      if (isGoingToOtherTd) return true;\n    };\n    const dealToDoList = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const isInTodoList = ToDoListLogic.getToDoList(editor);\n      if (isInTodoList) {\n        if (isGoingToOtherTd) return true;\n        deleteForward(unit);\n        return true;\n      }\n    };\n    const dealCode = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const afterPos = Editor.after(editor, editor.selection.anchor);\n      if (afterPos) {\n        const code = Editor.above(editor, {\n          at: afterPos,\n          match(n) {\n            return Element.isElement(n) && n.type === CET.CODE;\n          },\n        });\n        if (code) {\n          Transforms.removeNodes(editor, {\n            at: code[1],\n            hanging: true,\n          });\n          return true;\n        }\n      }\n    };\n    const dealTable = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const isInTable = TableLogic.isInTable(editor);\n\n      if (isInTable && nowTd != null) {\n        return Editor.isEnd(editor, editor.selection.anchor, nowTd[1]);\n      }\n    };\n\n    // 函数如果不需要默认的退格行为，则返回true\n    const rel = [\n      dealList,\n      dealCode,\n      dealToDoList,\n      dealTable,\n      dealTextWrapper,\n    ].some((func) => {\n      return func(editor);\n    });\n\n    if (rel) return;\n\n    deleteForward(unit);\n  };\n\n  editor.deleteBackward = (unit) => {\n    if (!editor.selection) return;\n\n    const isInTable = TableLogic.isInTable(editor);\n\n    const beforePos = Editor.before(editor, editor.selection.anchor);\n\n    const preTd = Editor.above(editor, {\n      at: beforePos,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    const nowTd = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    // 退格后是否即将进入其他td，包括从一个td到另一个td，以及非td元素进入td\n    const isGoingToOtherTd =\n      (preTd != null && nowTd != null && !Path.equals(nowTd[1], preTd[1])) ||\n      (preTd != null && nowTd == null);\n\n    const dealList = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      const isInList = ListLogic.isInList(editor);\n      if (!isInList) return;\n\n      normalizeList();\n\n      const li = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n      if (!li) return;\n\n      const isLiEmpty = utils.isElementEmpty(editor, li);\n\n      const list = Editor.parent(editor, li[1]);\n      const isOnlyChild = list[0].children.length === 1; // list是否只有一个li\n      const isInLiFirstPos = Editor.isStart(\n        editor,\n        editor.selection.anchor,\n        li[1]\n      ); // 光标是否在li的起始位置\n\n      if (isInLiFirstPos) {\n        if (isLiEmpty && isOnlyChild) {\n          Transforms.removeNodes(editor, {\n            at: li[1],\n          });\n          // 当list中只有一个空的li元素时，如果此时进行退格，那么就是删掉list元素，此时光标会后移\n          // 如果光标后移的位置就是表格，那么出出现bug，也就是光标位于表格的前面的hanging里，如果此时再接着输入文字，可能会出错\n          // 解决方案就是先move一下，再move回来，这里两次move必须在不同的任务队列里\n          Transforms.move(editor);\n          setTimeout(() => {\n            Transforms.move(editor, { reverse: true });\n            isGoingToOtherTd && Transforms.move(editor);\n          }, 10);\n          return true;\n        }\n\n        if (isLiEmpty && !isOnlyChild) {\n          Transforms.removeNodes(editor, {\n            at: li[1],\n          });\n          return true;\n        }\n\n        if (!isLiEmpty && isOnlyChild) {\n          !isGoingToOtherTd && deleteBackward(unit);\n          return true;\n        }\n\n        if (!isLiEmpty && !isOnlyChild) {\n          !isGoingToOtherTd && deleteBackward(unit);\n          return true;\n        }\n        return true;\n      }\n    };\n    const dealCode = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const prePos = Editor.before(editor, editor.selection.anchor);\n      if (prePos) {\n        const code = Editor.above(editor, {\n          at: prePos,\n          match(n) {\n            return Element.isElement(n) && n.type === CET.CODE;\n          },\n        });\n        if (code) {\n          Transforms.removeNodes(editor, {\n            at: code[1],\n            hanging: true,\n          });\n          return true;\n        }\n      }\n    };\n    const dealTable = (editor: EditorType) => {\n      if (!editor.selection) return;\n      if (isInTable && nowTd != null) {\n        return Editor.isStart(editor, editor.selection.anchor, nowTd[1]);\n      }\n    };\n    const dealTextWrapper = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      const isInTextWrapper = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n\n      if (isInTextWrapper && utils.isElementEmpty(editor, isInTextWrapper)) {\n        if (isGoingToOtherTd) {\n          Transforms.removeNodes(editor, {\n            hanging: true,\n          });\n          Transforms.move(editor);\n          setTimeout(() => {\n            Transforms.move(editor, { reverse: true });\n          }, 0);\n        } else deleteBackward(unit);\n        return true;\n      }\n\n      if (isGoingToOtherTd) return true;\n    };\n    const dealToDoList = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const isInTodoList = ToDoListLogic.getToDoList(editor);\n      if (isInTodoList) {\n        const isInFirstPos = Editor.isStart(\n          editor,\n          editor.selection.anchor,\n          isInTodoList[1]\n        );\n        if (isInFirstPos) {\n          if (isGoingToOtherTd) {\n            Transforms.removeNodes(editor, { at: isInTodoList[1] });\n            Transforms.move(editor);\n          } else {\n            // 如果光标是文档的第一个位置，那么取消todoList组件的wrap，改为textWrapper\n            if (Editor.before(editor, editor.selection) == null) {\n              Editor.withoutNormalizing(editor, () => {\n                Transforms.wrapNodes(\n                  editor,\n                  {\n                    type: CET.DIV,\n                    children: [],\n                  },\n                  {\n                    at: isInTodoList[1],\n                  }\n                );\n                Transforms.unwrapNodes(editor, {\n                  at: [...isInTodoList[1], 0],\n                });\n              });\n            } else deleteBackward(unit);\n          }\n          return true;\n        }\n      }\n    };\n\n    // 函数如果不需要默认的退格行为，则返回true\n    const rel = [\n      dealList,\n      dealCode,\n      dealToDoList,\n      dealTable,\n      dealTextWrapper,\n    ].some((func) => {\n      return func(editor);\n    });\n\n    if (rel) return;\n\n    deleteBackward(unit);\n  };\n\n  editor.insertText = (e) => {\n    if (editor.selection && Range.isExpanded(editor.selection)) {\n      utils.removeRangeElement(editor);\n    }\n    insertText(e);\n  };\n\n  // 在本编辑器复制的时候触发\n  // dataTransfer 说明：https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransfer\n  /**\n   * 当document的range存在时，按ctrl+c复制时触发\n   * 逻辑：当有文字选区要复制时，首先将复制的表格单元格给取消掉。\n   * @returns \n   */\n  editor.getFragment = () => {\n    setCopyedCells(null);\n    setCopyedMaxRowAndCol({ copyedAreaHeight: 0, copyedAreaWidth: 0 });\n    setCopyedContent(getFragment());\n    return getFragment();\n  };\n\n  /**\n   * 在粘贴的时候触发，只可能发生在editor被focus的时，也就是不可能会有单元格被选中的时候\n   * 两种情况，\n   * 一种是刚复制了单元格，然后粘贴到document的range里。如果刚复制单元格，在RichEditor.tsx中的onDOMBeforeInput中做了特殊处理\n   * 一种是没复制单元格，粘贴上一次复制的range。\n   * @param fragment \n   */\n  editor.insertFragment = (fragment) => {\n    utils.removeRangeElement(editor);\n\n    const copyedCells = getCopyedCells() || [];\n    const copyedCellsContent = utils.filterCopyedContent(\n      copyedCells.map((cell) => cell[0])\n    );\n    const isCopyedSelectTdContent = copyedCells.length > 0;\n    const isGoingToPastInTable = TableLogic.isInTable(editor);\n    const copyedContent =\n      copyedCells.length > 0 ? copyedCellsContent : fragment; // 如果有选中的单元格被复制，那么优先复制该内容\n\n    if (isGoingToPastInTable) {\n      copyedContent &&\n        insertFragment(_.cloneDeep(utils.filterCopyedContent(copyedContent)));\n    } else {\n      // 粘贴多个单元格内容到表格外\n      if (isCopyedSelectTdContent) {\n        // 还要考虑是否全选了表格 【进行中》。。】\n        insertFragment(_.cloneDeep(copyedContent));\n      } else {\n        copyedContent &&\n          insertFragment(_.cloneDeep(utils.filterCopyedContent(copyedContent)));\n      }\n    }\n  };\n\n  // 粘贴的时候首先触发的方法，在这里可以将传入的内容进行个性化处理，然后生成新的dataTransfer传递给slate\n  editor.insertData = (e) => {\n    // console.log(\"insertdata\");\n    // 解码application/x-slate-fragment内容\n    // console.log(\n    //   utils.decodeContentToSlateData(e.getData(\"application/x-slate-fragment\"))\n    // );\n    // newTransfer.setData(\"text/plain\", \"plan text\");\n    // const tds = getCopyedCells();\n    // if (tds) {\n    //   const [table] = Editor.nodes(editor, {\n    //     at: tds[0][1],\n    //     mode: \"lowest\",\n    //     match(n) {\n    //       return TableLogic.isTable(n);\n    //     },\n    //   });\n    //   if (table) {\n    //     const newTransfer = new DataTransfer();\n    //     newTransfer.setData(\n    //       \"application/x-slate-fragment\",\n    //       // 编码内容\n    //       utils.encodeSlateContent([table[0] as Descendant])\n    //     );\n    //     insertData(newTransfer);\n    //     return;\n    //   }\n    // } else\n    if (e.types.includes(\"application/x-slate-fragment\")) {\n      insertData(e);\n    } else if (e.types.includes(\"text/plain\")) {\n      const newTransfer = new DataTransfer();\n      const content = htmlToSlate(e.getData(\"text/plain\"));\n      newTransfer.setData(\n        \"application/x-slate-fragment\",\n        // 编码内容\n        utils.encodeSlateContent(content)\n      );\n      insertData(newTransfer);\n    } else if (e.types.includes(\"Files\")) {\n      const files = e.files;\n      insertImg(editor, files);\n      insertFile(editor, files);\n    }\n  };\n\n  const normalizeList = _.debounce(() => {\n    const afterList = Editor.next(editor, {\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    if (afterList) editor.normalizeNode(afterList);\n    const beforeList = Editor.previous(editor, {\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    if (beforeList) editor.normalizeNode(beforeList);\n  }, 0);\n\n  editor.isInline = (node) => {\n    if ([CET.IMG, CET.FILE, CET.LINK, CET.CHECKBOX].includes(node.type)) {\n      return true;\n    }\n    return isInline(node);\n  };\n  editor.isVoid = (node) => {\n    if ([CET.IMG, CET.FILE, CET.CODE, CET.CHECKBOX].includes(node.type)) {\n      return true;\n    }\n    return isVoid(node);\n  };\n\n  const normalizeEditor = (nodeEntry: NodeEntry) => {\n    const [node, path] = nodeEntry;\n\n    // 文档的最后一个元素总是一个空的textWrapper\n    const editorLastNode = utils.getNodeByPath(editor, [\n      editor.children.length - 1,\n    ]);\n    const preLastNode = utils.getNodeByPath(editor, [\n      editor.children.length - 2,\n    ]);\n    if (\n      !(\n        utils.isTextWrapper(editorLastNode[0]) &&\n        Editor.string(editor, editorLastNode[1], {\n          voids: true,\n        }) === \"\"\n      )\n    ) {\n      Transforms.insertNodes(\n        editor,\n        {\n          type: CET.DIV,\n          children: [{ text: \"\" }],\n        },\n        {\n          at: [editor.children.length],\n        }\n      );\n      return true;\n    }\n    // 如果文档的倒数第二个元素也是空的，那么删除\n    if (\n      utils.isTextWrapper(preLastNode[0]) &&\n      Editor.string(editor, preLastNode[1], {\n        voids: true,\n      }) === \"\"\n    ) {\n      Transforms.removeNodes(editor, { at: preLastNode[1] });\n      return true;\n    }\n\n    if (editor.children.length === 0) {\n      // 如果没有子元素，那么强行添加一个\n      Transforms.insertNodes(editor, {\n        type: CET.DIV,\n        children: [{ text: \"\" }],\n      });\n      return;\n    }\n\n    // 如果一个块级元素出现在textWrapper里，那么直接删除\n    if (Element.isElement(node) && Editor.isBlock(editor, node)) {\n      const [parent] = utils.getParent(editor, path);\n      if (utils.isTextWrapper(parent)) {\n        Transforms.removeNodes(editor, { at: path });\n        return;\n      }\n    }\n\n    // inline元素和void元素的前后都必须有文本节点\n    if (Element.isElement(node) && InLineTypes.includes(node.type)) {\n      const prePath = utils.getPath(path, \"pre\");\n      const [preNode] = utils.getNodeByPath(editor, prePath);\n      if (preNode && !Text.isText(preNode)) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: prePath });\n        return;\n      }\n\n      const nextPath = utils.getPath(path, \"next\");\n      const [nextNode] = utils.getNodeByPath(editor, nextPath);\n      if (!Text.isText(nextNode)) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: nextPath });\n        return;\n      }\n    }\n\n    if (Element.isElement(node) && node.type === CET.LINK) {\n      if (Editor.string(editor, path, { voids: true }) === \"\") {\n        Transforms.removeNodes(editor, { at: path });\n        return;\n      }\n    }\n\n    if (TableLogic.normalizeTable(editor, nodeEntry)) return;\n    if (ListLogic.normalizeList(editor, nodeEntry)) return;\n    if (ToDoListLogic.normalizeToDoList(editor, nodeEntry)) return;\n\n    normalizeNode(nodeEntry);\n  };\n\n  editor.normalizeNode = normalizeEditor;\n\n  return editor;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./components/RichEditor/RichEditor\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n"],"sourceRoot":""}