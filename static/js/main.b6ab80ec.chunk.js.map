{"version":3,"sources":["components/RichEditor/common/Defines.ts","components/RichEditor/comps/ListComp.ts","components/RichEditor/common/utils.ts","components/RichEditor/common/globalStore.ts","components/RichEditor/comps/Td.tsx","components/RichEditor/comps/Table.tsx","components/RichEditor/comps/TooBar/common/StaticButton.tsx","components/RichEditor/comps/TooBar/funcButtons/CleanFormatButton.tsx","components/RichEditor/comps/TooBar/common/config.ts","components/RichEditor/comps/TooBar/funcButtons/CopyFormatButton.tsx","components/RichEditor/comps/TooBar/common/ValueSelector.tsx","components/RichEditor/comps/TooBar/funcButtons/TextAlignButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontSizeButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontTypeButton.tsx","components/RichEditor/comps/TooBar/common/ColorPickerCore.tsx","components/RichEditor/comps/TooBar/common/ColorPicker.tsx","components/RichEditor/comps/TooBar/funcButtons/FontColorButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontBGColorButton.tsx","components/RichEditor/comps/TooBar/common/MarkButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontWeightButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontStyleButton.tsx","components/RichEditor/comps/TooBar/funcButtons/UnderLineButton.tsx","components/RichEditor/comps/TooBar/funcButtons/LineThroughButton.tsx","components/RichEditor/comps/TooBar/common/ReactButton.tsx","components/RichEditor/comps/TooBar/funcButtons/ToDoListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/OrderListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/NormalListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SetLinkButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertImgButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertFileButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteColumnButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteRowButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTextAfterTable.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTextBeforeTable.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertColumnBeforeCell.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertColumnAfterCell.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertRowBeforeButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertRowAfterButton.tsx","components/RichEditor/comps/TooBar/funcButtons/MergeCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SplitCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/ClearCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/AddCodeBoxButton.tsx","components/RichEditor/comps/TooBar/ToolBar.tsx","components/RichEditor/common/htmlToSlate.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/HandleKeyDownEvent.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleSelectedTd.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleRangeExpand.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleRangeCollapsed.ts","components/RichEditor/comps/ImgComp.tsx","components/RichEditor/comps/FileComp.tsx","components/RichEditor/comps/LinkComp.tsx","components/RichEditor/comps/Code.tsx","components/RichEditor/comps/TodoListComp.tsx","components/RichEditor/RenderElements/MyElements.tsx","components/RichEditor/RenderElements/RenderLeaf.tsx","components/RichEditor/RichEditor.tsx","components/RichEditor/plugins/WithCyWrap.ts","index.tsx"],"names":["CET","Marks","TextWrappers","DIV","H1","H2","H3","H4","P","InLineTypes","IMG","LINK","ListLogic","toggleList","editor","type","Editor","nodes","mode","match","n","Text","isText","isInline","text","textWrapper","parent","twParent","li","isListItem","liParent","utils","getParent","isSameTypeToggle","Element","isElement","isChangeListType","isSetToList","Transforms","unwrapNodes","withoutNormalizing","parents","Set","selectedListItems","path","add","join","forEach","value","p","split","map","o","setNodes","at","hanging","Array","from","reverse","isTextWrapper","length","wrapNodes","LIST_ITEM","children","isOrderList","isInLi","selection","Range","isCollapsed","getFirstAboveElementType","node","includes","NUMBER_LIST","NORMAL_LIST","normalizeList","nodeEntry","Node","child","removeNodes","secChildPath","concat","liftNodes","colors","texts","Color","size","onlyColor","pop","liColor","prePath","getPath","getNodeByPath","preNode","mergeNodes","nextPath","nextNode","first","onlyChild","childP","childCount","tabEvent","universal","indentLi","liEntry","ReactEditor","findPath","shiftTabEvent","liftLi","liPath","pp","parentParent","encodeSlateContent","data","window","btoa","encodeURIComponent","JSON","stringify","decodeContentToSlateData","parse","decodeURIComponent","atob","removeRangeElement","codes","CODE","code","codeRange","range","inte","intersection","equals","tables","TableLogic","isTable","table","tableRange","lists","list","listRange","TODOLIST","todoList","tRange","delete","unit","isInTd","isTd","Path","collapse","edge","anchor","element","isEditor","EDITOR","basePath","slice","t","error","this","isSelectTd","getFirstSelectedTd","globalStore","selectedTds","editingTdsPath","preSelectedTdPos","row","col","copyedCellsPath","copyedAreaHeight","copyedAreaWidth","copyedCells","copyedContent","setCopyedContent","setCopyedCells","getCopyedCells","setCopyedMaxRowAndCol","setPreSelectedTdPos","getStrPathSetOfSelectedTds","filterPath","setStrPathSetOfSelectedTds","paths","hasPath","getEditingTdsPath","setEditingTdsPath","editingTdPath","tdMinWidth","tdMinHeight","TD","attributes","useSlateStatic","readOnly","useReadOnly","useEffect","width","height","pathStr","editingTds","nowEdit","canTdEdit","nowSelected","selected","otherAttr","contentEditable","mask","style","position","top","left","opacity","color","display","justifyContent","alignItems","fontSize","backgroundColor","zIndex","colSpan","rowSpan","minWidth","maxWidth","cursor","BGColor","userSelect","textAlign","TextAlign","FontSize","fontWeight","BOLD","fontStyle","ITALIC","textDecoration","Underline","LineThrough","onDoubleClick","e","stopPropagation","selfDom","ref","current","td","toSlateNode","tdPath","TdLogic","editTd","onMouseDown","target","className","finallyTd","clickDom","clickNode","clickNodePath","tdWrapper","above","chooseTd","right","x","clientX","cell","i","nativeEvent","ele","tagName","cellNode","cellPath","tbody","TBODY","tdMap","getTdMap","tdOriginRow","tdOriginCol","targetCol","j","originCol","originRow","cells","tdInMap","tdDom","toDOMNode","initX","offsetWidth","push","mouseMoveHandler","dx","c","document","addEventListener","mouseUpHandler","querySelectorAll","tr","rowIndex","cellIndex","parseInt","tdNode","removeEventListener","bottom","y","clientY","targetRow","initY","offsetHeight","preventDefault","dy","minHeight","maxHeight","deselectAllTd","topTd","start","select","trs","startPoins","fill","tds","colStart","findIndex","colEnd","rowStart","rowEnd","fillTd","getSelectedTdInTdMap","a","b","selectedTd","Map","helper","selectedTdMap","has","set","Math","min","max","getEditingTd","selectedTdsPath","getSelectedTdsPath","unsetNodes","findTargetTd","direct","some","startTd","rightX","targetTd","deselect","clearTd","getSelectedTds","Table","useRef","isBeginSelectTd","mouseDownStartPoint","lastSelectedPaths","preMouseOnTdPath","useContext","EditorContext","savedMarks","setSavedMarks","nowWrapperWidth","preWrapperWidth","wrapperWidthWhenCreated","tableDom","querySelector","tableNode","tablePath","reCalcTdWidth","resetSelectedTds","selectTd","_","debounce","pa","pb","commonNode","common","pbTd","paTd","deselectTds","TR","tda","tdb","nowTdsPath","keys","nowSelectedTds","preSelectedTds","nowSelectedTdsPathSet","preSelectedTdsPathSet","deselectedPath","filter","newSelectedPath","overflowX","overflowY","border","tableLayout","wordBreak","borderCollapse","slateNode","find","onmousemove","abs","point","onmouseup","onmousedown","onMouseUp","copyMarks","hasSelectTd","getSelectedTdsSize","Object","values","key","getEditingOrSelectedTdBelongTable","model","TABLE","item","fatherIndex","index","isSelectedTd","normalizeTable","shouldEmpty","insertNodes","string","voids","deleteRow","deleteVArea","Infinity","removePath","unshift","leftCol","moveNodes","to","deleteColumn","deleteHArea","sort","arow","brow","acol","bcol","insertColumn","count","nowTd","nowTr","insertCol","editorDom","getInsertCells","cloneDeep","nowTdRow","nowTdCol","tdInTdMap","Number","isFinite","downTd","downTdOriginPos","insertRow","insertNode","getInsertRow","tdCount","splitTd","belongTr","tdCol","tdRow","tdColSpan","tdRowSpan","leftSumColSpan","findInsertCol","sumColSpan","isInNowTr","insertTdCount","mergeTd","isOnlyOne","tbodyPath","firstTd","maxColSpan","maxRowSpan","newTdPath","firstTdEntry","toBeDeleted","deleteTable","insertDivAfterTable","insertDivBeforeTable","pathArr","tdArr","arr","getEditingTds","tdsPath","copyCells","areaWidth","areaHeight","pasteCells","startPoint","message","waitToDeleteTdsPath","uniqWith","minRow","reduce","nowCopyedCellsRow","insertTds","copyedTd","childLength","StaticButton","props","title","mouseEnterDelay","mouseLeaveDelay","disabled","mousedownFunc","CleanFormatButton","all","el","mark","removeMark","cleanFormat","Icon","component","viewBox","version","xmlns","p-id","d","ToolBarConfig","CopyFormatButton","useSlate","useState","setDisabled","isDisabled","isNotOnlyOne","useMemo","marks","console","warn","copyMark","FormatPainterOutlined","ValueSelector","visible","setVisible","setValue","toolDom","getValue","onMouseLeave","placeholder","bordered","open","dropdownClassName","getPopupContainer","triggerNode","parentElement","body","onSelect","focus","afterSelect","options","Option","String","optionLabelRender","TextAlignButton","FontSizeButton","getMarkValue","addMark","FontTypeButton","setTextWrapper","toUpperCase","ColorPickerCore","hex","setColor","padding","flexDirection","onChange","icon","DeleteOutlined","onClick","ColorPicker","_getColor","getColor","getComputedStyle","placement","overlayStyle","overlay","trigger","FontColorButton","FontColorsOutlined","FontBGColorButton","BgColorsOutlined","MarkButton","setType","getType","isMarkActive","toggleMark","FontWeightButton","BoldOutlined","FontStyleButton","ItalicOutlined","UnderLineButton","UnderlineOutlined","LineThroughButton","StrikethroughOutlined","ReactButton","disabledCondition","_isDisabled","ToDoListButton","CheckSquareOutlined","OrderListButton","OrderedListOutlined","NormalListButton","UnorderedListOutlined","SetLinkButton","url","setLink","LinkOutlined","acceptImgTypes","maxSize","uploadImg","file","formData","FormData","append","axios","method","headers","res","filename","Promise","rel","setTimeout","URL","createObjectURL","insertImg","files","legalFiles","illegalFiles","isArray","valideImg","name","id","callback","isExpanded","move","insertImgToEditor","Date","getTime","InsertImgButton","fileRef","replace","click","accept","multiple","hidden","PictureOutlined","acceptFileTypes","uploadFile","insertFile","valideFile","fileName","FILE","insertFileToEditor","InsertFileButton","PaperClipOutlined","InsertTableButton","counts","setCounts","tdMouseEnter","parentNode","addTable","cellCount","rowCount","isInteger","tw","twDom","offsetParent","tableWrapperWidth","onMouseEnter","TableOutlined","DeleteTableButton","DeleteColumnButton","DeleteColumnOutlined","DeleteRowButton","DeleteRowOutlined","InsertTextAfterTable","VerticalAlignBottomOutlined","InsertTextBeforeTable","VerticalAlignTopOutlined","InsertColumnBeforeCell","InsertRowLeftOutlined","InsertColumnAfterCell","InsertRowRightOutlined","InsertRowBeforeButton","InsertRowAboveOutlined","InsertRowAfterButton","InsertRowBelowOutlined","MergeCellButton","MergeCellsOutlined","SplitCellButton","SplitCellsOutlined","ClearCellButton","ClearOutlined","AddCodeBoxButton","defaultMode","CodeOutlined","ReadOnlyButton","setReadOnly","ToolBar","diverComp","marginBottom","align","log","localStorage","setItem","SaveOutlined","deserialize","nodeType","textContent","nodeStyle","cssText","changeKey","trim","$0","$1","$2","$3","changeValue","childNodes","nodeName","jsx","every","Block","getAttribute","htmlToSlate","html","DOMParser","parseFromString","HandleKeyDownEvent","isNotOnlyOneTd","getFirstTd","shiftKey","ctrlKey","handleSelectedTd","handleRangeExpand","elementType","insertText","isStart","isEnd","handleRangeCollapsed","ImgComp","useSelected","showTool","state","setState","viewerIns","registeImgViewer","useCallback","Viewer","imgFuncs","BorderOuterOutlined","BorderlessTableOutlined","FullscreenOutlined","imgNode","v","destroy","show","margin","verticalAlign","boxShadow","enable","isReadOnly","topRight","bottomRight","bottomLeft","topLeft","onResizeStop","direction","newWidth","newHeight","content","gutter","func","alt","src","FileComp","DownloadOutlined","download","href","marginRight","LinkComp","setContent","setUrl","formItemStyle","editPanel","flex","Item","label","SelectOutlined","DisconnectOutlined","justify","link","linkPath","innerText","initEditPanel","require","lans","CodeComp","defaultCode","setCode","codeIns","saveContent","codeConfig","theme","lineNumbers","editorDidMount","setSize","onEditorChange","onResize","defaultValue","showArrow","lan","onBeforeChange","TodoListComp","checked","MyElements","MyLeaf","leaf","createContext","EditorComp","deleteForward","deleteBackward","deleteFragment","getFragment","insertData","insertBreak","isVoid","normalizeNode","apply","getTodoList","isImg","isFile","properties","newProperties","oldProperties","HistoryEditor","withoutSaving","twWrapper","afterPos","after","afterTd","isCode","before","beforePos","preTd","insertFragment","fragment","newTransfer","DataTransfer","setData","types","getData","afterList","next","beforeList","previous","isBlock","withCyWrap","withHistory","withReact","createEditor","getItem","preUndos","preSelection","renderElement","editorRef","renderLeaf","MyToolBar","Provider","overflow","screen","availHeight","autoFocus","onCompositionStart","onKeyDown","onDragStart","onBlur","onFocus","hasTextAlign","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b6ab80ec.chunk.js","sourcesContent":["import { BaseEditor } from \"slate\";\nimport { HistoryEditor } from \"slate-history\";\nimport { Editable, ReactEditor, Slate } from \"slate-react\";\n\nexport enum CET {\n  EDITOR = \"editor\",\n  NUMBER_LIST = \"ol\",\n  NORMAL_LIST = \"ul\",\n  LIST_ITEM = \"li\",\n  DIV = \"div\",\n  Block = \"block\",\n  P = \"p\",\n  H1 = \"h1\",\n  H2 = \"h2\",\n  H3 = \"h3\",\n  H4 = \"h4\",\n  IMG = \"img\",\n  LINK = \"link\",\n  TABLE = \"table\",\n  TBODY = \"tbody\",\n  TR = \"tr\",\n  TD = \"td\",\n  TODOLIST = \"todo\",\n  CODE = \"code\",\n  FILE = \"file\",\n}\n\nexport const TextWrappers = [CET.DIV, CET.H1, CET.H2, CET.H3, CET.H4, CET.P];\nexport const InLineTypes = [CET.IMG, CET.LINK];\n\nexport enum Marks {\n  BOLD = \"bold\",\n  ITALIC = \"italic\",\n  FontSize = \"fontSize\",\n  Underline = \"underline\",\n  LineThrough = \"line-through\",\n  Color = \"color\",\n  BGColor = \"backgroundColor\",\n  TextAlign = \"textAlign\",\n}\n\nexport type CustomElement = {\n  type: CET;\n  [key: string]: any;\n  url?: string; // 图片，文件，Link组件的参数\n  fileName?: string; // 文件名\n  id?: number; // 唯一标识，表示图片或者文件正在上传中\n  border?: boolean; // img边框\n  colSpan?: number; // td属性\n  rowSpan?: number; // td 属性\n  width?: number; // td样式属性\n  height?: number; // td样式属性\n  selected?: boolean; // td是否被选中\n  canTdEdit?: boolean; // td是否可以编辑\n  liColor?: string; // li color\n  checked?: boolean; // todoList属性\n  wrapperWidthWhenCreated?: number; // table创建时所在的容器宽度，用于动态计算td的宽度\n  defaultMode?: string; // code 专属\n  defaultCode?: string; // code 专属\n  textAlign?: \"left\" | \"right\" | \"center\"; // textWrapper的属性\n  tdMap?: any; // 用于计算tdMap\n  children: (CustomText | CustomElement)[];\n};\nexport type CustomText = { text: string; [key: string]: any } & Partial<\n  {\n    [key in Marks]: any;\n  }\n>;\nexport type EditorType = BaseEditor & ReactEditor & HistoryEditor;\n\nexport type StateShape = Parameters<typeof Slate>[0][\"value\"];\nexport type EditorCompPropShape = {};\nexport type EditorCompShape = (\n  props: EditorCompPropShape\n) => React.ReactElement;\nexport type EditableProps = Parameters<typeof Editable>[0];\n","/* eslint-disable eqeqeq */\nimport {\n  Transforms,\n  Range,\n  Text,\n  Element,\n  Editor,\n  Node,\n  NodeEntry,\n} from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { CET, EditorType, Marks } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\n\nexport const ListLogic = {\n  toggleList(editor: EditorType, type: CET.NORMAL_LIST | CET.NUMBER_LIST) {\n    // 判断当前是不是列表形态\n    const [text] = Editor.nodes(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return Text.isText(n) || Editor.isInline(editor, n);\n      },\n    });\n    if (!text) return;\n    const textWrapper = Editor.parent(editor, text[1]);\n    if (!textWrapper) return;\n    const twParent = Editor.parent(editor, textWrapper[1]);\n    const li = ListLogic.isListItem(twParent[0]) && twParent;\n    const liParent = li && utils.getParent(editor, li[1]);\n\n    const isSameTypeToggle =\n      li &&\n      liParent &&\n      Element.isElement(liParent[0]) &&\n      liParent?.[0].type == type;\n    // 是否改变列表类型\n    const isChangeListType = li && !isSameTypeToggle;\n    // 是否删除列表\n    const isCancelList = li && isSameTypeToggle;\n    // 是否设置为列表\n    const isSetToList = !li;\n\n    const cancelList = () => {\n      Transforms.unwrapNodes(editor, {\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n    };\n\n    const changeListType = () => {\n      Editor.withoutNormalizing(editor, () => {\n        const parents = new Set<string>();\n        const selectedListItems = Editor.nodes(editor, {\n          mode: \"lowest\",\n          match(n) {\n            return ListLogic.isListItem(n);\n          },\n        });\n        for (const [, path] of selectedListItems) {\n          const parent = utils.getParent(editor, path);\n          parent[0] != null && parents.add(parent[1].join(\"-\"));\n        }\n        parents.forEach((value) => {\n          const p = value.split(\"-\").map((o) => +o);\n          Transforms.setNodes(\n            editor,\n            {\n              type,\n            },\n            {\n              at: p,\n              hanging: true,\n            }\n          );\n        });\n      });\n    };\n\n    const setList = () => {\n      Editor.withoutNormalizing(editor, () => {\n        const elementsInRange = Array.from(\n          Editor.nodes(editor, {\n            reverse: true,\n            mode: \"lowest\",\n            match(n) {\n              return utils.isTextWrapper(n);\n            },\n          })\n        );\n\n        for (const [, path] of elementsInRange) {\n          if (path.length == 0) continue;\n          const [parent] = utils.getParent(editor, path);\n          if (ListLogic.isListItem(parent)) continue;\n          Transforms.wrapNodes(\n            editor,\n            {\n              type: CET.LIST_ITEM,\n              children: [],\n            },\n            { at: path }\n          );\n          if (!ListLogic.isOrderList(parent)) {\n            Transforms.wrapNodes(\n              editor,\n              {\n                type,\n                children: [],\n              },\n              { at: path }\n            );\n          }\n        }\n      });\n    };\n\n    if (isCancelList) {\n      cancelList();\n    } else if (isChangeListType) {\n      changeListType();\n    } else if (isSetToList) {\n      setList();\n    }\n  },\n  isInLi(editor: EditorType) {\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      return utils.getFirstAboveElementType(editor) == CET.LIST_ITEM;\n    }\n    return false;\n  },\n  isListItem(node: Node): node is Element {\n    return Element.isElement(node) && [CET.LIST_ITEM].includes(node.type);\n  },\n  isOrderList(node: Node | null | undefined): node is Element {\n    return (\n      Element.isElement(node) &&\n      [CET.NUMBER_LIST, CET.NORMAL_LIST].includes(node.type)\n    );\n  },\n  normalizeList(editor: EditorType, nodeEntry: NodeEntry) {\n    const [node, path] = nodeEntry;\n\n    if (ListLogic.isListItem(node)) {\n      const parent = utils.getParent(editor, path);\n      /**\n       * 如果父节点为空\n       * 或者\n       * 不为列表元素或者子元素为空，\n       * 或者\n       * 子元素只有一个文本节点(且本身在本编辑器中也是不合法的，只不过slate会默认给block元素加入一个默认的空文本节点)\n       *\n       */\n      if (parent.length == 0 || !ListLogic.isOrderList(parent[0])) {\n        Transforms.unwrapNodes(editor, { at: path });\n        return true;\n      }\n\n      if (\n        node.children.length == 0 ||\n        (node.children.length == 1 && Text.isText(Node.child(node, 0)))\n      ) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n\n      if (node.children.length > 1) {\n        const secChildPath = path.concat([1]);\n        Transforms.wrapNodes(\n          editor,\n          { type: CET.LIST_ITEM, children: [] },\n          { at: secChildPath }\n        );\n        Transforms.liftNodes(editor, { at: secChildPath });\n        return true;\n      }\n\n      // 如果所有的text都是一样的Color，那么设置li的color也为该color\n      const colors = new Set();\n      for (const [child] of Node.texts(node)) {\n        colors.add(child[Marks.Color]);\n      }\n      if (colors.size == 1) {\n        const onlyColor = Array.from(colors).pop();\n        onlyColor &&\n          Transforms.setNodes(editor, { liColor: onlyColor }, { at: path });\n        return;\n      }\n    }\n\n    if (ListLogic.isOrderList(node)) {\n      // 如果自己跟前一个节点都是列表节点，那么将前一个改成和自己一样\n      const prePath = utils.getPath(path, \"pre\");\n      const [preNode] = utils.getNodeByPath(editor, prePath);\n\n      if (ListLogic.isOrderList(preNode) && preNode.type != node.type) {\n        Transforms.setNodes(editor, { type: node.type }, { at: prePath });\n        return true;\n      }\n\n      // 合并前一个相同的列表元素\n      if (ListLogic.isOrderList(preNode) && preNode.type == node.type) {\n        Transforms.mergeNodes(editor, { at: path });\n        return true;\n      }\n\n      const nextPath = utils.getPath(path, \"next\");\n      const [nextNode] = utils.getNodeByPath(editor, nextPath);\n\n      // 如果自己跟后一个节点都是列表节点，那么将自己的类型改成和它一样\n      if (ListLogic.isOrderList(nextNode) && nextNode.type != node.type) {\n        Transforms.setNodes(editor, { type: nextNode.type }, { at: nextPath });\n        return true;\n      }\n\n      // 合并后一个相同的列表元素\n      if (ListLogic.isOrderList(nextNode) && nextNode.type == node.type) {\n        Transforms.mergeNodes(editor, { at: nextPath });\n        return true;\n      }\n\n      // 如果只有一个列表子节点，那么将自己变成和子节点一样的类型\n      if (node.children.length == 1) {\n        const [onlyChild] = Node.first(node, [0]);\n        if (ListLogic.isOrderList(onlyChild) && onlyChild.type != node.type) {\n          Transforms.setNodes(editor, { type: onlyChild.type }, { at: path });\n          return true;\n        }\n      }\n\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        // 如果不为li元素，则提升\n        if (!ListLogic.isListItem(child) && !ListLogic.isOrderList(child)) {\n          Transforms.liftNodes(editor, { at: childP });\n          return true;\n        }\n      }\n\n      // 如果没有符合条件的子元素，那么删除此列表元素\n      let childCount = 0; // li,ul,ol数量\n      for (const [child] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (ListLogic.isOrderList(child) || ListLogic.isListItem(child)) {\n          childCount++;\n        }\n      }\n      if (childCount == 0) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n    }\n    return false;\n  },\n  tabEvent(editor: EditorType) {\n    Editor.withoutNormalizing(editor, () => {\n      const selectedListItems = Editor.nodes(editor, {\n        universal: true,\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n\n      for (const [n, p] of selectedListItems) {\n        ListLogic.indentLi(editor, [n, p]);\n      }\n    });\n  },\n  indentLi(editor: EditorType, liEntry: NodeEntry) {\n    Editor.withoutNormalizing(editor, () => {\n      const [li] = liEntry;\n      const p = ReactEditor.findPath(editor, li);\n\n      const nextNode = utils.getNodeByPath(editor, utils.getPath(p, \"next\"));\n      const parent = utils.getParent(editor, p);\n      if (nextNode.length > 0 && ListLogic.isOrderList(nextNode?.[0])) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: nextNode[0].type,\n            children: [],\n          },\n          { at: p }\n        );\n      } else if (parent.length > 0 && ListLogic.isOrderList(parent?.[0])) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: parent[0].type,\n            children: [],\n          },\n          { at: p }\n        );\n      }\n    });\n  },\n  shiftTabEvent(editor: EditorType) {\n    Editor.withoutNormalizing(editor, () => {\n      const selectedListItems = Editor.nodes(editor, {\n        universal: true,\n        reverse: true,\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n\n      for (const [n, p] of selectedListItems) {\n        ListLogic.liftLi(editor, [n, p]);\n      }\n    });\n  },\n  liftLi(editor: EditorType, liEntry: NodeEntry) {\n    const [, liPath] = liEntry;\n    const [parent, pp] = utils.getParent(editor, liPath);\n    const [parentParent] = parent && utils.getParent(editor, pp);\n\n    if (ListLogic.isOrderList(parentParent)) {\n      Transforms.liftNodes(editor, {\n        at: liPath,\n      });\n    }\n  },\n};\n","/* eslint-disable eqeqeq */\nimport {\n  Element,\n  Editor,\n  Path,\n  Text,\n  Node,\n  Transforms,\n  Range,\n  Descendant,\n} from \"slate\";\nimport { TextWrappers, EditorType, CET } from \"./Defines\";\nimport { TableLogic } from \"../comps/Table\";\nimport { jsx } from \"slate-hyperscript\";\nimport { ListLogic } from \"../comps/ListComp\";\n\nconst deserialize: any = (el: any) => {\n  // text node\n  if (el.nodeType === 3) {\n    return el.textContent;\n    // not element node\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{ text: \"\" }];\n  }\n\n  switch (el.nodeName) {\n    case \"BODY\":\n      return jsx(\"fragment\", {}, children);\n    case \"BR\":\n      return \"\\n\";\n    case \"BLOCKQUOTE\":\n      return jsx(\"element\", { type: \"quote\" }, children);\n    case \"P\":\n    case \"DIV\":\n      return jsx(\"element\", { type: CET.DIV }, children);\n    case \"A\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.LINK,\n          url: el.getAttribute(\"href\"),\n          content: el.innserHTML,\n        },\n        children\n      );\n    case \"IMG\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.IMG,\n          url: el.getAttribute(\"src\"),\n        },\n        children\n      );\n    case \"TABLE\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TABLE,\n        },\n        children\n      );\n    case \"TBODY\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TBODY,\n        },\n        children\n      );\n    case \"TR\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TR,\n        },\n        children\n      );\n    case \"TD\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TD,\n          colSpan: el.getAttribute(\"colSpan\"),\n        },\n        children\n      );\n    default:\n      return el.textContent;\n  }\n};\n\n/**\n * const html = '...'\nconst document = new DOMParser().parseFromString(html, 'text/html')\ndeserialize(document.body)\n */\n\nexport const utils = {\n  encodeSlateContent(data: Descendant[]) {\n    return window?.btoa(encodeURIComponent(JSON.stringify(data)));\n  },\n  decodeContentToSlateData(data: string) {\n    return JSON.parse(decodeURIComponent(window.atob(data)));\n  },\n  removeRangeElement(editor: EditorType) {\n    const { selection } = editor;\n    if (!selection) return;\n    if (Range.isCollapsed(selection)) return;\n\n    // 如果全选了代码块，那么删除\n    const codes = Editor.nodes(editor, {\n      at: selection,\n      match(n) {\n        return Element.isElement(n) && n.type === CET.CODE;\n      },\n    });\n    for (const code of codes) {\n      if (code) {\n        const codeRange = Editor.range(editor, code[1]);\n        const inte = Range.intersection(selection, codeRange);\n        if (inte && Range.equals(codeRange, inte)) {\n          Transforms.removeNodes(editor, { at: code[1] });\n          utils.removeRangeElement(editor);\n          return;\n        }\n      }\n    }\n\n    // 如果全选了表格，那么直接删除表格\n    const tables = Editor.nodes(editor, {\n      at: selection,\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n    for (const table of tables) {\n      if (table) {\n        const tableRange = Editor.range(editor, table[1]);\n        const inte = Range.intersection(selection, tableRange);\n        if (inte && Range.equals(tableRange, inte)) {\n          Transforms.removeNodes(editor, { at: table[1] });\n          utils.removeRangeElement(editor);\n          return;\n        }\n      }\n    }\n\n    // 如果全选了列表，那么直接删除列表即可\n    const lists = Editor.nodes(editor, {\n      at: selection,\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    for (const list of lists) {\n      if (!!list) {\n        const listRange = Editor.range(editor, list[1]);\n        const inte = Range.intersection(selection, listRange);\n        if (inte && Range.equals(listRange, inte)) {\n          Transforms.removeNodes(editor, { at: list[1] });\n          utils.removeRangeElement(editor);\n          return;\n        }\n      }\n    }\n\n    // 部分删除，此部分最耗费性能，因为考虑到列表和表格可能杂糅在一起，所以需要从textWrapper一个个处理\n    const texts = Array.from(\n      Editor.nodes(editor, {\n        reverse: true,\n        match(n, p) {\n          return Text.isText(n) || Editor.isInline(editor, n);\n        },\n      })\n    );\n    for (const [, p] of texts) {\n      const textWrapper = utils.getParent(editor, p);\n      if (\n        Element.isElement(textWrapper[0]) &&\n        textWrapper[0].type === CET.TODOLIST\n      ) {\n        const todoList = textWrapper;\n        const tRange = Editor.range(editor, todoList[1]);\n        const inte =\n          editor.selection && Range.intersection(editor.selection, tRange);\n        if (!inte) continue;\n        if (Range.equals(inte, tRange)) {\n          Transforms.removeNodes(editor, {\n            at: todoList[1],\n          });\n        } else {\n          Transforms.delete(editor, {\n            at: inte,\n            reverse: true,\n            unit: \"character\",\n            hanging: true,\n          });\n        }\n        continue;\n      }\n      if (textWrapper.length > 0 && utils.isTextWrapper(textWrapper[0])) {\n        const tRange = Editor.range(editor, textWrapper[1]);\n        const inte =\n          editor.selection && Range.intersection(editor.selection, tRange);\n        if (!inte) continue;\n        const [twParent] = utils.getParent(editor, textWrapper[1]);\n        const isInTd = TableLogic.isTd(twParent);\n        // 如果整个被包含，那么直接删除textWrapper\n        if (\n          Range.equals(inte, tRange) &&\n          !(isInTd && twParent.children.length == 1) &&\n          !Path.equals(texts[0][1], p)\n        ) {\n          Transforms.removeNodes(editor, {\n            at: textWrapper[1],\n          });\n        } else {\n          if (Range.isCollapsed(inte)) continue;\n          Transforms.delete(editor, {\n            at: inte,\n            reverse: true,\n            unit: \"character\",\n            hanging: true,\n          });\n        }\n      }\n    }\n\n    Transforms.collapse(editor, { edge: \"start\" });\n  },\n  isTextWrapper(node: Node) {\n    return Element.isElement(node) && TextWrappers.includes(node.type);\n  },\n  // 获取包裹光标文本位置的li或者td\n  getFirstAboveElementType(editor: EditorType) {\n    if (editor.selection) {\n      const textWrapper = utils.getParent(editor, editor.selection.anchor.path);\n      if (!textWrapper[0]) return null;\n      const element = utils.getParent(editor, textWrapper[1]);\n      if (!element[0]) return null;\n\n      return (\n        (Element.isElement(element[0]) && element[0].type) ||\n        (Editor.isEditor(element[0]) && CET.EDITOR)\n      );\n    }\n  },\n  getPath(path: Path, type: \"pre\" | \"next\" | \"parent\") {\n    const basePath = path.slice(0, path.length - 1);\n    const t = path[path.length - 1];\n    return type == \"parent\"\n      ? basePath\n      : [...basePath, type == \"pre\" ? t - 1 : t + 1];\n  },\n  getNodeByPath(editor: EditorType, path: Path) {\n    try {\n      return Editor.node(editor, path);\n    } catch (error) {\n      return [];\n    }\n  },\n  getParent(editor: EditorType, path: Path) {\n    return this.getNodeByPath(editor, this.getPath(path, \"parent\"));\n  },\n  isSelectTd(editor: EditorType) {\n    const hasSelectedTd = TableLogic.getFirstSelectedTd(editor);\n    return hasSelectedTd == null;\n  },\n};\n","import { Descendant, Editor, NodeEntry, Path } from \"slate\";\nimport { EditorType } from \"./Defines\";\n\ntype preSelectedTdPosShape = {\n  row: number;\n  col: number;\n} | null;\n\ntype globalStoreShape = {\n  selectedTds: Set<string>;\n  editingTdsPath: Set<string>;\n  preSelectedTdPos: preSelectedTdPosShape;\n  copyedCellsPath: Path[] | null;\n  copyedAreaHeight: number; // 复制的区域的高度\n  copyedAreaWidth: number; // 复制的区域的宽度\n  copyedCells: NodeEntry[] | null;\n  copyedContent: Descendant[] | null;\n};\nconst globalStore: globalStoreShape = {\n  selectedTds: new Set<string>(),\n  editingTdsPath: new Set<string>(),\n  preSelectedTdPos: {\n    row: 0,\n    col: 0,\n  },\n  copyedCellsPath: null,\n  copyedAreaHeight: 0,\n  copyedAreaWidth: 0,\n  copyedCells: null,\n  copyedContent: null,\n};\n\nexport const getCopyedContent = () => {\n  return globalStore.copyedContent;\n};\n\nexport const setCopyedContent = (value: globalStoreShape[\"copyedContent\"]) => {\n  globalStore.copyedContent = value;\n};\n\nexport const setCopyedCells = (value: globalStoreShape[\"copyedCells\"]) => {\n  globalStore.copyedCells = value;\n};\n\nexport const getCopyedCells = () => {\n  return globalStore.copyedCells;\n};\n\nexport const getCopyedMaxRowAndCol = () => {\n  return {\n    copyedAreaHeight: globalStore.copyedAreaHeight,\n    copyedAreaWidth: globalStore.copyedAreaWidth,\n  };\n};\n\nexport const setCopyedMaxRowAndCol = (value: {\n  copyedAreaHeight: globalStoreShape[\"copyedAreaHeight\"];\n  copyedAreaWidth: globalStoreShape[\"copyedAreaWidth\"];\n}) => {\n  globalStore.copyedAreaHeight = value.copyedAreaHeight;\n  globalStore.copyedAreaWidth = value.copyedAreaWidth;\n};\n\nexport const setCopyedCellsPath = (\n  value: globalStoreShape[\"copyedCellsPath\"]\n) => {\n  globalStore.copyedCellsPath = value;\n};\n\nexport const getCopyedCellsPath = () => {\n  return globalStore.copyedCellsPath;\n};\n\nexport const getPreSelectedTdPos = () => {\n  return globalStore.preSelectedTdPos;\n};\n\nexport const setPreSelectedTdPos = (value: preSelectedTdPosShape) => {\n  globalStore.preSelectedTdPos = value;\n};\n\nexport const getStrPathSetOfSelectedTds = (editor: EditorType) => {\n  filterPath(editor, globalStore.selectedTds);\n  return globalStore.selectedTds;\n};\n\nexport const setStrPathSetOfSelectedTds = (\n  selectedTds: globalStoreShape[\"selectedTds\"]\n) => {\n  globalStore.selectedTds = selectedTds;\n};\n\nconst filterPath = (editor: EditorType, paths: Set<string>): void => {\n  for (const p of paths) {\n    const path = p.split(\",\").map((o) => +o);\n    if (!Editor.hasPath(editor, path)) {\n      paths.delete(p);\n      filterPath(editor, paths);\n      return;\n    }\n  }\n};\n\nexport const getEditingTdsPath = (editor: EditorType) => {\n  filterPath(editor, globalStore.editingTdsPath);\n  return globalStore.editingTdsPath;\n};\n\nexport const setEditingTdsPath = (\n  editingTdPath: globalStoreShape[\"editingTdsPath\"]\n) => {\n  globalStore.editingTdsPath = editingTdPath;\n};\n","/* eslint-disable eqeqeq */\nimport { useEffect } from \"react\";\nimport { Editor, Node, Element, Transforms, Path, NodeEntry } from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useReadOnly,\n  useSlateStatic,\n} from \"slate-react\";\nimport { CET, CustomElement, EditorType, Marks } from \"../common/Defines\";\nimport {\n  getEditingTdsPath,\n  getPreSelectedTdPos,\n  getStrPathSetOfSelectedTds,\n  setEditingTdsPath,\n  setPreSelectedTdPos,\n  setStrPathSetOfSelectedTds,\n} from \"../common/globalStore\";\nimport { TableLogic } from \"./Table\";\n\nexport type customTdShape = {\n  start: boolean;\n  colSpan: number;\n  rowSpan: number;\n  row: number; // 在tdMap里的坐标\n  col: number; // 在tdMap里的坐标\n  originRow: number; // 在原来tbody里的坐标\n  originCol: number; // 在原来tbody里的坐标\n} & CustomElement;\n\ntype tdMapShape = Array<customTdShape[]>;\ntype getTdMapReturn = {\n  tdMap: tdMapShape;\n  startPoins: customTdShape[];\n};\n\nexport let tdMinWidth = 100;\nexport const tdMinHeight = 30;\n\nexport const TD: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  element,\n  children,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  useEffect(() => {\n    const path = ReactEditor.findPath(editor, element);\n    if (element.width == null || element.height == null) {\n      Transforms.setNodes(\n        editor,\n        {\n          width: element.width || tdMinWidth,\n          height: element.height || tdMinHeight,\n        },\n        {\n          at: path,\n        }\n      );\n    }\n    // 销毁时，删除状态\n    return () => {\n      const path = ReactEditor.findPath(editor, element);\n      const pathStr = path.join(\",\");\n      const selectedTds = getStrPathSetOfSelectedTds(editor);\n      const editingTds = getEditingTdsPath(editor);\n      selectedTds.delete(pathStr);\n      editingTds.delete(pathStr);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const path = ReactEditor.findPath(editor, element);\n    const pathStr = path.join(\",\");\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const editingTds = getEditingTdsPath(editor);\n    const { canTdEdit: nowEdit, selected: nowSelected } = element;\n\n    if (nowEdit === true) {\n      editingTds.add(pathStr);\n    } else {\n      editingTds.delete(pathStr);\n    }\n\n    if (nowSelected === true) {\n      selectedTds.add(pathStr);\n    } else {\n      selectedTds.delete(pathStr);\n    }\n  });\n\n  const tdMouseDown = (e: any) => {\n    if ([\"resizer\", \"columnSelector\"].includes(e.target.className) || readOnly)\n      return;\n    const selfDom = attributes.ref.current;\n    if (!selfDom) return;\n\n    const td = ReactEditor.toSlateNode(editor, selfDom);\n    const tdPath = ReactEditor.findPath(editor, td);\n\n    // 如果点击自己的时候，自己还是处于编辑状态，那么退出\n    if (Element.isElement(td) && td.canTdEdit) return;\n\n    const clickDom = e.target;\n    const clickNode = ReactEditor.toSlateNode(editor, clickDom);\n    const clickNodePath = ReactEditor.findPath(editor, clickNode);\n    const isClickSelf = Path.equals(clickNodePath, tdPath);\n\n    let finallyTd: NodeEntry;\n    if (isClickSelf) {\n      finallyTd = [clickNode, clickNodePath];\n    } else {\n      const tdWrapper = Editor.above(editor, {\n        at: clickNodePath,\n        mode: \"lowest\",\n        match(n) {\n          return TableLogic.isTd(n);\n        },\n      });\n      if (!tdWrapper) return;\n      finallyTd = tdWrapper;\n    }\n    if (!finallyTd) return;\n    TdLogic.chooseTd(editor, finallyTd);\n  };\n  const tdDBClick = (e: any) => {\n    // 防止事件冒泡到父元素的td\n    e.stopPropagation();\n    const selfDom = attributes.ref.current;\n    if (!selfDom) return;\n\n    const td = ReactEditor.toSlateNode(editor, selfDom);\n    const tdPath = ReactEditor.findPath(editor, td);\n\n    TdLogic.editTd(editor, [td, tdPath]);\n  };\n  const resizeTdX = (e: any) => {\n    let x = e.clientX;\n    let cell: any = null,\n      table: any = null;\n\n    for (let i = 0, paths = e.nativeEvent.path; i < paths.length; i++) {\n      const ele = paths[i];\n      if (ele.tagName == \"TD\") {\n        cell = ele;\n      }\n      if (ele.tagName == \"TABLE\") {\n        table = ele;\n        break;\n      }\n    }\n\n    if (cell == null || table == null) return;\n\n    const cellNode = ReactEditor.toSlateNode(editor, cell);\n    const cellPath = ReactEditor.findPath(editor, cellNode);\n    const tbody = Editor.above(editor, {\n      at: cellPath,\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    // 找到tdMap中在当前cell的最右边的cells\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    // 先找到当前的cell在tdMap中的位置\n    const [tdOriginRow, tdOriginCol] = cellPath.slice(cellPath.length - 2);\n    let targetCol: number = -1;\n    for (let i = 0; i < tdMap.length; i++) {\n      for (let j = 0; j < tdMap[i].length; j++) {\n        const td = tdMap[i][j];\n        if (td.originCol == tdOriginCol && td.originRow == tdOriginRow) {\n          targetCol = td.col + td.colSpan - 1;\n          break;\n        }\n      }\n      if (targetCol != -1) break;\n    }\n    if (targetCol == -1) return;\n\n    const cells: any[] = [];\n    for (let i = 0; i < tdMap.length; i++) {\n      const tdInMap = tdMap[i][targetCol];\n      const td = Editor.node(editor, [\n        ...tbody[1],\n        tdInMap.originRow,\n        tdInMap.originCol,\n      ]);\n      const tdDom: any = ReactEditor.toDOMNode(editor, td[0]);\n      tdDom.initX = tdDom.offsetWidth;\n      cells.push(tdDom);\n    }\n\n    // const tableInitWidth = table.offsetWidth;\n\n    const mouseMoveHandler = function (e: any) {\n      const dx = e.clientX - x;\n      cells.forEach((c) => {\n        c.style.maxWidth =\n          c.style.width =\n          c.style.minWidth =\n            (c.initX + dx < tdMinWidth ? tdMinWidth : c.initX + dx) + \"px\";\n      });\n      // table.style.width = tableInitWidth + dx + \"px\";\n    };\n\n    const mouseUpHandler = function () {\n      const trs = Array.from(table.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const width = parseInt(td.style.minWidth);\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (Element.isElement(tdNode) && tdNode.width != width) {\n            Transforms.setNodes(\n              editor,\n              { width },\n              { at: [...tbody[1], rowIndex, cellIndex] }\n            );\n          }\n        });\n      });\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", mouseUpHandler);\n    };\n\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n    document.addEventListener(\"mouseup\", mouseUpHandler);\n  };\n\n  const resizeTdY = (e: any) => {\n    let y = e.clientY;\n    let cell: any = null,\n      row: any = null,\n      table: any = null;\n\n    for (let i = 0, paths = e.nativeEvent.path; i < paths.length; i++) {\n      const ele = paths[i];\n      if (ele.tagName == \"TD\") {\n        cell = ele;\n      }\n      if (ele.tagName == \"TR\") {\n        row = ele;\n      }\n      if (ele.tagName == \"TABLE\") {\n        table = ele;\n        break;\n      }\n    }\n\n    if (cell == null || row == null || table == null) return;\n\n    const cellNode = ReactEditor.toSlateNode(editor, cell);\n    const cellPath = ReactEditor.findPath(editor, cellNode);\n    const tbody = Editor.above(editor, {\n      at: cellPath,\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    // 找到tdMap中在当前cell的最右边的cells\n    const { tdMap } = TdLogic.getTdMap(tbody);\n\n    // 先找到当前的cell在tdMap中的位置\n    const [tdOriginRow, tdOriginCol] = cellPath.slice(cellPath.length - 2);\n    let targetRow: number = -1;\n    for (let i = 0; i < tdMap.length; i++) {\n      for (let j = 0; j < tdMap[i].length; j++) {\n        const td = tdMap[i][j];\n        if (td.originCol == tdOriginCol && td.originRow == tdOriginRow) {\n          targetRow = td.row + td.rowSpan - 1;\n          break;\n        }\n      }\n      if (targetRow != -1) break;\n    }\n    if (targetRow == -1) return;\n\n    const cells: any[] = [];\n    for (let i = 0; i < tdMap[0].length; i++) {\n      const tdInMap = tdMap[targetRow][i];\n      const td = Editor.node(editor, [\n        ...tbody[1],\n        tdInMap.originRow,\n        tdInMap.originCol,\n      ]);\n      const tdDom: any = ReactEditor.toDOMNode(editor, td[0]);\n      tdDom.initY = tdDom.offsetHeight;\n      cells.push(tdDom);\n    }\n\n    // const tableInitY = parseInt(window.getComputedStyle(table).minHeight);\n\n    const mouseMoveHandler = function (e: any) {\n      e.preventDefault();\n      const dy = e.clientY - y;\n      cells.forEach(\n        (c) =>\n          (c.style.minHeight =\n            c.style.height =\n            c.style.maxHeight =\n              (c.initY + dy <= tdMinHeight ? tdMinHeight : c.initY + dy) + \"px\")\n      );\n      // table.style.height = tableInitY + dy + \"px\";\n    };\n\n    const mouseUpHandler = function () {\n      const trs = Array.from(table.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const height = parseInt(td.style.height);\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (Element.isElement(tdNode) && tdNode.height != height) {\n            Transforms.setNodes(\n              editor,\n              { height },\n              { at: [...tbody[1], rowIndex, cellIndex] }\n            );\n          }\n        });\n      });\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", mouseUpHandler);\n    };\n\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n    document.addEventListener(\"mouseup\", mouseUpHandler);\n  };\n  const otherAttr: any = {\n    contentEditable: false,\n  };\n  if (element.canTdEdit === true) {\n    delete otherAttr.contentEditable;\n  }\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.6,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"rgba(180,215,255,.7)\",\n        zIndex: 9,\n      }}\n    ></div>\n  );\n\n  return (\n    <td\n      {...attributes}\n      colSpan={element.colSpan}\n      rowSpan={element.rowSpan}\n      style={{\n        minWidth: element.width || tdMinWidth,\n        maxWidth: element.width || tdMinWidth,\n        width: element.width || tdMinWidth,\n        height: element.height || tdMinHeight,\n        cursor: element.canTdEdit || readOnly ? \"inherit\" : \"cell\",\n        color: element[Marks.Color] || \"unset\",\n        // backgroundColor:\n        //   element.selected && !readOnly\n        //     ? \"rgba(180,215,255,.7)\"\n        //     : element[Marks.BGColor] || \"unset\",\n        backgroundColor: element[Marks.BGColor] || \"unset\",\n        userSelect: element.canTdEdit || readOnly ? \"unset\" : \"none\",\n        textAlign: element[Marks.TextAlign] || \"unset\",\n        fontSize: element[Marks.FontSize] || \"unset\",\n        fontWeight: element[Marks.BOLD] ? \"bold\" : \"unset\",\n        fontStyle: element[Marks.ITALIC] ? \"italic\" : \"unset\",\n        textDecoration: `${element[Marks.Underline] ? \"underline\" : \"\"} ${\n          element[Marks.LineThrough] ? \"line-through\" : \"\"\n        }`,\n      }}\n      {...otherAttr}\n      onDoubleClick={tdDBClick}\n      onMouseDown={tdMouseDown}\n    >\n      {children}\n      {element.selected && !readOnly ? mask : null}\n      {!readOnly ? (\n        <>\n          <span\n            className=\"resizer\"\n            style={{\n              position: \"absolute\",\n              zIndex: 10,\n              width: 5,\n              right: 0,\n              top: 0,\n              height: \"100%\",\n              cursor: \"col-resize\",\n              userSelect: \"none\",\n            }}\n            contentEditable={false}\n            onMouseDown={resizeTdX}\n          ></span>\n          <span\n            className=\"resizer\"\n            style={{\n              position: \"absolute\",\n              zIndex: 10,\n              width: \"100%\",\n              height: 5,\n              left: 0,\n              bottom: 0,\n              cursor: \"row-resize\",\n              userSelect: \"none\",\n            }}\n            contentEditable={false}\n            onMouseDown={resizeTdY}\n          ></span>\n        </>\n      ) : null}\n    </td>\n  );\n};\n\nexport const TdLogic = {\n  editTd(editor: EditorType, td: NodeEntry) {\n    TdLogic.deselectAllTd(editor);\n\n    // 获取最顶层td\n    const topTd = Editor.above(editor, {\n      at: td[1],\n      mode: \"highest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    Transforms.setNodes(\n      editor,\n      { canTdEdit: true, start: true },\n      {\n        at: Editor.range(editor, topTd ? topTd[1] : td[1]),\n        mode: \"all\",\n        hanging: true,\n        match(n) {\n          return TableLogic.isTd(n);\n        },\n      }\n    );\n    Transforms.select(editor, td[1]);\n\n    setPreSelectedTdPos({\n      row: td[1][td[1].length - 2],\n      col: td[1][td[1].length - 1],\n    });\n  },\n  getTdMap(tbody: NodeEntry): getTdMapReturn {\n    const trs = tbody[0].children as Element[];\n    const startPoins: customTdShape[] = [];\n    const tdMap: any = new Array(trs.length).fill(0).map(() => []);\n    for (let i = 0; i < trs.length; i++) {\n      const tr = trs[i];\n      const tds = tr.children;\n      for (let j = 0; j < tds.length; j++) {\n        const td = tds[j] as Element;\n        if (!TableLogic.isTd(td)) continue;\n        let colStart = tdMap[i].findIndex((o: any) => o == null);\n        colStart = colStart == -1 ? tdMap[i].length : colStart;\n        let colEnd = colStart + (td.colSpan || 1),\n          rowStart = i,\n          rowEnd = rowStart + (td.rowSpan || 1);\n        const fillTd = {\n          ...td,\n          colSpan: td.colSpan || 1,\n          rowSpan: td.rowSpan || 1,\n          row: i,\n          col: colStart,\n          originRow: i,\n          originCol: j,\n        };\n        if (td.start) startPoins.push(fillTd as customTdShape);\n\n        for (let row = rowStart; row < rowEnd; row++) {\n          for (let col = colStart; col < colEnd; col++) {\n            tdMap[row][col] = fillTd;\n          }\n        }\n      }\n    }\n    return {\n      tdMap,\n      startPoins,\n    };\n  },\n  getSelectedTdInTdMap(tbody: NodeEntry) {\n    const { tdMap, startPoins } = TdLogic.getTdMap(tbody);\n    if (startPoins.length < 1) return null;\n    if (startPoins.length == 1) startPoins[1] = startPoins[0];\n    if (!tdMap) return null;\n\n    const helper = (\n      {\n        colStart,\n        colEnd,\n        rowStart,\n        rowEnd,\n      }: {\n        colStart: number;\n        colEnd: number;\n        rowStart: number;\n        rowEnd: number;\n      },\n      selectedTdMap: Map<customTdShape, number>\n    ) => {\n      for (let i = rowStart; i < rowEnd; i++) {\n        for (let j = colStart; j < colEnd; j++) {\n          const td = tdMap[i][j];\n          if (!selectedTdMap.has(td)) {\n            selectedTdMap.set(td, 1);\n            helper(\n              {\n                colStart: Math.min(td.col, colStart),\n                colEnd: Math.max(colEnd, td.col + td.colSpan),\n                rowStart: Math.min(td.row, rowStart),\n                rowEnd: Math.max(td.row + td.rowSpan, rowEnd),\n              },\n              selectedTdMap\n            );\n            return;\n          }\n        }\n      }\n    };\n\n    const [a, b] = startPoins;\n    const selectedTd = new Map<customTdShape, number>([\n      [a, 1],\n      [b, 1],\n    ]);\n    helper(\n      {\n        colStart: Math.min(a.col, b.col),\n        colEnd: Math.max(a.col + a.colSpan, b.col + b.colSpan),\n        rowStart: Math.min(a.row, b.row),\n        rowEnd: Math.max(a.row + a.rowSpan, b.row + b.rowSpan),\n      },\n      selectedTd\n    );\n    return selectedTd;\n  },\n  getEditingTd(editor: EditorType) {\n    const [td] = Editor.nodes(editor, {\n      at: [],\n      match(n) {\n        return TableLogic.isTd(n) && n.canTdEdit == true;\n      },\n    });\n    return td;\n  },\n  deselectAllTd(editor: EditorType) {\n    const selectedTdsPath = TableLogic.getSelectedTdsPath(editor);\n    for (const path of selectedTdsPath) {\n      Transforms.unsetNodes(editor, [\"selected\", \"start\", \"canTdEdit\"], {\n        at: path,\n      });\n    }\n    setStrPathSetOfSelectedTds(new Set());\n\n    const editingTdsPath = TableLogic.getEditingTdsPath(editor);\n    for (const tdStrPath of editingTdsPath) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      Transforms.unsetNodes(editor, [\"selected\", \"start\", \"canTdEdit\"], {\n        at: path,\n      });\n    }\n    setEditingTdsPath(new Set());\n\n    setPreSelectedTdPos(null);\n  },\n  /**\n   * 找到下一个位置的td\n   */\n  findTargetTd(\n    editor: EditorType,\n    td: NodeEntry,\n    direct: \"left\" | \"right\" | \"up\" | \"down\"\n  ) {\n    if (!td) return;\n    // 首先判断当前是不是只有一个单元格被选中\n    const tbody = Editor.above(editor, {\n      at: td[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody || !Element.isElement(tbody[0])) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const preSelectedTdPos = getPreSelectedTdPos();\n    if (!preSelectedTdPos) return;\n\n    let row, col;\n    tdMap.some((tr, i) => {\n      return tr.some((td, j) => {\n        if (td.start == true) {\n          row = i;\n          col = j;\n          return true;\n        }\n        return false;\n      });\n    });\n    if (row == null || col == null) return;\n    const startTd = tdMap[row][col];\n\n    TdLogic.deselectAllTd(editor);\n    let targetCol: number = preSelectedTdPos.col,\n      targetRow: number = preSelectedTdPos.row;\n    if (direct == \"left\") {\n      targetCol =\n        col == 0\n          ? row == 0\n            ? 0\n            : ((targetRow = preSelectedTdPos.row - 1), tdMap[0].length - 1)\n          : col - 1;\n    } else if (direct == \"right\") {\n      const rightX = col + startTd.colSpan;\n      targetCol =\n        rightX >= tdMap[0].length\n          ? row == tdMap.length - 1\n            ? col\n            : ((targetRow = preSelectedTdPos.row + 1), 0)\n          : rightX;\n    } else if (direct == \"up\") {\n      targetRow = row == 0 ? 0 : row - 1;\n    } else if (direct == \"down\") {\n      targetRow =\n        row + startTd.rowSpan >= tdMap.length ? row : row + startTd.rowSpan;\n    }\n    const targetTd = tdMap[targetRow][targetCol];\n\n    setPreSelectedTdPos({\n      row: targetRow,\n      col: targetCol,\n    });\n    Transforms.setNodes(\n      editor,\n      {\n        selected: true,\n        start: true,\n      },\n      {\n        at: [...tbody[1], targetTd.originRow, targetTd.originCol],\n      }\n    );\n  },\n  chooseTd(editor: EditorType, td: NodeEntry) {\n    TdLogic.deselectAllTd(editor);\n    Transforms.deselect(editor);\n    Transforms.setNodes(\n      editor,\n      {\n        selected: true,\n        start: true,\n        canTdEdit: false,\n      },\n      { at: td[1] }\n    );\n    setPreSelectedTdPos({\n      row: td[1][td[1].length - 2],\n      col: td[1][td[1].length - 1],\n    });\n  },\n  clearTd(editor: EditorType) {\n    // 清空带有selected属性的td\n    const selectedTds = TableLogic.getSelectedTds(editor);\n    for (const [, p] of selectedTds) {\n      for (const [, childP] of Node.children(editor, p, {\n        reverse: true,\n      })) {\n        Transforms.removeNodes(editor, { at: childP });\n      }\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: p });\n    }\n  },\n};\n","/* eslint-disable eqeqeq */\nimport _ from \"lodash\";\nimport { useContext, useRef } from \"react\";\nimport {\n  Node,\n  NodeEntry,\n  Element,\n  Text,\n  Range,\n  Transforms,\n  Editor,\n  Path,\n  Point,\n} from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useReadOnly,\n  useSlateStatic,\n} from \"slate-react\";\nimport { CET, CustomElement, EditorType, Marks } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\nimport { EditorContext } from \"../RichEditor\";\nimport { customTdShape, TdLogic, tdMinHeight, tdMinWidth } from \"./Td\";\nimport {\n  getStrPathSetOfSelectedTds,\n  getEditingTdsPath,\n  setStrPathSetOfSelectedTds,\n  setEditingTdsPath,\n  setCopyedCells,\n  setCopyedMaxRowAndCol,\n  getCopyedCells,\n  getCopyedMaxRowAndCol,\n  getCopyedContent,\n} from \"../common/globalStore\";\nimport { message } from \"antd\";\nimport { useEffect } from \"react\";\ndeclare module \"react\" {\n  interface HTMLAttributes<T> extends DOMAttributes<T> {\n    border?: any;\n  }\n}\n\ntype refShape = {\n  isBeginSelectTd: boolean;\n  mouseDownStartPoint: any;\n  preMouseOnTdPath: Path | null; //  鼠标移动时，记录上一次所处的td\n  lastSelectedPaths: Path[];\n  initX: number;\n  initY: number;\n  prePath: Path | null;\n};\n\nexport const Table: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const ref = useRef<refShape>({\n    isBeginSelectTd: false,\n    mouseDownStartPoint: null,\n    initX: 0,\n    initY: 0,\n    lastSelectedPaths: [],\n    preMouseOnTdPath: null,\n    prePath: null,\n  });\n\n  const { savedMarks, setSavedMarks } = useContext(EditorContext);\n\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  const reCalcTdWidth = () => {\n    const selfDom = attributes.ref.current;\n    if (!selfDom) return;\n    const nowWrapperWidth = selfDom?.offsetWidth - 2;\n    const preWrapperWidth = element.wrapperWidthWhenCreated;\n    const tableDom = selfDom.querySelector(\":scope>table\");\n    if (!tableDom || nowWrapperWidth == null || preWrapperWidth == null) return;\n    if (preWrapperWidth != nowWrapperWidth) {\n      const tableNode = ReactEditor.toSlateNode(editor, selfDom);\n      if (!tableNode) return;\n      const tablePath = ReactEditor.findPath(editor, tableNode);\n      if (!tablePath) return;\n      const trs = Array.from(tableDom.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (!Element.isElement(tdNode)) return;\n          const width =\n            ((tdNode.width || tdMinWidth) / preWrapperWidth) * nowWrapperWidth;\n          Transforms.setNodes(\n            editor,\n            { width },\n            { at: [...tablePath, 0, rowIndex, cellIndex] }\n          );\n        });\n      });\n      Transforms.setNodes(\n        editor,\n        { wrapperWidthWhenCreated: nowWrapperWidth },\n        { at: tablePath }\n      );\n    }\n  };\n\n  useEffect(() => {\n    // 每次渲染时，判断自己当前的容器宽度是否和之前保存的宽度一致，如果不一致，则计算内部所有td的新的宽度\n    reCalcTdWidth();\n    // 每次渲染时，判断自己的位置和之前的位置相比是否变化，如果变化，需要重新计算自己内部td的状态\n    const path = ReactEditor.findPath(editor, element);\n    if (\n      ref.current.prePath != null &&\n      !Path.equals(path, ref.current.prePath)\n    ) {\n      TableLogic.resetSelectedTds(editor);\n    }\n    ref.current.prePath = path;\n  });\n\n  // 找到需要取消选择和新选择的td的完整的path\n  const findPath = (nowSelectedTds: Path[], preSelectedTds: Path[]) => {\n    const nowSelectedTdsPathSet = new Set(\n      nowSelectedTds.map((o) => o.slice(o.length - 2).join(\",\"))\n    );\n\n    const preSelectedTdsPathSet = new Set(\n      preSelectedTds.map((o) => o.slice(o.length - 2).join(\",\"))\n    );\n\n    const deselectedPath = preSelectedTds.filter((path) => {\n      return !nowSelectedTdsPathSet.has(path.slice(path.length - 2).join(\",\"));\n    });\n\n    const newSelectedPath = nowSelectedTds.filter((path) => {\n      return !preSelectedTdsPathSet.has(path.slice(path.length - 2).join(\",\"));\n    });\n\n    return { deselectedPath, newSelectedPath };\n  };\n\n  const selectTd = _.debounce((pa: Point, pb: Point) => {\n    const commonNode = Node.common(editor, pa.path, pb.path);\n    if (!commonNode) return;\n    const pbTd = Editor.above(editor, {\n      at: pb,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (!pbTd) return;\n\n    const preMouseOnTdPath = ref.current.preMouseOnTdPath;\n    if (preMouseOnTdPath && Path.equals(preMouseOnTdPath, pbTd[1])) return;\n    ref.current.preMouseOnTdPath = pbTd[1];\n\n    const paTd = Editor.above(editor, {\n      at: pa,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (!paTd) return;\n\n    // 取消选择上一次选中的td\n    const deselectTds = () => {\n      ref.current.lastSelectedPaths.forEach((p) => {\n        Transforms.unsetNodes(editor, [\"selected\", \"start\"], {\n          at: p,\n        });\n      });\n      ref.current.lastSelectedPaths = [];\n    };\n\n    ref.current.lastSelectedPaths.forEach((p) => {\n      const td = Editor.node(editor, p);\n      if (td && Element.isElement(td[0]) && td[0].start == true) {\n        Transforms.unsetNodes(editor, [\"start\"], {\n          at: p,\n        });\n      }\n    });\n\n    if (Path.equals(paTd[1], pbTd[1])) {\n      deselectTds();\n      // 说明选区在一个td里\n      Transforms.setNodes(\n        editor,\n        { selected: true, start: true },\n        { at: paTd[1] }\n      );\n      return;\n    }\n    if (\n      !Element.isElement(commonNode[0]) ||\n      (commonNode[0].type != CET.TBODY && commonNode[0].type != CET.TR)\n    ) {\n      deselectTds();\n      return;\n    }\n\n    // 找到两个点同一层级的td\n    const tda = Editor.above(editor, {\n      at: pa,\n      mode: \"highest\",\n      match(n, p) {\n        return TableLogic.isTd(n) && p.length > commonNode[1].length;\n      },\n    });\n    if (!tda) return;\n    Transforms.setNodes(\n      editor,\n      { start: true, selected: true },\n      { at: tda[1] }\n    );\n    const tdb = Editor.above(editor, {\n      at: pb,\n      mode: \"highest\",\n      match(n, p) {\n        return TableLogic.isTd(n) && p.length > commonNode[1].length;\n      },\n    });\n    if (!tdb) return;\n    Transforms.setNodes(\n      editor,\n      { start: true, selected: true },\n      { at: tdb[1] }\n    );\n\n    const tbody = Editor.above(editor, {\n      at: tda[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody || !Element.isElement(tbody[0])) return;\n\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (selectedTds == null) return;\n    const nowTdsPath = Array.from(selectedTds.keys()).map((o) => [\n      ...tbody[1],\n      o.originRow,\n      o.originCol,\n    ]);\n\n    const { deselectedPath, newSelectedPath } = findPath(\n      nowTdsPath,\n      ref.current.lastSelectedPaths\n    );\n\n    for (const path of newSelectedPath) {\n      Transforms.setNodes(editor, { selected: true }, { at: path });\n    }\n\n    for (const path of deselectedPath) {\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: path });\n    }\n\n    ref.current.lastSelectedPaths = nowTdsPath;\n  }, 5);\n\n  const handleTableMouseDown = (e: any) => {\n    // 防止事件冒泡到父元素的td\n    e.stopPropagation();\n    try {\n      const slateNode = ReactEditor.toSlateNode(editor, e.target);\n      const path = ReactEditor.findPath(editor, slateNode);\n      ref.current.initX = e.clientX;\n      ref.current.initY = e.clientY;\n\n      ref.current.preMouseOnTdPath = null;\n      ref.current.lastSelectedPaths = [];\n\n      const tdDom = e.nativeEvent.path.find((e: any) => {\n        return e.tagName == \"TD\";\n      });\n      if (!tdDom) return;\n\n      if (\n        !readOnly &&\n        ![\"resizer\", \"columnSelector\"].includes(e.target.className) &&\n        tdDom.contentEditable === \"false\"\n      ) {\n        ref.current.isBeginSelectTd = true;\n        ref.current.mouseDownStartPoint = path;\n\n        for (const [, p] of Editor.nodes(editor, {\n          at: [],\n          match(n) {\n            return (\n              TableLogic.isTd(n) && (n.selected == true || n.start == true)\n            );\n          },\n        })) {\n          ref.current.lastSelectedPaths.push(p);\n        }\n        ref.current.preMouseOnTdPath = path;\n\n        const mousemoveFunc = (e: any) => {\n          try {\n            // 如果移动距离不超过1，那么不进入逻辑\n            if (\n              ref.current.isBeginSelectTd &&\n              (Math.abs(e.clientX - ref.current.initX) > 1 ||\n                Math.abs(e.clientY - ref.current.initY) > 1)\n            ) {\n              const slateNode = ReactEditor.toSlateNode(editor, e.target);\n              const path = ReactEditor.findPath(editor, slateNode);\n              selectTd(\n                Editor.point(editor, ref.current.mouseDownStartPoint),\n                Editor.point(editor, path)\n              );\n            }\n          } catch (error) {}\n        };\n        const mouseupFunc = (e: any) => {\n          ref.current.isBeginSelectTd = false;\n          window.onmousemove = () => {};\n          window.onmousedown = () => {};\n          window.onmouseup = () => {};\n        };\n\n        window.onmousemove = mousemoveFunc;\n        window.onmouseup = mouseupFunc;\n      }\n    } catch (error) {}\n  };\n\n  const handleTableMouseUp = () => {\n    if (savedMarks) {\n      const copyMarks: any = {};\n      const hasSelectTd = TableLogic.getSelectedTdsSize(editor);\n      for (const key of Object.values(Marks)) {\n        copyMarks[key] = savedMarks[key];\n      }\n      if (hasSelectTd > 0) {\n        const selectedTdsPath = TableLogic.getSelectedTdsPath(editor);\n        for (const path of selectedTdsPath) {\n          Transforms.setNodes(editor, copyMarks, {\n            at: path,\n          });\n        }\n        setSavedMarks(null);\n        return;\n      }\n    }\n  };\n\n  const ui = (\n    <div\n      {...attributes}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        width: \"100%\",\n        overflowX: \"auto\",\n        overflowY: \"hidden\",\n      }}\n    >\n      <table\n        border=\"1\"\n        {...attributes}\n        style={{\n          tableLayout: \"auto\",\n          wordBreak: \"break-all\",\n          overflowX: \"auto\",\n          overflowY: \"hidden\",\n          borderCollapse: \"collapse\",\n        }}\n        onMouseDown={handleTableMouseDown}\n        onMouseUp={handleTableMouseUp}\n      >\n        {children}\n      </table>\n    </div>\n  );\n  return ui;\n};\n\nconst getEditingOrSelectedTdBelongTable = (editor: Editor) => {\n  const td = TableLogic.getFirstSelectedTd(editor);\n  let table;\n  if (td) {\n    table = Editor.above(editor, {\n      mode: \"lowest\",\n      at: td[1],\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n  } else if (editor.selection) {\n    table = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n  }\n  return table;\n};\n\nexport const TableLogic = {\n  model: [\n    {\n      type: CET.TABLE,\n      children: [\n        {\n          type: CET.TBODY,\n          children: new Array(100).fill(0).map((item, fatherIndex) => {\n            return {\n              type: CET.TR,\n              children: new Array(10).fill(0).map((item, index) => {\n                return {\n                  type: CET.TD,\n                  width: 100,\n                  height: 50,\n                  children: [\n                    {\n                      type: CET.DIV,\n                      children: [{ text: `string${fatherIndex}-${index}` }],\n                    },\n                  ],\n                };\n              }),\n            };\n          }),\n        },\n      ],\n    },\n    {\n      type: CET.DIV,\n      children: [{ text: \"1\" }],\n    },\n  ],\n  isSelectedTd(n: Node) {\n    return TableLogic.isTd(n) && n.selected == true;\n  },\n  isTable(node: Node): node is Element {\n    return Element.isElement(node) && CET.TABLE == node.type;\n  },\n  isTd(node: Node): node is Element {\n    return Element.isElement(node) && [CET.TD].includes(node.type);\n  },\n  isInTd(editor: EditorType) {\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      return utils.getFirstAboveElementType(editor) == CET.TD;\n    }\n    return false;\n  },\n  normalizeTable(editor: EditorType, nodeEntry: NodeEntry) {\n    const [node, path] = nodeEntry;\n\n    if (Element.isElement(node) && [CET.TABLE].includes(node.type)) {\n      // 如果table的子元素里含有其他非tbody的标签，删除\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (child.type != CET.TBODY) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n    }\n\n    // tbody校验规则\n    if (Element.isElement(node) && [CET.TBODY].includes(node.type)) {\n      // 如果tbody的父元素不是table，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && parent.type == CET.TABLE)) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (child.type != CET.TR) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n    }\n\n    // tr校验规则\n    if (Element.isElement(node) && CET.TR == node.type) {\n      // 如果父元素不为tbody，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && [CET.TBODY].includes(parent.type))) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (node.shouldEmpty) continue;\n        if (child.type != CET.TD) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n      if (node.children.length === 0) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: [...path, 0] });\n        Transforms.setNodes(editor, { shouldEmpty: true }, { at: path });\n        return true;\n      }\n      if (node.children.length == 1 && Node.child(node, 0).type != CET.TD) {\n        Transforms.setNodes(editor, { shouldEmpty: true }, { at: path });\n        return true;\n      } else {\n        if (node.children.length > 1) {\n          for (const [child, childP] of Node.children(editor, path, {\n            reverse: true,\n          })) {\n            if (Text.isText(child)) {\n              Transforms.removeNodes(editor, { at: childP });\n              return true;\n            }\n          }\n        }\n\n        Transforms.setNodes(editor, { shouldEmpty: false }, { at: path });\n        return true;\n      }\n    }\n    // td校验\n    if (Element.isElement(node) && CET.TD == node.type) {\n      // 如果父元素不是tr，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && [CET.TR].includes(parent.type))) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      // 如果没有子元素，那么默认添加一个\n      if (\n        node.children.length == 1 &&\n        Text.isText(Node.child(node, 0)) &&\n        Editor.string(editor, path, { voids: true }) == \"\"\n      ) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"\" }],\n          },\n          {\n            at: [...path, 0],\n          }\n        );\n        return true;\n      }\n    }\n  },\n  tabEvent(editor: EditorType) {\n    const td = TdLogic.getEditingTd(editor);\n    if (!td) return;\n\n    Transforms.deselect(editor);\n    TdLogic.findTargetTd(editor, td, \"right\");\n  },\n  shiftTabEvent(editor: EditorType) {\n    const td = TdLogic.getEditingTd(editor);\n    if (!td) return;\n\n    Transforms.deselect(editor);\n    TdLogic.findTargetTd(editor, td, \"left\");\n  },\n  deleteRow(editor: EditorType) {\n    // 删除选区对应的列\n    let deleteVArea: number[] = [Infinity, -Infinity];\n    const selectedTd = TableLogic.getFirstSelectedTd(editor);\n    if (!selectedTd) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    if (!tdMap) return;\n    const selectedTds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || []\n    );\n    if (selectedTds.length == 0) return;\n\n    selectedTds.forEach((td) => {\n      deleteVArea[0] = Math.min(deleteVArea[0], td.row);\n      deleteVArea[1] = Math.max(deleteVArea[1], td.row + td.rowSpan);\n    });\n\n    // 说明是整个表格所有行被删除\n    if (deleteVArea[1] - deleteVArea[0] == tdMap.length) {\n      // 直接删除表格\n      Transforms.removeNodes(editor, {\n        at: Path.parent(tbody[1]),\n      });\n      return;\n    }\n\n    const removePath = [];\n    for (let row = deleteVArea[0]; row < deleteVArea[1]; row++) {\n      removePath.unshift([...tbody[1], row]);\n      for (let col = 0; col < tdMap[row].length; col++) {\n        const td = tdMap[row][col];\n        td.rowSpan--;\n        const tdPath = [...tbody[1], td.originRow, td.originCol];\n        // 如果rowSpan被减去到0，说明这个cell在要删除的行里\n        if (td.rowSpan != 0) {\n          Transforms.setNodes(\n            editor,\n            {\n              rowSpan: td.rowSpan,\n            },\n            {\n              at: tdPath,\n            }\n          );\n        }\n        col += td.colSpan - 1;\n      }\n    }\n\n    // 再次遍历，找到那些起始点身处删除范围内，且rowSpan>0的\n    for (let row = deleteVArea[0]; row < deleteVArea[1]; row++) {\n      for (let col = 0; col < tdMap[row].length; col++) {\n        const td = tdMap[row][col];\n        if (\n          td.rowSpan > 0 &&\n          td.row >= deleteVArea[0] &&\n          td.row == row &&\n          td.col == col\n        ) {\n          const targetRow = deleteVArea[1];\n          const leftCol = tdMap[targetRow][td.col - 1];\n          if (leftCol) {\n            Transforms.moveNodes(editor, {\n              at: [...tbody[1], td.originRow, td.originCol],\n              to: [...tbody[1], targetRow, leftCol.originCol + 1],\n            });\n          } else {\n            Transforms.moveNodes(editor, {\n              at: [...tbody[1], td.originRow, td.originCol],\n              to: [...tbody[1], targetRow, 0],\n            });\n          }\n        }\n        col += td.colSpan - 1;\n      }\n    }\n\n    // 从最低点开始删除\n    removePath.forEach((path) => {\n      Transforms.removeNodes(editor, { at: path });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  deleteColumn(editor: EditorType) {\n    // 删除选区对应的列\n    let deleteHArea: number[] = [Infinity, -Infinity];\n    const selectedTd = TableLogic.getFirstSelectedTd(editor);\n    if (!selectedTd) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    if (!tdMap) return;\n    const selectedTds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || []\n    );\n    if (selectedTds.length == 0) return;\n\n    selectedTds.forEach((td) => {\n      deleteHArea[0] = Math.min(deleteHArea[0], td.col);\n      deleteHArea[1] = Math.max(deleteHArea[1], td.col + td.colSpan);\n    });\n\n    // 说明是整个表格所有列被删除\n    if (deleteHArea[1] - deleteHArea[0] == tdMap[0].length) {\n      // 直接删除表格\n      Transforms.removeNodes(editor, {\n        at: Path.parent(tbody[1]),\n      });\n      return;\n    }\n\n    const removePath = [];\n    for (let col = deleteHArea[0]; col < deleteHArea[1]; col++) {\n      for (let row = 0; row < tdMap.length; row++) {\n        const td = tdMap[row][col];\n        td.colSpan--;\n        const tdPath = [...tbody[1], td.originRow, td.originCol];\n        if (td.colSpan == 0) {\n          removePath.push(tdPath);\n        } else {\n          Transforms.setNodes(\n            editor,\n            {\n              colSpan: td.colSpan,\n            },\n            {\n              at: tdPath,\n            }\n          );\n        }\n        row += td.rowSpan - 1;\n      }\n    }\n\n    // 从最低点开始删除\n    removePath.sort((a, b) => {\n      const arow = a[a.length - 2];\n      const brow = b[b.length - 2];\n      const acol = a[a.length - 1];\n      const bcol = b[b.length - 1];\n      return arow > brow ? -1 : arow == brow ? bcol - acol : 1;\n    });\n    removePath.forEach((path) => {\n      Transforms.removeNodes(editor, { at: path });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertColumn(\n    editor: EditorType,\n    type: \"before\" | \"after\",\n    count: number = 1\n  ) {\n    let nowTd = TableLogic.getFirstSelectedTd(editor);\n    // 如果没有选中的td，那么就从光标位置找\n    if (!nowTd && editor.selection) {\n      [nowTd] = Editor.nodes(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return TableLogic.isTd(n);\n        },\n      });\n    }\n    if (!nowTd) return;\n    const nowTr = Editor.parent(editor, nowTd[1]);\n    if (!nowTr) return;\n    const tbody = Editor.parent(editor, nowTr[1]);\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(tbody[0])\n    )\n      return;\n\n    const editorDom = ReactEditor.toDOMNode(editor, editor);\n\n    const getInsertCells = (): CustomElement[] => {\n      return _.cloneDeep(\n        new Array(count).fill(0).map(() => {\n          return _.cloneDeep({\n            type: CET.TD,\n            width: editorDom.offsetWidth / 10,\n            height: tdMinHeight,\n            children: [\n              {\n                type: CET.DIV,\n                children: [{ text: \"\" }],\n              },\n            ],\n          } as CustomElement);\n        })\n      );\n    };\n\n    // 首先找到第一插入点\n    const [nowTdRow, nowTdCol] = nowTd[1].slice(nowTd[1].length - 2);\n    let insertCol;\n    if (selectedTds && selectedTds.size > 0) {\n      insertCol = type == \"after\" ? -Infinity : Infinity;\n      for (const tdInTdMap of selectedTds.keys()) {\n        insertCol =\n          type == \"after\"\n            ? Math.max(insertCol, tdInTdMap.col + tdInTdMap.colSpan)\n            : Math.min(insertCol, tdInTdMap.col);\n      }\n    } else {\n      insertCol = -1;\n      for (let i = 0; i < tdMap[nowTdRow].length; i++) {\n        const td = tdMap[nowTdRow][i];\n        // 找到当前td在tdMap中的位置\n        if (td.originCol == nowTdCol && td.originRow == nowTdRow) {\n          insertCol = td.col + (type == \"after\" ? td.colSpan : 0);\n          break;\n        }\n      }\n    }\n    if (insertCol == null || !Number.isFinite(insertCol)) return;\n    // 从上到下遍历整个表格当前列\n    for (let row = 0; row < tdMap.length; row++) {\n      const downTd = tdMap[row][insertCol] as customTdShape;\n      // 如果不存在，那么说明是插在最后\n      if (!downTd) {\n        Transforms.insertNodes(editor, getInsertCells(), {\n          at: [\n            ...tbody[1],\n            row,\n            tbody[0]?.children?.[row]?.children?.length || 0,\n          ],\n        });\n        continue;\n      }\n      const downTdOriginPos = [...tbody[1], downTd.originRow, downTd.originCol];\n      if (downTd.col == insertCol) {\n        Transforms.insertNodes(editor, getInsertCells(), {\n          at: [...tbody[1], row, downTd.originCol],\n        });\n      } else {\n        Transforms.setNodes(\n          editor,\n          {\n            colSpan: downTd.colSpan + 1,\n          },\n          {\n            at: downTdOriginPos,\n          }\n        );\n        row += downTd.rowSpan - 1;\n      }\n    }\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertRow(editor: EditorType, type: \"after\" | \"before\", count: number = 1) {\n    let nowTd = TableLogic.getFirstSelectedTd(editor);\n    // 如果没有选中的td，那么就从光标位置找\n    if (!nowTd && editor.selection) {\n      [nowTd] = Editor.nodes(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return TableLogic.isTd(n);\n        },\n      });\n    }\n    if (!nowTd) return;\n    const nowTr = Editor.parent(editor, nowTd[1]);\n    if (!nowTr) return;\n    const tbody = Editor.parent(editor, nowTr[1]);\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(tbody[0])\n    )\n      return;\n\n    const editorDom = ReactEditor.toDOMNode(editor, editor);\n\n    const insertNode = {\n      type: CET.TD,\n      width: editorDom.offsetWidth / 10,\n      height: tdMinHeight,\n      children: [\n        {\n          type: CET.DIV,\n          children: [{ text: \"\" }],\n        },\n      ],\n    };\n\n    // 首先找到第一插入点\n    const [nowTdRow, nowTdCol] = nowTd[1].slice(nowTd[1].length - 2);\n    let insertRow;\n    if (selectedTds && selectedTds.size > 0) {\n      insertRow = type == \"after\" ? -Infinity : Infinity;\n      for (const tdInTdMap of selectedTds.keys()) {\n        insertRow =\n          type == \"after\"\n            ? Math.max(insertRow, tdInTdMap.row + tdInTdMap.rowSpan)\n            : Math.min(insertRow, tdInTdMap.row);\n      }\n    } else {\n      insertRow = -1;\n      for (let i = 0; i < tdMap[nowTdRow].length; i++) {\n        const td = tdMap[nowTdRow][i];\n        // 找到当前td在tdMap中的位置\n        if (td.originCol == nowTdCol && td.originRow == nowTdRow) {\n          insertRow = td.row + (type == \"after\" ? td.rowSpan : 0);\n          break;\n        }\n      }\n    }\n    if (insertRow == -1 || !Number.isFinite(insertRow)) return;\n\n    const getInsertRow = (tdCount: number) => {\n      return new Array(count).fill(0).map(() => {\n        return _.cloneDeep({\n          type: CET.TR,\n          children: new Array(tdCount).fill(0).map(() => {\n            return _.cloneDeep(insertNode);\n          }),\n        });\n      });\n    };\n\n    // 最后一行的插入\n    if (tdMap[insertRow] == null) {\n      Transforms.insertNodes(editor, getInsertRow(tdMap[0].length), {\n        at: [...tbody[1], insertRow],\n      });\n      return;\n    }\n\n    // 找到tdMap中的当前行\n    let tdCount = 0;\n    for (let i = 0; i < tdMap[insertRow].length; i++) {\n      const td = tdMap[insertRow][i] as customTdShape;\n      if (td.row == insertRow) {\n        tdCount++;\n      } else {\n        Transforms.setNodes(\n          editor,\n          {\n            rowSpan: td.rowSpan + 1,\n          },\n          {\n            at: [...tbody[1], td.originRow, td.originCol],\n          }\n        );\n        i += td.colSpan - 1;\n      }\n    }\n\n    Transforms.insertNodes(editor, getInsertRow(tdCount), {\n      at: [...tbody[1], insertRow],\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  splitTd(editor: EditorType) {\n    const selectedTds = Editor.nodes(editor, {\n      at: [],\n      match(n) {\n        return TableLogic.isSelectedTd(n);\n      },\n    });\n    if (!selectedTds) return;\n\n    let tbody = null;\n    for (const [td, tdPath] of selectedTds) {\n      if (!Element.isElement(td)) continue;\n      Transforms.setNodes(editor, { colSpan: 1, rowSpan: 1 }, { at: tdPath });\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: tdPath });\n      if ((!td.colSpan || td.colSpan < 2) && (!td.rowSpan || td.rowSpan < 2))\n        continue;\n\n      if (!tbody) {\n        tbody = Editor.above(editor, {\n          at: tdPath,\n          mode: \"lowest\",\n          match(n) {\n            return Element.isElement(n) && n.type == CET.TBODY;\n          },\n        });\n        if (!tbody) continue;\n      }\n\n      const belongTr = Editor.parent(editor, tdPath),\n        tdCol = tdPath[tdPath.length - 1],\n        tdRow = tdPath[tdPath.length - 2],\n        tdColSpan = td.colSpan || 1,\n        tdRowSpan = td.rowSpan || 1;\n      let leftSumColSpan = 0;\n      for (let i = 0; i < tdCol; i++) {\n        leftSumColSpan =\n          leftSumColSpan + (belongTr[0]?.children?.[i]?.colSpan || 1);\n      }\n\n      // 找到当前tr应该插入新td的位置\n      const findInsertCol = (tr: NodeEntry) => {\n        let sumColSpan = 0;\n        for (let i = 0; i < tr[0].children.length; i++) {\n          sumColSpan = sumColSpan + (tr[0].children[i].colSpan || 1);\n          if (sumColSpan == leftSumColSpan) return i + 1;\n        }\n        return 0;\n      };\n\n      for (let row = tdRow, count = 0; count < tdRowSpan; count++, row++) {\n        const isInNowTr = row == tdRow;\n        const insertCol = findInsertCol(\n          Editor.node(editor, [...tbody[1], row])\n        );\n\n        // 插入几个td\n        const insertTdCount = tdColSpan - (isInNowTr ? 1 : 0);\n        Transforms.insertNodes(\n          editor,\n          new Array(insertTdCount).fill(0).map(() => {\n            return _.cloneDeep({\n              type: CET.TD,\n              children: [\n                {\n                  type: CET.DIV,\n                  children: [{ text: \"\" }],\n                },\n              ],\n            });\n          }),\n          {\n            at: [...tbody[1], row, insertCol + (isInNowTr ? 1 : 0)],\n          }\n        );\n      }\n      TableLogic.splitTd(editor);\n      TableLogic.resetSelectedTds(editor);\n      return;\n    }\n  },\n  mergeTd(editor: EditorType) {\n    const isOnlyOne = TableLogic.getSelectedTdsSize(editor) == 1;\n\n    const selectedTd = TableLogic.getFirstSelectedTd(editor);\n    if (!selectedTd || isOnlyOne == null) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (!selectedTds) return;\n    const tbodyPath = tbody[1];\n    const tds = Array.from(selectedTds?.keys());\n\n    tds.sort((a, b) => {\n      if (a.row > b.row) {\n        return 1;\n      }\n      if (a.row == b.row) {\n        return a.col - b.col;\n      }\n      return -1;\n    });\n\n    let firstTd = tds[0];\n    let maxColSpan = 0,\n      maxRowSpan = 0;\n    tds.forEach((td) => {\n      maxColSpan = Math.max(maxColSpan, td.colSpan + td.col - firstTd.col);\n      maxRowSpan = Math.max(maxRowSpan, td.rowSpan + td.row - firstTd.row);\n    });\n\n    const newTdPath = [...tbodyPath, firstTd.originRow, firstTd.originCol];\n    Transforms.setNodes(\n      editor,\n      {\n        colSpan: maxColSpan,\n        rowSpan: maxRowSpan,\n      },\n      { at: newTdPath }\n    );\n\n    const firstTdEntry = Editor.node(editor, newTdPath);\n    tds.forEach((td) => {\n      if (td.col == firstTd.col && td.row == firstTd.row) return;\n      const tdPath = [...tbodyPath, td.originRow, td.originCol];\n      for (const [, childP] of Node.children(editor, tdPath, {\n        reverse: true,\n      })) {\n        if (Editor.string(editor, childP, { voids: true }) == \"\") continue;\n        Transforms.moveNodes(editor, {\n          at: childP,\n          to: [...firstTdEntry[1], firstTdEntry[0].children.length],\n        });\n      }\n      Transforms.setNodes(editor, { toBeDeleted: true }, { at: tdPath });\n    });\n\n    Transforms.removeNodes(editor, {\n      at: [],\n      match(n) {\n        return TableLogic.isTd(n) && n.toBeDeleted == true;\n      },\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  deleteTable(editor: EditorType) {\n    const table = getEditingOrSelectedTdBelongTable(editor);\n    if (!table) return;\n    Transforms.removeNodes(editor, { at: table[1] });\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertDivAfterTable(editor: EditorType) {\n    const table = getEditingOrSelectedTdBelongTable(editor);\n\n    if (!table) return;\n    const nextPath = utils.getPath(table[1], \"next\");\n    Transforms.insertNodes(\n      editor,\n      {\n        type: CET.DIV,\n        children: [{ text: \"write something...\" }],\n      },\n      { at: nextPath }\n    );\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertDivBeforeTable(editor: EditorType) {\n    const table = getEditingOrSelectedTdBelongTable(editor);\n\n    if (!table) return;\n    Transforms.insertNodes(\n      editor,\n      {\n        type: CET.DIV,\n        children: [{ text: \"write something...\" }],\n      },\n      { at: table[1] }\n    );\n    TableLogic.resetSelectedTds(editor);\n  },\n  getSelectedTdsPath(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const pathArr = [];\n    for (const tdStrPath of selectedTds) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      pathArr.push(path);\n    }\n    return pathArr;\n  },\n  getSelectedTds(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const tdArr = [];\n    for (const tdStrPath of selectedTds) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      const td = Editor.node(editor, path);\n      tdArr.push(td);\n    }\n    return tdArr;\n  },\n  getFirstSelectedTd(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const arr = Array.from(selectedTds).sort((a, b) =>\n      a > b ? 1 : a === b ? 0 : -1\n    );\n    if (arr.length == 0) return null;\n\n    const path: Path = arr[0].split(\",\").map((o) => +o);\n    const td = Editor.node(editor, path);\n    return td;\n  },\n  getEditingTds(editor: EditorType) {\n    const editingTdsPath = getEditingTdsPath(editor);\n    const arr = [];\n    for (const tdStrPath of editingTdsPath) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      arr.push(Editor.node(editor, path));\n    }\n    return arr;\n  },\n  getEditingTdsPath(editor: EditorType): Set<string> {\n    return getEditingTdsPath(editor);\n  },\n  getSelectedTdsSize(editor: EditorType) {\n    return getStrPathSetOfSelectedTds(editor).size;\n  },\n  resetSelectedTds(editor: EditorType) {\n    const tdsPath = Array.from(\n      Editor.nodes(editor, {\n        at: [],\n        match(n) {\n          return TableLogic.isSelectedTd(n);\n        },\n      })\n    ).map((o) => o[1].join(\",\"));\n\n    setStrPathSetOfSelectedTds(new Set(tdsPath));\n\n    const editingTdsPath = Array.from(\n      Editor.nodes(editor, {\n        at: [],\n        match(n) {\n          return TableLogic.isTd(n) && n.canTdEdit == true;\n        },\n      })\n    ).map((o) => o[1].join(\",\"));\n\n    setEditingTdsPath(new Set(editingTdsPath));\n  },\n  copyCells(editor: EditorType) {\n    const selectedTds = TableLogic.getSelectedTds(editor);\n    setCopyedCells(\n      selectedTds.sort((a, b) => {\n        const [arow, acol] = a[1].slice(a[1].length - 2);\n        const [brow, bcol] = b[1].slice(b[1].length - 2);\n        return arow > brow ? 1 : arow === brow ? acol - bcol : -1;\n      })\n    );\n    const tbody = Editor.above(editor, {\n      at: selectedTds[0][1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const tds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || ([] as customTdShape[])\n    );\n    const { startPoins } = TdLogic.getTdMap(tbody);\n    let areaWidth = 0,\n      areaHeight = 0;\n    tds.forEach((td) => {\n      const { row, col } = td;\n      areaWidth = Math.max(\n        col + (td.colSpan || 1) - startPoins[0].col,\n        areaWidth\n      );\n      areaHeight = Math.max(\n        row + (td.rowSpan || 1) - startPoins[0].row,\n        areaHeight\n      );\n    });\n    setCopyedMaxRowAndCol({\n      copyedAreaWidth: areaWidth,\n      copyedAreaHeight: areaHeight,\n    });\n  },\n  pasteCells(editor: EditorType) {\n    const copyedContent = getCopyedContent();\n    if (copyedContent) {\n      // 将复制的内容全部加入到选择的td中\n      const selectedTdsPath = Array.from(TableLogic.getSelectedTdsPath(editor));\n      TdLogic.clearTd(editor);\n      for (const path of selectedTdsPath) {\n        Transforms.insertNodes(editor, _.cloneDeep(copyedContent), {\n          at: [...path, 0],\n        });\n        Transforms.removeNodes(editor, {\n          at: [...path, Array.from(Node.children(editor, path)).length - 1],\n        });\n      }\n      return;\n    }\n    // 检查复制的单元格区域能否完全覆盖目标区域\n    const copyedCells = getCopyedCells();\n    if (!copyedCells) return;\n    const { copyedAreaWidth: areaWidth, copyedAreaHeight: areaHeight } =\n      getCopyedMaxRowAndCol();\n    const selectedTds = Array.from(TableLogic.getSelectedTds(editor));\n    const tbody = Editor.above(editor, {\n      at: selectedTds[0][1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    // 如果复制的单元格只有一个，那么将选中的单元格的内容全部替换成复制的单元格内容\n    if (copyedCells.length == 1) {\n      const copyedTd = copyedCells[copyedCells.length - 1];\n      if (!copyedTd) return;\n      selectedTds.forEach((td) => {\n        let childLength = td[0].children.length;\n        Transforms.insertNodes(editor, _.cloneDeep(copyedTd[0].children), {\n          at: [...td[1], 0],\n        });\n        for (const [, childP] of Node.children(editor, td[1], {\n          reverse: true,\n        })) {\n          if (childLength-- == 0) break;\n          Transforms.removeNodes(editor, {\n            at: childP,\n          });\n        }\n      });\n      return;\n    }\n    const { tdMap, startPoins } = TdLogic.getTdMap(tbody);\n    const startPoint = startPoins[0];\n    if (\n      startPoint.row + areaHeight > tdMap.length ||\n      startPoint.col + areaWidth > tdMap[0].length\n    ) {\n      message.error(\"无法完整覆盖目标区域\");\n      return false;\n    }\n    const waitToDeleteTdsPath = [];\n    // 验证覆盖区域是否合法\n    for (\n      let row = startPoint.row;\n      row < tdMap.length && row < startPoint.row + areaHeight;\n      row++\n    ) {\n      for (\n        let col = startPoint.col;\n        col < tdMap[0].length && col < startPoint.col + areaWidth;\n        col++\n      ) {\n        const td = tdMap[row][col];\n        waitToDeleteTdsPath.unshift([td.originRow, td.originCol]);\n        if (\n          td.col < startPoint.col ||\n          td.col + td.colSpan > startPoint.col + areaWidth ||\n          td.row < startPoint.row ||\n          td.row + td.rowSpan > startPoint.row + areaHeight\n        ) {\n          message.error(\"无法完整覆盖目标区域\");\n          return false;\n        }\n      }\n    }\n\n    // 缓存之前复制的td\n    _.uniqWith(waitToDeleteTdsPath, (a, b) => {\n      return a.join(\",\") === b.join(\",\");\n    }).forEach((path) => {\n      Transforms.removeNodes(editor, { at: [...tbody[1], ...path] });\n    });\n\n    let minRow = copyedCells.slice().reduce((p, c) => {\n      return Math.min(p, c[1][c[1].length - 2]);\n    }, Infinity);\n\n    for (\n      let row = startPoint.row, nowCopyedCellsRow = minRow;\n      row < startPoint.row + areaHeight;\n      row++, nowCopyedCellsRow++\n    ) {\n      const td = tdMap[row][startPoint.col];\n      const insertTds: any[] = [];\n      copyedCells.forEach((td) => {\n        const path = td[1];\n        if (path[path.length - 2] === nowCopyedCellsRow) {\n          insertTds.push({\n            ...td[0],\n            selected: false,\n            start: false,\n            canTdEdit: false,\n          });\n        }\n      });\n      insertTds.length > 0 &&\n        Transforms.insertNodes(editor, _.cloneDeep(insertTds), {\n          at: [...tbody[1], row, td.originCol],\n        });\n    }\n\n    TdLogic.deselectAllTd(editor);\n    TableLogic.resetSelectedTds(editor);\n  },\n};\n","import { Tooltip, Button } from \"antd\";\r\n\r\nexport const StaticButton: React.FC<{\r\n  title: string;\r\n  mousedownFunc: (e: any) => void;\r\n  disabled?: boolean;\r\n}> = (props) => {\r\n  return (\r\n    <Tooltip title={props.title} mouseEnterDelay={0} mouseLeaveDelay={0}>\r\n      <Button\r\n        className=\"cyEditor__toolbar__button\"\r\n        type={\"text\"}\r\n        disabled={props.disabled}\r\n        onMouseDown={(e) => {\r\n          e.preventDefault();\r\n          props.mousedownFunc(e);\r\n        }}\r\n      >\r\n        {props.children}\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import Icon from \"@ant-design/icons\";\r\nimport { Transforms, Editor } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { EditorType, Marks } from \"../../../common/Defines\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { StaticButton } from \"../common/StaticButton\";\r\n\r\nexport const cleanFormat = (editor: EditorType) => {\r\n  const tds = TableLogic.getSelectedTds(editor);\r\n  if (tds.length > 0) {\r\n    for (const td of tds) {\r\n      Transforms.unsetNodes(editor, Object.values(Marks), { at: td[1] });\r\n    }\r\n    return;\r\n  }\r\n\r\n  const all = Editor.nodes(editor, {\r\n    mode: \"lowest\",\r\n    match(n) {\r\n      return utils.isTextWrapper(n);\r\n    },\r\n  });\r\n  for (const el of all) {\r\n    Transforms.unsetNodes(editor, Object.values(Marks), { at: el[1] });\r\n  }\r\n\r\n  for (const mark of Object.values(Marks)) {\r\n    Editor.removeMark(editor, mark);\r\n  }\r\n};\r\n\r\nexport const CleanFormatButton: React.FC<{}> = () => {\r\n  const editor = useSlateStatic();\r\n  return (\r\n    <StaticButton\r\n      title=\"清除格式\"\r\n      mousedownFunc={() => {\r\n        cleanFormat(editor);\r\n      }}\r\n    >\r\n      <Icon\r\n        component={() => (\r\n          <svg\r\n            viewBox=\"0 0 1084 1024\"\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            p-id=\"853\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n          >\r\n            <defs>\r\n              <style type=\"text/css\"></style>\r\n            </defs>\r\n            <path\r\n              d=\"M719.329882 422.249412l-255.578353 255.578353 234.315295 234.315294 255.518117-255.638588-234.315294-234.255059zM59.151059 315.813647l298.164706-298.164706a60.235294 60.235294 0 0 1 85.172706 0l596.329411 596.329412a60.235294 60.235294 0 0 1 0 85.172706l-298.164706 298.164706a60.235294 60.235294 0 0 1-85.232941 0l-596.329411-596.329412a60.235294 60.235294 0 0 1 0-85.172706z\"\r\n              fill=\"#333333\"\r\n              p-id=\"854\"\r\n            ></path>\r\n          </svg>\r\n        )}\r\n      ></Icon>\r\n    </StaticButton>\r\n  );\r\n};\r\n","export const ToolBarConfig = {\r\n    calcStatusDelay:50\r\n}","import { FormatPainterOutlined } from \"@ant-design/icons\";\r\nimport _ from \"lodash\";\r\nimport { useContext, useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { Editor, Element } from \"slate\";\r\nimport { useSlate } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { EditorContext } from \"../../../RichEditor\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ToolBarConfig } from \"../common/config\";\r\nimport { StaticButton } from \"../common/StaticButton\";\r\n\r\nexport const CopyFormatButton: React.FC<{}> = (props) => {\r\n  const editor = useSlate();\r\n  const { setSavedMarks } = useContext(EditorContext);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const ref = useRef<any>({\r\n    isDisabled: _.debounce(() => {\r\n      const isNotOnlyOne = TableLogic.getSelectedTdsSize(editor) > 1;\r\n      const td = TableLogic.getFirstSelectedTd(editor);\r\n      setDisabled(!(editor.selection != null || (td && !isNotOnlyOne)));\r\n    }, ToolBarConfig.calcStatusDelay),\r\n  });\r\n\r\n  useEffect(() => {\r\n    ref.current.isDisabled();\r\n  });\r\n\r\n  const copyMark = () => {\r\n    try {\r\n      const isNotOnlyOne = TableLogic.getSelectedTdsSize(editor) > 1;\r\n      const td = TableLogic.getFirstSelectedTd(editor);\r\n      if (td && !isNotOnlyOne && Element.isElement(td[0])) {\r\n        setSavedMarks(td[0] || null);\r\n        return;\r\n      }\r\n      if (!editor.selection) return null;\r\n      const marks = Editor.marks(editor);\r\n      const textWrapper = Editor.above(editor, {\r\n        mode: \"lowest\",\r\n        match(n) {\r\n          return utils.isTextWrapper(n);\r\n        },\r\n      });\r\n      if (textWrapper) setSavedMarks({ ...marks, ...textWrapper[0] } || null);\r\n      else setSavedMarks(marks || null);\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  };\r\n  return useMemo(() => {\r\n    return (\r\n      <StaticButton\r\n        title=\"格式刷\"\r\n        disabled={disabled}\r\n        mousedownFunc={() => {\r\n          copyMark();\r\n        }}\r\n      >\r\n        <FormatPainterOutlined />\r\n      </StaticButton>\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [disabled]);\r\n};\r\n","import { Tooltip, Select } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { useSlate, ReactEditor } from \"slate-react\";\r\nimport { EditorType } from \"../../../common/Defines\";\r\nimport { ToolBarConfig } from \"./config\";\r\n\r\nexport const ValueSelector = (props: {\r\n  options: (string | number)[];\r\n  optionLabelRender?: (value: string | number) => any;\r\n  title: string;\r\n  getValue: (editor: EditorType) => any;\r\n  afterSelect?: (value: string | number) => void;\r\n}) => {\r\n  const editor = useSlate();\r\n  const [visible, setVisible] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const toolDom = useRef<any>();\r\n  const ref = useRef<any>({\r\n    getValue: _.debounce(() => {\r\n      setValue(props.getValue(editor));\r\n    }, ToolBarConfig.calcStatusDelay),\r\n  });\r\n\r\n  useEffect(() => {\r\n    ref.current.getValue();\r\n  });\r\n  return useMemo(() => {\r\n    return (\r\n      <Tooltip\r\n        title={props.title}\r\n        zIndex={99}\r\n        mouseEnterDelay={0}\r\n        mouseLeaveDelay={0}\r\n      >\r\n        <div\r\n          ref={toolDom}\r\n          style={{\r\n            width: 100,\r\n            position: \"relative\",\r\n          }}\r\n          className=\"cyEditor__toolbar__button\"\r\n          onMouseLeave={() => {\r\n            setVisible(false);\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              zIndex: 1,\r\n              cursor: \"pointer\",\r\n            }}\r\n            onMouseDown={(e) => {\r\n              e.preventDefault();\r\n              setVisible(!visible);\r\n            }}\r\n          ></div>\r\n          <Select\r\n            placeholder={props.title}\r\n            value={value}\r\n            bordered={false}\r\n            style={{ width: \"100%\" }}\r\n            open={visible}\r\n            dropdownClassName=\"cyEditor__toolbar__dropdown\"\r\n            getPopupContainer={(triggerNode) =>\r\n              triggerNode.parentElement || document.body\r\n            }\r\n            onSelect={(value) => {\r\n              ReactEditor.focus(editor);\r\n              props?.afterSelect?.(value);\r\n              setVisible(false);\r\n            }}\r\n          >\r\n            {props.options.map((value) => {\r\n              return (\r\n                <Select.Option value={String(value)} key={value}>\r\n                  {props?.optionLabelRender?.(value) || value}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [visible, value]);\r\n};\r\n","import { Editor, Element, Transforms } from \"slate\";\r\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ValueSelector } from \"../common/ValueSelector\";\r\n\r\nexport const TextAlignButton = () => {\r\n  const editor = useSlateStatic();\r\n  return (\r\n    <ValueSelector\r\n      getValue={(editor) => {\r\n        const td = TableLogic.getFirstSelectedTd(editor);\r\n        if (td && Element.isElement(td[0])) {\r\n          return td[0][Marks.TextAlign] || \"左对齐\";\r\n        }\r\n\r\n        const [node] = Editor.nodes(editor, {\r\n          match(n) {\r\n            return utils.isTextWrapper(n);\r\n          },\r\n        });\r\n        if (!node) return \"左对齐\";\r\n        const textAlign = Element.isElement(node[0]) && node[0].textAlign;\r\n        return textAlign === false || textAlign == null ? \"left\" : textAlign;\r\n      }}\r\n      options={[\"left\", \"right\", \"center\"]}\r\n      optionLabelRender={(value) => {\r\n        if (value === \"left\") return \"左对齐\";\r\n        if (value === \"right\") return \"右对齐\";\r\n        if (value === \"center\") return \"居中对齐\";\r\n        return `${value}`;\r\n      }}\r\n      title=\"对齐方式\"\r\n      afterSelect={(value) => {\r\n        ReactEditor.focus(editor);\r\n        const tds = TableLogic.getSelectedTds(editor);\r\n        if (tds.length > 0) {\r\n          for (const td of tds) {\r\n            Transforms.setNodes(\r\n              editor,\r\n              { textAlign: value },\r\n              {\r\n                at: td[1],\r\n              }\r\n            );\r\n          }\r\n          return;\r\n        }\r\n        if (!editor.selection) return;\r\n        Transforms.setNodes(\r\n          editor,\r\n          { textAlign: value },\r\n          {\r\n            mode: \"lowest\",\r\n            match(n) {\r\n              return utils.isTextWrapper(n);\r\n            },\r\n          }\r\n        );\r\n      }}\r\n    ></ValueSelector>\r\n  );\r\n};\r\n","import { Transforms, Editor, Element } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { EditorType, Marks } from \"../../../common/Defines\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ValueSelector } from \"../common/ValueSelector\";\r\n\r\nconst getMarkValue = (editor: EditorType, mark: Marks) => {\r\n  try {\r\n    const td = TableLogic.getFirstSelectedTd(editor);\r\n    if (td && Element.isElement(td[0])) {\r\n      return td[0][mark];\r\n    }\r\n    if (!editor.selection) return null;\r\n    const marks = Editor.marks(editor);\r\n    return marks?.[mark];\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const FontSizeButton = () => {\r\n  const editor = useSlateStatic();\r\n  return (\r\n    <ValueSelector\r\n      getValue={(editor) => {\r\n        return String(getMarkValue(editor, Marks.FontSize) || 14);\r\n      }}\r\n      options={[12, 13, 14, 15, 16, 19, 22, 24, 29, 32, 40, 48]}\r\n      optionLabelRender={(value) => {\r\n        return `${value}px`;\r\n      }}\r\n      title=\"字体大小\"\r\n      afterSelect={(value) => {\r\n        const tds = TableLogic.getSelectedTds(editor);\r\n        if (tds.length > 0) {\r\n          for (const td of tds) {\r\n            Transforms.setNodes(\r\n              editor,\r\n              {\r\n                [Marks.FontSize]: Number(value),\r\n              },\r\n              {\r\n                at: td[1],\r\n              }\r\n            );\r\n          }\r\n          return;\r\n        }\r\n        if (!editor.selection) return;\r\n        Editor.addMark(editor, Marks.FontSize, Number(value));\r\n      }}\r\n    ></ValueSelector>\r\n  );\r\n};\r\n","import { Editor, Element, Transforms } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { EditorType, CET } from \"../../../common/Defines\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ValueSelector } from \"../common/ValueSelector\";\r\n\r\nexport const FontTypeButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const setTextWrapper = (type: CET) => {\r\n    const tds = TableLogic.getSelectedTds(editor);\r\n    if (tds.length > 0) {\r\n      tds.forEach((td) => {\r\n        Transforms.setNodes(\r\n          editor,\r\n          {\r\n            type,\r\n          },\r\n          {\r\n            at: td[1],\r\n            match(n) {\r\n              return utils.isTextWrapper(n);\r\n            },\r\n          }\r\n        );\r\n      });\r\n    } else {\r\n      Transforms.setNodes(\r\n        editor,\r\n        { type: type },\r\n        {\r\n          hanging: true,\r\n          mode: \"lowest\",\r\n          match(n) {\r\n            return utils.isTextWrapper(n);\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ValueSelector\r\n      getValue={(editor: EditorType) => {\r\n        const [node] = Editor.nodes(editor, {\r\n          match(n) {\r\n            return utils.isTextWrapper(n);\r\n          },\r\n        });\r\n        if (!node) return \"正文\";\r\n        const type = Element.isElement(node[0]) && node[0].type;\r\n        return type === \"div\" || type === false ? \"正文\" : type.toUpperCase();\r\n      }}\r\n      options={[\"H1\", \"H2\", \"H3\", \"H4\", \"正文\"]}\r\n      optionLabelRender={(value) => {\r\n        return <span>{value}</span>;\r\n      }}\r\n      title=\"字体样式\"\r\n      afterSelect={(value) => {\r\n        if (value === \"H1\") setTextWrapper(CET.H1);\r\n        if (value === \"H2\") setTextWrapper(CET.H2);\r\n        if (value === \"H3\") setTextWrapper(CET.H3);\r\n        if (value === \"H4\") setTextWrapper(CET.H4);\r\n        if (value === \"正文\") setTextWrapper(CET.DIV);\r\n      }}\r\n    ></ValueSelector>\r\n  );\r\n};\r\n","import { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { CompactPicker } from \"react-color\";\r\n\r\nexport const ColorPickerCore: React.FC<{\r\n  value: string;\r\n  onChange?: (color?: string) => void;\r\n}> = (props) => {\r\n  const [color, setColor] = useState<{ hex: any }>({\r\n    hex: props.value,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: 8,\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        backgroundColor: \"white\",\r\n        flexDirection: \"column\",\r\n      }}\r\n      className=\"cyEditor__toolbar__colorPanelWrapper\"\r\n    >\r\n      <CompactPicker\r\n        color={color.hex}\r\n        onChange={(color) => {\r\n          setColor(color);\r\n          props?.onChange?.(color.hex);\r\n        }}\r\n      ></CompactPicker>\r\n      <Button\r\n        icon={<DeleteOutlined></DeleteOutlined>}\r\n        size=\"small\"\r\n        onClick={() => {\r\n          props?.onChange?.(\"unset\");\r\n          setColor({ hex: \"\" });\r\n        }}\r\n      >\r\n        重置\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { Tooltip, Dropdown, Button } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { Editor, Element } from \"slate\";\r\nimport { useSlate } from \"slate-react\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ColorPickerCore } from \"./ColorPickerCore\";\r\nimport { ToolBarConfig } from \"./config\";\r\n\r\nexport const ColorPicker: React.FC<{\r\n  title: string;\r\n  onChange?: (color?: string) => void;\r\n  icon?: any;\r\n  mark: Marks;\r\n}> = (props) => {\r\n  const editor = useSlate();\r\n  const [color, setColor] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const ref = useRef<any>({\r\n    _getColor: _.debounce(() => {\r\n      setColor(getColor());\r\n    }, ToolBarConfig.calcStatusDelay),\r\n  });\r\n\r\n  const getColor = () => {\r\n    const td = TableLogic.getFirstSelectedTd(editor);\r\n    if (td) {\r\n      return Element.isElement(td[0]) && (td[0][props.mark] || \"unset\");\r\n    }\r\n\r\n    if (!editor.selection) return \"unset\";\r\n    if (!props.mark) return \"unset\";\r\n    const marks = Editor.marks(editor);\r\n    return (\r\n      (marks && marks?.[props?.mark]) ||\r\n      window.getComputedStyle(document.body).color\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    ref.current._getColor();\r\n  });\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <Tooltip\r\n        title={props.title}\r\n        zIndex={99}\r\n        mouseLeaveDelay={0}\r\n        mouseEnterDelay={0}\r\n      >\r\n        <div\r\n          onMouseLeave={() => {\r\n            setVisible(false);\r\n          }}\r\n        >\r\n          <Dropdown\r\n            placement=\"bottomCenter\"\r\n            overlayStyle={{ zIndex: 999 }}\r\n            visible={visible}\r\n            overlay={() => {\r\n              return (\r\n                <ColorPickerCore\r\n                  value={color}\r\n                  onChange={(color) => {\r\n                    props?.onChange?.(color);\r\n                    setVisible(false);\r\n                  }}\r\n                ></ColorPickerCore>\r\n              );\r\n            }}\r\n            trigger={[\"click\"]}\r\n            getPopupContainer={(triggerNode) =>\r\n              triggerNode.parentElement || document.body\r\n            }\r\n          >\r\n            <Button\r\n              type=\"text\"\r\n              style={{ color }}\r\n              onMouseDown={(e) => {\r\n                e.preventDefault();\r\n                setVisible(true);\r\n              }}\r\n            >\r\n              {props.icon}\r\n            </Button>\r\n          </Dropdown>\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [color, visible]);\r\n};\r\n","import { FontColorsOutlined } from \"@ant-design/icons\";\r\nimport { Transforms, Editor } from \"slate\";\r\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ColorPicker } from \"../common/ColorPicker\";\r\n\r\nexport const FontColorButton = () => {\r\n  const editor = useSlateStatic();\r\n  return (\r\n    <ColorPicker\r\n      title=\"字体颜色\"\r\n      onChange={(color) => {\r\n        ReactEditor.focus(editor);\r\n        const tds = TableLogic.getSelectedTds(editor);\r\n        if (tds.length > 0) {\r\n          for (const td of tds) {\r\n            Transforms.setNodes(\r\n              editor,\r\n              {\r\n                [Marks.Color]: color,\r\n              },\r\n              {\r\n                at: td[1],\r\n              }\r\n            );\r\n          }\r\n          return;\r\n        }\r\n        if (!editor.selection) return;\r\n        Editor.addMark(editor, Marks.Color, color);\r\n      }}\r\n      mark={Marks.Color}\r\n      icon={<FontColorsOutlined />}\r\n    ></ColorPicker>\r\n  );\r\n};\r\n","import { BgColorsOutlined } from \"@ant-design/icons\";\r\nimport { Transforms, Editor } from \"slate\";\r\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ColorPicker } from \"../common/ColorPicker\";\r\n\r\nexport const FontBGColorButton = () => {\r\n  const editor = useSlateStatic();\r\n  return (\r\n    <ColorPicker\r\n      title=\"背景色\"\r\n      onChange={(color) => {\r\n        ReactEditor.focus(editor);\r\n        const tds = TableLogic.getSelectedTds(editor);\r\n        if (tds.length > 0) {\r\n          for (const td of tds) {\r\n            Transforms.setNodes(\r\n              editor,\r\n              {\r\n                [Marks.BGColor]: color,\r\n              },\r\n              {\r\n                at: td[1],\r\n              }\r\n            );\r\n          }\r\n          return;\r\n        }\r\n        if (!editor.selection) return;\r\n        Editor.addMark(editor, Marks.BGColor, color);\r\n      }}\r\n      mark={Marks.BGColor}\r\n      icon={<BgColorsOutlined />}\r\n    ></ColorPicker>\r\n  );\r\n};\r\n","import { Button, Tooltip } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { Transforms, Editor, Element } from \"slate\";\r\nimport { useSlate, ReactEditor } from \"slate-react\";\r\nimport { EditorType, Marks } from \"../../../common/Defines\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ToolBarConfig } from \"./config\";\r\n\r\nconst isMarkActive = (editor: EditorType, mark: Marks) => {\r\n  try {\r\n    const td = TableLogic.getFirstSelectedTd(editor);\r\n    if (td && Element.isElement(td[0])) {\r\n      return td[0][mark];\r\n    }\r\n\r\n    if (!editor.selection) return null;\r\n    const marks = Editor.marks(editor);\r\n    return marks?.[mark] === true ? true : false;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const MarkButton: React.FC<{\r\n  title: string;\r\n  mark?: Marks;\r\n}> = (props) => {\r\n  const editor = useSlate();\r\n  const [type, setType] = useState(\"text\");\r\n  const ref = useRef<any>({\r\n    getType: _.debounce(() => {\r\n      setType(props.mark && isMarkActive(editor, props.mark) ? \"link\" : \"text\");\r\n    }, ToolBarConfig.calcStatusDelay),\r\n  });\r\n\r\n  useEffect(() => {\r\n    ref.current.getType();\r\n  });\r\n\r\n  const toggleMark = (mark: Marks) => {\r\n    // 针对选中表格的情况\r\n    const tds = TableLogic.getSelectedTds(editor);\r\n\r\n    if (tds.length > 0) {\r\n      ReactEditor.focus(editor);\r\n      tds.forEach((td) => {\r\n        if (!Element.isElement(td[0])) return;\r\n        if (td[0][mark]) {\r\n          Transforms.unsetNodes(editor, [mark], { at: td[1] });\r\n        } else {\r\n          Transforms.setNodes(editor, { [mark]: true }, { at: td[1] });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!editor.selection) return;\r\n\r\n    const marks = Editor.marks(editor);\r\n\r\n    if (marks?.[mark]) {\r\n      Editor.removeMark(editor, mark);\r\n    } else {\r\n      Editor.addMark(editor, mark, true);\r\n    }\r\n  };\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <Tooltip title={props.title} mouseEnterDelay={0} mouseLeaveDelay={0}>\r\n        <Button\r\n          className=\"cyEditor__toolbar__button\"\r\n          type={type as any}\r\n          onMouseDown={(e) => {\r\n            e.preventDefault();\r\n            props.mark && toggleMark(props.mark);\r\n          }}\r\n        >\r\n          {props.children}\r\n        </Button>\r\n      </Tooltip>\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [type]);\r\n};\r\n","import { BoldOutlined } from \"@ant-design/icons\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { MarkButton } from \"../common/MarkButton\";\r\n\r\nexport const FontWeightButton = () => {\r\n  return (\r\n    <MarkButton title=\"加粗\" mark={Marks.BOLD}>\r\n      <BoldOutlined />\r\n    </MarkButton>\r\n  );\r\n};\r\n","import { ItalicOutlined } from \"@ant-design/icons\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { MarkButton } from \"../common/MarkButton\";\r\n\r\nexport const FontStyleButton = () => {\r\n  return (\r\n    <MarkButton title=\"斜体\" mark={Marks.ITALIC}>\r\n      <ItalicOutlined />\r\n    </MarkButton>\r\n  );\r\n};\r\n","import { UnderlineOutlined } from \"@ant-design/icons\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { MarkButton } from \"../common/MarkButton\";\r\n\r\nexport const UnderLineButton = () => {\r\n  return (\r\n    <MarkButton title=\"下划线\" mark={Marks.Underline}>\r\n      <UnderlineOutlined />\r\n    </MarkButton>\r\n  );\r\n};\r\n","import { StrikethroughOutlined } from \"@ant-design/icons\";\r\nimport { Marks } from \"../../../common/Defines\";\r\nimport { MarkButton } from \"../common/MarkButton\";\r\n\r\nexport const LineThroughButton = () => {\r\n  return (\r\n    <MarkButton title=\"删除线\" mark={Marks.LineThrough}>\r\n      <StrikethroughOutlined />\r\n    </MarkButton>\r\n  );\r\n};\r\n","import { Button, Tooltip } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useSlate } from \"slate-react\";\r\nimport { EditorType } from \"../../../common/Defines\";\r\nimport { ToolBarConfig } from \"./config\";\r\n\r\nexport const ReactButton: React.FC<{\r\n  title: string;\r\n  mousedownFunc: (e: any) => void;\r\n  disabledCondition?: (editor: EditorType) => boolean;\r\n}> = (props) => {\r\n  const editor = useSlate();\r\n  const { mousedownFunc, title, disabledCondition = () => false } = props;\r\n  const [disabled, setDisabled] = useState(false);\r\n  const ref = useRef({\r\n    _isDisabled: _.debounce(() => {\r\n      setDisabled(disabledCondition(editor));\r\n    }, ToolBarConfig.calcStatusDelay),\r\n  });\r\n  useEffect(() => {\r\n    ref.current._isDisabled();\r\n  });\r\n  return (\r\n    <Tooltip title={title} mouseEnterDelay={0} mouseLeaveDelay={0}>\r\n      <Button\r\n        className=\"cyEditor__toolbar__button\"\r\n        type={\"text\"}\r\n        disabled={disabled}\r\n        onMouseDown={(e) => {\r\n          e.preventDefault();\r\n          mousedownFunc(e);\r\n        }}\r\n      >\r\n        {props.children}\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import { CheckSquareOutlined } from \"@ant-design/icons\";\r\nimport { Transforms } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET } from \"../../../common/Defines\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const ToDoListButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertToDoList = () => {\r\n    Transforms.insertNodes(editor, {\r\n      type: CET.TODOLIST,\r\n      children: [{ text: \"\" }],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"待办列表\"\r\n      mousedownFunc={() => {\r\n        insertToDoList();\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <CheckSquareOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { OrderedListOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET } from \"../../../common/Defines\";\r\nimport { ListLogic } from \"../../ListComp\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const OrderListButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const setNumberList = () => {\r\n    ListLogic.toggleList(editor, CET.NUMBER_LIST);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"有序列表\"\r\n      mousedownFunc={() => {\r\n        setNumberList();\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <OrderedListOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET } from \"../../../common/Defines\";\r\nimport { ListLogic } from \"../../ListComp\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const NormalListButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const setNormalList = () => {\r\n    ListLogic.toggleList(editor, CET.NORMAL_LIST);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"无序列表\"\r\n      mousedownFunc={() => {\r\n        setNormalList();\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <UnorderedListOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { LinkOutlined } from \"@ant-design/icons\";\r\nimport { Editor, Element, Transforms } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET } from \"../../../common/Defines\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const SetLinkButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const setLink = () => {\r\n    const [isLinkActive] = Editor.nodes(editor, {\r\n      match(n) {\r\n        return Element.isElement(n) && n.type === CET.LINK;\r\n      },\r\n    });\r\n    if (!isLinkActive) {\r\n      Transforms.wrapNodes(\r\n        editor,\r\n        {\r\n          type: CET.LINK,\r\n          url: \"http://www.baidu.com\",\r\n          children: [],\r\n        },\r\n        {\r\n          split: true,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"设置链接\"\r\n      mousedownFunc={() => {\r\n        setLink();\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <LinkOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { PictureOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\nimport { InputHTMLAttributes } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Element, Range, Transforms } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET, EditorType } from \"../../../common/Defines\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\nimport axios from \"axios\";\r\n\r\nconst acceptImgTypes = [\r\n  \"image/apng\",\r\n  \"image/avif\",\r\n  \"image/gif\",\r\n  \"image/jpeg\",\r\n  \"image/png\",\r\n  \"image/svg+xml\",\r\n  \"image/webp\",\r\n];\r\n\r\nconst maxSize = 1024 * 1024 * 5; // 5M\r\n\r\nconst valideImg: (param: FileList | File[] | null) => {\r\n  legalFiles: File[];\r\n  illegalFiles: File[];\r\n} = (files) => {\r\n  const legalFiles: File[] = [];\r\n  const illegalFiles: File[] = [];\r\n  // all img types https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\r\n  Array.isArray(files) &&\r\n    Array.from(files).forEach((file) => {\r\n      if (!acceptImgTypes.includes(file.type) || file.size > maxSize) {\r\n        illegalFiles.push(file);\r\n      } else {\r\n        legalFiles.push(file);\r\n      }\r\n    });\r\n  return {\r\n    legalFiles,\r\n    illegalFiles,\r\n  };\r\n};\r\n\r\nfunction sleep() {\r\n  return new Promise<void>((rel) => {\r\n    setTimeout(() => {\r\n      rel();\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nconst uploadImg = async (file: File): Promise<string> => {\r\n  try {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:3001/uploadFile\",\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n      },\r\n    });\r\n    return `http://localhost:3001/${res?.data?.[0]?.filename}`;\r\n  } catch (error) {\r\n    await sleep();\r\n    return URL.createObjectURL(file);\r\n  }\r\n};\r\n\r\nconst insertImgToEditor = (\r\n  editor: EditorType,\r\n  url: string,\r\n  id: number,\r\n  callback: Function\r\n) => {\r\n  if (editor.selection && Range.isExpanded(editor.selection)) {\r\n    Transforms.collapse(editor, { edge: \"end\" });\r\n  }\r\n  Transforms.insertNodes(editor, {\r\n    type: CET.IMG,\r\n    url,\r\n    id,\r\n    children: [\r\n      {\r\n        text: \"\",\r\n      },\r\n    ],\r\n  });\r\n  Transforms.move(editor);\r\n  callback(id);\r\n};\r\n\r\nexport const insertImg = (editor: EditorType, files: FileList | File[]) => {\r\n  files = Array.from(files);\r\n  const { illegalFiles, legalFiles } = valideImg(files);\r\n  if (illegalFiles.length > 0) {\r\n    message.error(\r\n      illegalFiles.map((file) => file.name).join(\"，\") +\r\n        `，文件格式非法（或超过最大限制${maxSize / 1024 / 1024}M）`\r\n    );\r\n  }\r\n\r\n  for (const file of legalFiles) {\r\n    insertImgToEditor(\r\n      editor,\r\n      URL.createObjectURL(file),\r\n      new Date().getTime(),\r\n      async (id: number) => {\r\n        const url = await uploadImg(file);\r\n        Transforms.setNodes(\r\n          editor,\r\n          {\r\n            id: null,\r\n            url,\r\n          },\r\n          {\r\n            at: [],\r\n            match(n) {\r\n              return Element.isElement(n) && n.id === id;\r\n            },\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nexport const InsertImgButton = () => {\r\n  const editor = useSlateStatic();\r\n  const fileRef = useRef<any>();\r\n\r\n  const chooseImg = () => {\r\n    if (fileRef.current) {\r\n      fileRef.current.click();\r\n      return;\r\n    }\r\n  };\r\n\r\n  const afterChooseImg: InputHTMLAttributes<HTMLInputElement>[\"onChange\"] = (\r\n    e\r\n  ) => {\r\n    const files = e.target.files;\r\n    if (!files) return;\r\n\r\n    insertImg(editor, files);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title={`插入图片（支持格式：${acceptImgTypes\r\n        .join(\"，\")\r\n        .replace(/image\\//gi, \".\")}）`}\r\n      mousedownFunc={() => {\r\n        chooseImg();\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <input\r\n        ref={fileRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        hidden\r\n        onChange={afterChooseImg}\r\n      ></input>\r\n      <PictureOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\nimport { InputHTMLAttributes } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Element, Range, Transforms } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET, EditorType } from \"../../../common/Defines\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\nimport axios from \"axios\";\r\n\r\nconst acceptFileTypes = [\r\n  \".doc\",\r\n  \".docx\",\r\n  \".xlsx\",\r\n  \".xls\",\r\n  \".csv\",\r\n  \".pdf\",\r\n  \".txt\",\r\n  \".zip\",\r\n  \".7z\",\r\n  \".ppt\",\r\n  \".pptx\",\r\n];\r\n\r\nconst maxSize = 1024 * 1024 * 10; // 10M\r\n\r\nconst valideFile: (param: FileList | File[] | null) => {\r\n  legalFiles: File[];\r\n  illegalFiles: File[];\r\n} = (files) => {\r\n  const legalFiles: File[] = [];\r\n  const illegalFiles: File[] = [];\r\n\r\n  Array.isArray(files) &&\r\n    Array.from(files).forEach((file) => {\r\n      const type = file.name.match(/\\.\\w+$/g)?.[0];\r\n      if (!type || !acceptFileTypes.includes(type) || file.size > maxSize) {\r\n        illegalFiles.push(file);\r\n      } else {\r\n        legalFiles.push(file);\r\n      }\r\n    });\r\n\r\n  return {\r\n    legalFiles,\r\n    illegalFiles,\r\n  };\r\n};\r\n\r\nfunction sleep() {\r\n  return new Promise<void>((rel) => {\r\n    setTimeout(() => {\r\n      rel();\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nconst uploadFile = async (file: File): Promise<string> => {\r\n  try {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:3001/uploadFile\",\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n      },\r\n    });\r\n    return `http://localhost:3001/${res?.data?.[0]?.filename}`;\r\n  } catch (error) {\r\n    await sleep();\r\n    return URL.createObjectURL(file);\r\n  }\r\n};\r\n\r\nconst insertFileToEditor = (\r\n  editor: EditorType,\r\n  url: string,\r\n  fileName: string,\r\n  id: number,\r\n  callback: Function\r\n) => {\r\n  if (editor.selection && Range.isExpanded(editor.selection)) {\r\n    Transforms.collapse(editor, { edge: \"end\" });\r\n  }\r\n  Transforms.insertNodes(editor, {\r\n    type: CET.FILE,\r\n    url,\r\n    fileName,\r\n    id,\r\n    children: [\r\n      {\r\n        text: \"\",\r\n      },\r\n    ],\r\n  });\r\n  Transforms.move(editor);\r\n  callback(id);\r\n};\r\n\r\nexport const insertFile = (editor: EditorType, files: FileList | File[]) => {\r\n  files = Array.from(files);\r\n  const { illegalFiles, legalFiles } = valideFile(files);\r\n  if (illegalFiles.length > 0) {\r\n    message.error(\r\n      illegalFiles.map((file) => file.name).join(\"，\") +\r\n        `，文件格式非法（或超过最大限制${maxSize / 1024 / 1024}M）`\r\n    );\r\n  }\r\n\r\n  for (const file of legalFiles) {\r\n    insertFileToEditor(\r\n      editor,\r\n      URL.createObjectURL(file),\r\n      file.name,\r\n      new Date().getTime(),\r\n      async (id: number) => {\r\n        const url = await uploadFile(file);\r\n        Transforms.setNodes(\r\n          editor,\r\n          {\r\n            id: null,\r\n            url,\r\n          },\r\n          {\r\n            at: [],\r\n            match(n) {\r\n              return Element.isElement(n) && n.id === id;\r\n            },\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nexport const InsertFileButton = () => {\r\n  const editor = useSlateStatic();\r\n  const fileRef = useRef<any>();\r\n\r\n  const chooseFile = () => {\r\n    if (fileRef.current) {\r\n      fileRef.current.click();\r\n      return;\r\n    }\r\n  };\r\n\r\n  const afterChooseFile: InputHTMLAttributes<HTMLInputElement>[\"onChange\"] = (\r\n    e\r\n  ) => {\r\n    const files = e.target.files;\r\n    if (!files) return;\r\n\r\n    insertFile(editor, files);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title={`插入附件（支持格式：${acceptFileTypes.join(\"，\")}）`}\r\n      mousedownFunc={() => {\r\n        chooseFile();\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <input\r\n        ref={fileRef}\r\n        type=\"file\"\r\n        multiple\r\n        hidden\r\n        onChange={afterChooseFile}\r\n      ></input>\r\n      <PaperClipOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { TableOutlined } from \"@ant-design/icons\";\r\nimport { Button, Dropdown, Tooltip } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { Editor, Transforms } from \"slate\";\r\nimport { useSlate, ReactEditor } from \"slate-react\";\r\nimport { CET } from \"../../../common/Defines\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { tdMinHeight } from \"../../Td\";\r\nimport { ToolBarConfig } from \"../common/config\";\r\n\r\nexport const InsertTableButton: React.FC<{\r\n  onChange?: (color?: string) => void;\r\n}> = (props) => {\r\n  const editor = useSlate();\r\n  const [visible, setVisible] = useState(false);\r\n  const [counts, setCounts] = useState<string>(\"\");\r\n  const tableDom = useRef<any>();\r\n  const [disabled, setDisabled] = useState(false);\r\n  const ref = useRef({\r\n    _isDisabled: _.debounce(() => {\r\n      setDisabled(editor.selection == null);\r\n    }, ToolBarConfig.calcStatusDelay),\r\n  });\r\n  useEffect(() => {\r\n    ref.current._isDisabled();\r\n  });\r\n\r\n  const rowCount = 10,\r\n    cellCount = 10;\r\n\r\n  const tdMouseEnter = (e: any) => {\r\n    const table: any = tableDom.current;\r\n    const td = e.target;\r\n    const tr = e.target.parentNode;\r\n    if (!table || !td || !tr) return;\r\n\r\n    Array.from(table.querySelectorAll(\"td\")).forEach((td: any) => {\r\n      td.style.backgroundColor = \"unset\";\r\n    });\r\n    const trs = Array.from(table.querySelectorAll(\"tr\"));\r\n\r\n    for (let i = 0; i <= tr.rowIndex; i++) {\r\n      const nowTr: any = trs[i];\r\n      const tds: any = Array.from(nowTr.querySelectorAll(\"td\"));\r\n      for (let j = 0; j <= td.cellIndex; j++) {\r\n        const nowTd = tds[j];\r\n        nowTd.style.backgroundColor = \"rgba(180,215,255,.7)\";\r\n      }\r\n    }\r\n\r\n    setCounts(`${td.cellIndex + 1}x${tr.rowIndex + 1}`);\r\n  };\r\n\r\n  const addTable = () => {\r\n    const cellCount = Number(counts.split(\"x\")[0]);\r\n    const rowCount = Number(counts.split(\"x\")[1]);\r\n    if (!Number.isInteger(cellCount) || !Number.isInteger(rowCount)) return;\r\n\r\n    ReactEditor.focus(editor);\r\n\r\n    if (!editor.selection) return;\r\n\r\n    const [tw] = Editor.nodes(editor, {\r\n      mode: \"lowest\",\r\n      match(n) {\r\n        return utils.isTextWrapper(n);\r\n      },\r\n    });\r\n    if (!tw) return;\r\n    const twDom = ReactEditor.toDOMNode(editor, tw[0]);\r\n    const parent: any = twDom.offsetParent;\r\n    if (!parent) return;\r\n    const tableWrapperWidth = twDom.offsetWidth - 2;\r\n\r\n    Transforms.insertNodes(editor, {\r\n      type: CET.TABLE,\r\n      wrapperWidthWhenCreated: tableWrapperWidth,\r\n      children: [\r\n        {\r\n          type: CET.TBODY,\r\n          children: new Array(rowCount).fill(\"0\").map(() => {\r\n            return {\r\n              type: CET.TR,\r\n              children: new Array(cellCount).fill(\"0\").map(() => {\r\n                return {\r\n                  type: CET.TD,\r\n                  width: tableWrapperWidth / cellCount,\r\n                  height: tdMinHeight,\r\n                  children: [\r\n                    {\r\n                      type: CET.DIV,\r\n                      children: [{ text: \"\" }],\r\n                    },\r\n                  ],\r\n                };\r\n              }),\r\n            };\r\n          }),\r\n        },\r\n      ],\r\n    });\r\n\r\n    Transforms.deselect(editor);\r\n    setVisible(false);\r\n  };\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <div\r\n        onMouseLeave={() => {\r\n          setVisible(false);\r\n        }}\r\n      >\r\n        <Dropdown\r\n          placement=\"bottomCenter\"\r\n          overlayStyle={{ zIndex: 999 }}\r\n          visible={visible}\r\n          overlay={() => {\r\n            return (\r\n              <div\r\n                className=\"cyEditor__toolbar__tablePanelWrapper\"\r\n                style={{\r\n                  width: 200,\r\n                  padding: 8,\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  backgroundColor: \"white\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                {visible ? (\r\n                  <table border=\"1\" ref={tableDom}>\r\n                    <tbody>\r\n                      {new Array(rowCount).fill(0).map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            {new Array(cellCount).fill(0).map((item, index) => {\r\n                              return (\r\n                                <td\r\n                                  key={index}\r\n                                  onMouseEnter={tdMouseEnter}\r\n                                  onClick={addTable}\r\n                                ></td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                ) : null}\r\n                <div style={{ textAlign: \"right\" }}>{counts}</div>\r\n              </div>\r\n            );\r\n          }}\r\n          trigger={[\"click\"]}\r\n          getPopupContainer={(triggerNode) =>\r\n            triggerNode.parentElement || document.body\r\n          }\r\n        >\r\n          <Tooltip\r\n            title=\"表格\"\r\n            zIndex={99}\r\n            mouseLeaveDelay={0}\r\n            mouseEnterDelay={0}\r\n          >\r\n            <Button\r\n              type=\"text\"\r\n              onMouseDown={(e) => {\r\n                e.preventDefault();\r\n                setVisible(true);\r\n              }}\r\n              disabled={disabled}\r\n            >\r\n              <TableOutlined />\r\n            </Button>\r\n          </Tooltip>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [visible, disabled, counts]);\r\n};\r\n","import { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const DeleteTableButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const deleteTable = () => {\r\n    TableLogic.deleteTable(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"删除表格\"\r\n      mousedownFunc={() => {\r\n        deleteTable();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <DeleteOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { DeleteColumnOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const DeleteColumnButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const deleteColumn = () => {\r\n    TableLogic.deleteColumn(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"删除列\"\r\n      mousedownFunc={() => {\r\n        deleteColumn();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <DeleteColumnOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { DeleteRowOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const DeleteRowButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const deleteRow = () => {\r\n    TableLogic.deleteRow(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"删除行\"\r\n      mousedownFunc={() => {\r\n        deleteRow();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <DeleteRowOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { VerticalAlignBottomOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const InsertTextAfterTable = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertDivAfterTable = () => {\r\n    TableLogic.insertDivAfterTable(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"表格后插入文本\"\r\n      mousedownFunc={() => {\r\n        insertDivAfterTable();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <VerticalAlignBottomOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { VerticalAlignTopOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const InsertTextBeforeTable = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertDivBeforeTable = () => {\r\n    TableLogic.insertDivBeforeTable(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"表格前插入文本\"\r\n      mousedownFunc={() => {\r\n        insertDivBeforeTable();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <VerticalAlignTopOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { InsertRowLeftOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const InsertColumnBeforeCell = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertColumnBefore = () => {\r\n    TableLogic.insertColumn(editor, \"before\");\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"左插入列\"\r\n      mousedownFunc={() => {\r\n        insertColumnBefore();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <InsertRowLeftOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { InsertRowRightOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const InsertColumnAfterCell = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertColumnAfter = () => {\r\n    TableLogic.insertColumn(editor, \"after\");\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"右插入列\"\r\n      mousedownFunc={() => {\r\n        insertColumnAfter();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <InsertRowRightOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { InsertRowAboveOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const InsertRowBeforeButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertRowBefore = () => {\r\n    TableLogic.insertRow(editor, \"before\");\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"上插入行\"\r\n      mousedownFunc={() => {\r\n        insertRowBefore();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <InsertRowAboveOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { InsertRowBelowOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const InsertRowAfterButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const insertRowAfter = () => {\r\n    TableLogic.insertRow(editor, \"after\");\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"下插入行\"\r\n      mousedownFunc={() => {\r\n        insertRowAfter();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <InsertRowBelowOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { MergeCellsOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const MergeCellButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const mergeTd = () => {\r\n    TableLogic.mergeTd(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"合并单元格\"\r\n      mousedownFunc={() => {\r\n        mergeTd();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <MergeCellsOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { SplitCellsOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TableLogic } from \"../../Table\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const SplitCellButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const splitTd = () => {\r\n    TableLogic.splitTd(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"拆分单元格\"\r\n      mousedownFunc={() => {\r\n        splitTd();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <SplitCellsOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { ClearOutlined } from \"@ant-design/icons\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { utils } from \"../../../common/utils\";\r\nimport { TdLogic } from \"../../Td\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const ClearCellButton = () => {\r\n  const editor = useSlateStatic();\r\n\r\n  const clearTd = () => {\r\n    TdLogic.clearTd(editor);\r\n  };\r\n\r\n  return (\r\n    <ReactButton\r\n      title=\"清空单元格\"\r\n      mousedownFunc={() => {\r\n        clearTd();\r\n      }}\r\n      disabledCondition={utils.isSelectTd}\r\n    >\r\n      <ClearOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","import { CodeOutlined } from \"@ant-design/icons\";\r\nimport { Transforms } from \"slate\";\r\nimport { useSlateStatic } from \"slate-react\";\r\nimport { CET } from \"../../../common/Defines\";\r\nimport { ReactButton } from \"../common/ReactButton\";\r\n\r\nexport const AddCodeBoxButton = () => {\r\n  const editor = useSlateStatic();\r\n  return (\r\n    <ReactButton\r\n      title=\"插入代码块\"\r\n      mousedownFunc={() => {\r\n        Transforms.insertNodes(editor, {\r\n          type: CET.CODE,\r\n          defaultMode: \"javascript\",\r\n          children: [{ text: \"\" }],\r\n        });\r\n      }}\r\n      disabledCondition={(editor) => {\r\n        return editor.selection == null;\r\n      }}\r\n    >\r\n      <CodeOutlined />\r\n    </ReactButton>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable eqeqeq */\nimport { Col, Row, Divider } from \"antd\";\nimport { Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport _ from \"lodash\";\nimport { SaveOutlined } from \"@ant-design/icons\";\nimport \"./ToolBar.css\";\nimport React, { useContext } from \"react\";\nimport { EditorContext } from \"../../RichEditor\";\nimport { slateToHtml } from \"../../common/slateToHtml\";\nimport { htmlToSlate } from \"../../common/htmlToSlate\";\nimport { CleanFormatButton } from \"./funcButtons/CleanFormatButton\";\nimport { StaticButton } from \"./common/StaticButton\";\nimport { CopyFormatButton } from \"./funcButtons/CopyFormatButton\";\nimport { TextAlignButton } from \"./funcButtons/TextAlignButton\";\nimport { FontSizeButton } from \"./funcButtons/FontSizeButton\";\nimport { FontTypeButton } from \"./funcButtons/FontTypeButton\";\nimport { FontColorButton } from \"./funcButtons/FontColorButton\";\nimport { FontBGColorButton } from \"./funcButtons/FontBGColorButton\";\nimport { FontWeightButton } from \"./funcButtons/FontWeightButton\";\nimport { FontStyleButton } from \"./funcButtons/FontStyleButton\";\nimport { UnderLineButton } from \"./funcButtons/UnderLineButton\";\nimport { LineThroughButton } from \"./funcButtons/LineThroughButton\";\nimport { ToDoListButton } from \"./funcButtons/ToDoListButton\";\nimport { OrderListButton } from \"./funcButtons/OrderListButton\";\nimport { NormalListButton } from \"./funcButtons/NormalListButton\";\nimport { SetLinkButton } from \"./funcButtons/SetLinkButton\";\nimport { InsertImgButton } from \"./funcButtons/InsertImgButton\";\nimport { InsertFileButton } from \"./funcButtons/InsertFileButton\";\nimport { InsertTableButton } from \"./funcButtons/InsertTableButton\";\nimport { DeleteTableButton } from \"./funcButtons/DeleteTableButton\";\nimport { DeleteColumnButton } from \"./funcButtons/DeleteColumnButton\";\nimport { DeleteRowButton } from \"./funcButtons/DeleteRowButton\";\nimport { InsertTextAfterTable } from \"./funcButtons/InsertTextAfterTable\";\nimport { InsertTextBeforeTable } from \"./funcButtons/InsertTextBeforeTable\";\nimport { InsertColumnBeforeCell } from \"./funcButtons/InsertColumnBeforeCell\";\nimport { InsertColumnAfterCell } from \"./funcButtons/InsertColumnAfterCell\";\nimport { InsertRowBeforeButton } from \"./funcButtons/InsertRowBeforeButton\";\nimport { InsertRowAfterButton } from \"./funcButtons/InsertRowAfterButton\";\nimport { MergeCellButton } from \"./funcButtons/MergeCellButton\";\nimport { SplitCellButton } from \"./funcButtons/SplitCellButton\";\nimport { ClearCellButton } from \"./funcButtons/ClearCellButton\";\nimport { CET } from \"../../common/Defines\";\nimport { AddCodeBoxButton } from \"./funcButtons/AddCodeBoxButton\";\n\nconst ReadOnlyButton: React.FC<{}> = (props) => {\n  const { readOnly, setReadOnly } = useContext(EditorContext);\n  const title = readOnly ? \"编辑模式\" : \"只读模式\";\n  return (\n    <StaticButton\n      title={title}\n      mousedownFunc={() => {\n        setReadOnly(!readOnly);\n      }}\n    >\n      {title}\n    </StaticButton>\n  );\n};\n\nexport const ToolBar: React.FC<{}> = (props) => {\n  const editor = useSlateStatic();\n\n  const diverComp = (\n    <Divider\n      style={{ height: 20, backgroundColor: \"rgb(0 0 0 / 10%)\" }}\n      type=\"vertical\"\n    />\n  );\n\n  return (\n    <div\n      className=\"cyEditor__toolBar\"\n      style={{ position: \"relative\", marginBottom: 4 }}\n    >\n      <Row align=\"middle\">\n        {/* 设置字体规格 */}\n        <Col>\n          <FontTypeButton></FontTypeButton>\n        </Col>\n        {/* 设置字体大小 */}\n        <Col>\n          <FontSizeButton></FontSizeButton>\n        </Col>\n        {/* 设置对齐方式 */}\n        <Col>\n          <TextAlignButton></TextAlignButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <CopyFormatButton></CopyFormatButton>\n        </Col>\n        <Col>\n          <CleanFormatButton></CleanFormatButton>\n        </Col>\n        <Col>\n          <FontColorButton></FontColorButton>\n        </Col>\n        <Col>\n          <FontBGColorButton></FontBGColorButton>\n        </Col>\n        <Col>\n          <FontWeightButton></FontWeightButton>\n        </Col>\n        <Col>\n          <FontStyleButton></FontStyleButton>\n        </Col>\n        <Col>\n          <UnderLineButton></UnderLineButton>\n        </Col>\n        <Col>\n          <LineThroughButton></LineThroughButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <AddCodeBoxButton></AddCodeBoxButton>\n        </Col>\n        <Col>\n          <ToDoListButton></ToDoListButton>\n        </Col>\n        <Col>\n          <OrderListButton></OrderListButton>\n        </Col>\n        <Col>\n          <NormalListButton></NormalListButton>\n        </Col>\n        <Col>\n          <SetLinkButton></SetLinkButton>\n        </Col>\n        <Col>\n          <InsertImgButton></InsertImgButton>\n        </Col>\n        <Col>\n          <InsertFileButton></InsertFileButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <InsertTableButton></InsertTableButton>\n        </Col>\n        <Col>\n          <DeleteTableButton></DeleteTableButton>\n        </Col>\n        <Col>\n          <DeleteColumnButton></DeleteColumnButton>\n        </Col>\n        <Col>\n          <DeleteRowButton></DeleteRowButton>\n        </Col>\n        <Col>\n          <InsertTextAfterTable></InsertTextAfterTable>\n        </Col>\n        <Col>\n          <InsertTextBeforeTable></InsertTextBeforeTable>\n        </Col>\n        <Col>\n          <InsertColumnBeforeCell></InsertColumnBeforeCell>\n        </Col>\n        <Col>\n          <InsertColumnAfterCell></InsertColumnAfterCell>\n        </Col>\n        <Col>\n          <InsertRowBeforeButton></InsertRowBeforeButton>\n        </Col>\n        <Col>\n          <InsertRowAfterButton></InsertRowAfterButton>\n        </Col>\n        <Col>\n          <MergeCellButton></MergeCellButton>\n        </Col>\n        <Col>\n          <SplitCellButton></SplitCellButton>\n        </Col>\n        <Col>\n          <ClearCellButton></ClearCellButton>\n        </Col>\n        <Col>{diverComp}</Col>\n        <Col>\n          <StaticButton\n            title=\"输出内容\"\n            mousedownFunc={() => {\n              console.log(JSON.stringify(editor.children));\n              window.localStorage.setItem(\n                \"savedContent\",\n                JSON.stringify(editor.children)\n              );\n            }}\n          >\n            <SaveOutlined />\n          </StaticButton>\n        </Col>\n        {/* <Col>\n          <StaticButton\n            title=\"输出内容HTML\"\n            mousedownFunc={(e) => {\n              // const editorDom = e.nativeEvent.path.find((o: any) => o.className == \"cyEditor\");\n              // if(!editorDom) return;\n              // const content = editorDom.querySelector(':scope>.cyEditor__content');\n              // console.log(content.innerHTML);\n              console.log(slateToHtml(editor));\n            }}\n          >\n            slateToHtml\n          </StaticButton>\n        </Col>\n        <Col>\n          <StaticButton\n            title=\"输入内容\"\n            mousedownFunc={(e) => {\n              // const editorDom = e.nativeEvent.path.find((o: any) => o.className == \"cyEditor\");\n              // if(!editorDom) return;\n              // const content = editorDom.querySelector(':scope>.cyEditor__content');\n              // console.log(content.innerHTML);\n              const content = htmlToSlate(\n                `<table><tbody><tr><td>123</td></tr></tbody></table>`\n              );\n              Transforms.insertNodes(editor, content);\n            }}\n          >\n            htmlToSlate\n          </StaticButton>\n        </Col> */}\n        <Col>\n          <ReadOnlyButton></ReadOnlyButton>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import { jsx } from \"slate-hyperscript\";\nimport { CET, Marks } from \"./Defines\";\n\nconst deserialize = (el: any): any => {\n  if (el.nodeType === 3) {\n    return el.textContent;\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  const nodeStyle: Partial<\n    {\n      [key in Marks]: any;\n    } & {\n      width: number;\n      height: number;\n    }\n  > = {};\n  el.style?.cssText\n    ?.split(\";\")\n    // eslint-disable-next-line array-callback-return\n    .forEach((style: string) => {\n      const [key, value] = style.split(\":\");\n      if (!key) return null;\n      const changeKey = key\n        .trim()\n        .replace(/^([a-z]+)-([a-z])([a-z]+)$/gi, ($0, $1, $2, $3) => {\n          return $1 + $2.toUpperCase() + $3;\n        });\n      const changeValue = value.trim();\n      if (changeKey === \"textDecoration\") {\n        if (changeValue.includes(\"underline\")) {\n          nodeStyle[Marks.Underline] = true;\n        }\n        if (changeValue.includes(\"line-through\")) {\n          nodeStyle[Marks.LineThrough] = true;\n        }\n      } else if (changeValue === \"bold\") {\n        nodeStyle[Marks.BOLD] = true;\n      } else if (changeValue === \"italic\") {\n        nodeStyle[Marks.ITALIC] = true;\n      } else if (Object.values(Marks).includes(changeKey as Marks)) {\n        nodeStyle[changeKey as Marks] = changeValue;\n      }\n\n      if (changeKey === \"width\") {\n        nodeStyle.width = parseInt(changeValue);\n      }\n      if (changeKey === \"height\") {\n        nodeStyle.height = parseInt(changeValue);\n      }\n    });\n\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{ text: \"\" }];\n  }\n  switch (el.nodeName) {\n    case \"BR\":\n      return \"\\n\";\n    case \"BODY\":\n      return jsx(\"fragment\", {}, children);\n    case \"P\":\n    case \"DIV\": {\n      const isTextWrapper = (Array.from(el?.childNodes) || []).every(\n        (node: any) => node.nodeType === 3\n      );\n      return jsx(\n        \"element\",\n        { type: isTextWrapper ? CET.DIV : CET.Block, ...nodeStyle },\n        children\n      );\n    }\n    case \"H1\":\n      return jsx(\"element\", { type: CET.H1, ...nodeStyle }, children);\n    case \"H2\":\n      return jsx(\"element\", { type: CET.H2, ...nodeStyle }, children);\n    case \"H3\":\n      return jsx(\"element\", { type: CET.H3, ...nodeStyle }, children);\n    case \"H4\":\n      return jsx(\"element\", { type: CET.H4, ...nodeStyle }, children);\n    case \"A\":\n      return jsx(\n        \"element\",\n        { type: CET.LINK, url: el.getAttribute(\"href\"), ...nodeStyle },\n        children\n      );\n    case \"IMG\":\n      return jsx(\n        \"element\",\n        { type: CET.IMG, url: el.getAttribute(\"src\"), ...nodeStyle },\n        children\n      );\n    case \"UL\":\n      return jsx(\"element\", { type: CET.NORMAL_LIST, ...nodeStyle }, children);\n    case \"OL\":\n      return jsx(\"element\", { type: CET.NUMBER_LIST, ...nodeStyle }, children);\n    case \"LI\":\n      return jsx(\"element\", { type: CET.LIST_ITEM, ...nodeStyle }, children);\n    case \"TABLE\":\n      return jsx(\"element\", { type: CET.TABLE, ...nodeStyle }, children);\n    case \"TBODY\":\n      return jsx(\"element\", { type: CET.TBODY, ...nodeStyle }, children);\n    case \"TR\":\n      return jsx(\"element\", { type: CET.TR, ...nodeStyle }, children);\n    case \"TD\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TD,\n          ...nodeStyle,\n          rowSpan: el.getAttribute(\"rowspan\") || 1,\n          colSpan: el.getAttribute(\"colspan\") || 1,\n        },\n        children\n      );\n    default:\n      return el.textContent;\n  }\n};\n\nexport const htmlToSlate = (html: string): any => {\n  // 去掉标签之间的空格和回车等其他符号\n  const document = new DOMParser().parseFromString(html, \"text/html\");\n  return deserialize(document.body);\n};\n","/* eslint-disable eqeqeq */\nimport { Range } from \"slate\";\nimport { EditorType } from \"../../common/Defines\";\nimport { handleSelectedTd } from \"./handleSelectedTd\";\nimport { handleRangeCollapsed } from \"./handleRangeCollapsed\";\nimport { handleRangeExpand } from \"./handleRangeExpand\";\nimport { getStrPathSetOfSelectedTds } from \"../../common/globalStore\";\n\nexport const HandleKeyDownEvent = (e: any, editor: EditorType) => {\n  const selectedTds = getStrPathSetOfSelectedTds(editor);\n\n  if (selectedTds.size > 0) {\n    handleSelectedTd(e, editor);\n    return;\n  }\n\n  const { selection } = editor;\n  if (!selection) return;\n\n  if (Range.isExpanded(selection)) {\n    return handleRangeExpand(e, editor);\n  }\n\n  if (Range.isCollapsed(selection)) {\n    return handleRangeCollapsed(e, editor);\n  }\n};\n","import { EditorType } from \"../../common/Defines\";\nimport { TdLogic } from \"../../comps/Td\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { setCopyedContent } from \"../../common/globalStore\";\n\nexport const handleSelectedTd = (e: any, editor: EditorType) => {\n  // 当没有选区的时候，查看是否已经选中表格\n  const isNotOnlyOneTd = TableLogic.getSelectedTdsSize(editor) > 1;\n\n  const getFirstTd = () => TableLogic.getFirstSelectedTd(editor);\n\n  switch (e.key) {\n    case \"Delete\":\n    case \"Backspace\": {\n      TdLogic.clearTd(editor);\n      break;\n    }\n    case \"Tab\": {\n      e.preventDefault();\n      if (isNotOnlyOneTd) break;\n      const td = getFirstTd();\n      td && TdLogic.findTargetTd(editor, td, e.shiftKey ? \"left\" : \"right\");\n      break;\n    }\n    case \"Escape\": {\n      e.preventDefault();\n      TdLogic.deselectAllTd(editor);\n      break;\n    }\n    // 直接全选选中的td的内容，进入编辑状态\n    case \" \":\n    case \"Enter\":\n      {\n        e.preventDefault();\n        if (isNotOnlyOneTd) break;\n        const td = getFirstTd();\n        td && TdLogic.editTd(editor, td);\n      }\n      break;\n    case \"ArrowUp\": {\n      e.preventDefault();\n      if (isNotOnlyOneTd) break;\n      const td = getFirstTd();\n      td && TdLogic.findTargetTd(editor, td, \"up\");\n      break;\n    }\n    case \"ArrowDown\": {\n      e.preventDefault();\n      if (isNotOnlyOneTd) break;\n      const td = getFirstTd();\n      td && TdLogic.findTargetTd(editor, td, \"down\");\n      break;\n    }\n    case \"ArrowLeft\": {\n      e.preventDefault();\n      if (isNotOnlyOneTd) break;\n      const td = getFirstTd();\n      td && TdLogic.findTargetTd(editor, td, \"left\");\n      break;\n    }\n    case \"ArrowRight\": {\n      e.preventDefault();\n      if (isNotOnlyOneTd) break;\n      const td = getFirstTd();\n      td && TdLogic.findTargetTd(editor, td, \"right\");\n      break;\n    }\n  }\n\n  if (!e.ctrlKey && (e.key.length === 1 || e.key === \"Process\")) {\n    if (isNotOnlyOneTd) return;\n    const td = getFirstTd();\n    TdLogic.clearTd(editor);\n    td && TdLogic.editTd(editor, td);\n    return;\n  }\n\n  // 选中单元格进行复制\n  if (e.ctrlKey && e.key === \"c\") {\n    setCopyedContent(null);\n    TableLogic.copyCells(editor);\n    return;\n  }\n\n  // 粘贴单元格\n  if (e.ctrlKey && e.key === \"v\") {\n    TableLogic.pasteCells(editor);\n    return;\n  }\n\n  return;\n};\n","import { Editor } from \"slate\";\nimport { EditorType } from \"../../common/Defines\";\nimport { utils } from \"../../common/utils\";\nimport { ListLogic } from \"../../comps/ListComp\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { TdLogic } from \"../../comps/Td\";\n\nexport const handleRangeExpand = (e: any, editor: EditorType):void => {\n  const { selection } = editor;\n  if (!selection) return;\n  \n  switch (e.key) {\n    case \"Escape\": {\n      const [td, isNotOnlyOne] = Editor.nodes(editor, {\n        at: selection,\n        match(n) {\n          return TableLogic.isTd(n) && n.canTdEdit === true;\n        },\n      });\n      if (!td || isNotOnlyOne) break;\n      TdLogic.chooseTd(editor, td);\n      break;\n    }\n    case \"Tab\": {\n      e.preventDefault();\n\n      for (const [, p] of Editor.nodes(editor, {\n        at: selection,\n        reverse: true,\n        universal: true,\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      })) {\n        const [parent, pp] = utils.getParent(editor, p);\n        if (!parent) continue;\n        if (ListLogic.isListItem(parent)) {\n          !e.shiftKey\n            ? ListLogic.indentLi(editor, [parent, pp])\n            : ListLogic.liftLi(editor, [parent, pp]);\n        }\n      }\n      break;\n    }\n  }\n};\n","/* eslint-disable eqeqeq */\nimport { Node, Transforms, Editor } from \"slate\";\nimport { CET, EditorType } from \"../../common/Defines\";\nimport { utils } from \"../../common/utils\";\nimport { ListLogic } from \"../../comps/ListComp\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { TdLogic } from \"../../comps/Td\";\n\nexport const handleRangeCollapsed = (e: any, editor: EditorType): void => {\n  const { selection } = editor;\n  if (!selection) return;\n\n  // 以下是没有选区的情况下的事件\n  const elementType = utils.getFirstAboveElementType(editor);\n\n  const getEditingTd = () => {\n    return TableLogic.getEditingTds(editor)?.[0];\n  };\n\n  // 如果默认事件没有被组件拦截掉，那么在这里重新定义拦截逻辑\n  switch (e.key) {\n    case \"Tab\": {\n      e.preventDefault();\n      if (CET.LIST_ITEM === elementType) {\n        e.shiftKey\n          ? ListLogic.shiftTabEvent(editor)\n          : ListLogic.tabEvent(editor);\n        break;\n      }\n      if (CET.TD === elementType) {\n        e.shiftKey\n          ? TableLogic.shiftTabEvent(editor)\n          : TableLogic.tabEvent(editor);\n        break;\n      }\n      // 如果是在其他元素上\n      !e.shiftKey && Transforms.insertText(editor, \"    \");\n      break;\n    }\n    case \"Escape\": {\n      const td = getEditingTd();\n      if (!td) break;\n      TdLogic.chooseTd(editor, td);\n      break;\n    }\n    case \"ArrowUp\": {\n      const td = getEditingTd();\n      if (td) {\n        const first = Node.child(td[0], 0);\n        const cursor = Editor.parent(editor, selection.anchor);\n        if (first == cursor[0]) {\n          TdLogic.findTargetTd(editor, td, \"up\");\n          Transforms.deselect(editor);\n          e.preventDefault();\n          return;\n        }\n        return;\n      }\n      return;\n    }\n    case \"ArrowDown\": {\n      const td = getEditingTd();\n      if (td) {\n        const last = Node.child(td[0], td[0].children.length - 1);\n        const cursor = Editor.parent(editor, selection.anchor);\n        if (last == cursor[0]) {\n          TdLogic.findTargetTd(editor, td, \"down\");\n          Transforms.deselect(editor);\n          e.preventDefault();\n          return;\n        }\n        return;\n      }\n      return;\n    }\n    case \"ArrowLeft\": {\n      const td = getEditingTd();\n      if (td && Editor.isStart(editor, selection.anchor, td[1])) {\n        TdLogic.findTargetTd(editor, td, \"left\");\n        Transforms.deselect(editor);\n        e.preventDefault();\n        return;\n      }\n      return;\n    }\n    case \"ArrowRight\": {\n      const td = getEditingTd();\n      if (td && Editor.isEnd(editor, selection.anchor, td[1])) {\n        TdLogic.findTargetTd(editor, td, \"right\");\n        Transforms.deselect(editor);\n        e.preventDefault();\n        return;\n      }\n      return;\n    }\n  }\n  return;\n};\n","/* eslint-disable eqeqeq */\nimport {\n  BorderlessTableOutlined,\n  BorderOuterOutlined,\n  DeleteOutlined,\n  FullscreenOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Tooltip } from \"antd\";\nimport { Resizable } from \"re-resizable\";\nimport { useRef, useState } from \"react\";\nimport { Transforms } from \"slate\";\nimport {\n  useSelected,\n  ReactEditor,\n  RenderElementProps,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nimport { useCallback } from \"react\";\n\nexport const ImgComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n  const editor = useSlateStatic();\n  const [state, setState] = useState({\n    size: {\n      width: element.width || 100,\n      height: element.height || 100,\n    },\n    showTool: false,\n  });\n  const viewerIns = useRef<InstanceType<typeof Viewer>>();\n\n  const enableResize = () => {\n    return ReactEditor.isReadOnly(editor)\n      ? {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }\n      : {\n          top: true,\n          right: true,\n          bottom: true,\n          left: true,\n          topRight: true,\n          bottomRight: true,\n          bottomLeft: true,\n          topLeft: true,\n        };\n  };\n\n  const onResizeStop: ConstructorParameters<\n    typeof Resizable\n  >[0][\"onResizeStop\"] = (e, direction, ref, d) => {\n    const newWidth = state.size.width + d.width;\n    const newHeight = state.size.height + d.height;\n    setState((t) => ({\n      ...t,\n      size: {\n        width: newWidth,\n        height: newHeight,\n      },\n    }));\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        width: newWidth,\n        height: newHeight,\n      },\n      { at: path }\n    );\n  };\n\n  const registeImgViewer = useCallback(\n    (el) => {\n      if (el && !viewerIns.current && readOnly) {\n        viewerIns.current = new Viewer(el, {});\n      }\n    },\n    [readOnly]\n  );\n\n  const showBigImg = () => {\n    const domNode = ReactEditor.toDOMNode(editor, element);\n    const imgNode = domNode.querySelector(\"img\");\n    if (imgNode) {\n      const v = new Viewer(imgNode, {\n        hidden() {\n          v.destroy();\n        },\n      });\n      v.show();\n    }\n  };\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.8,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"black\",\n        zIndex: 9,\n      }}\n    >\n      uploading...\n    </div>\n  );\n\n  const addBorder = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(editor, { border: true }, { at: path });\n  };\n\n  const removeBorder = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.unsetNodes(editor, \"border\", { at: path });\n  };\n\n  const deleteImg = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.delete(editor, { at: path, voids: true, reverse: true });\n    ReactEditor.focus(editor);\n  };\n  const imgFuncs = [\n    {\n      title: \"边框\",\n      icon: <BorderOuterOutlined />,\n      method: addBorder,\n    },\n    {\n      title: \"取消边框\",\n      icon: <BorderlessTableOutlined />,\n      method: removeBorder,\n    },\n    {\n      title: \"查看大图\",\n      icon: <FullscreenOutlined />,\n      method: showBigImg,\n    },\n    {\n      title: \"删除\",\n      icon: <DeleteOutlined />,\n      method: deleteImg,\n    },\n  ];\n\n  return (\n    <div\n      {...attributes}\n      contentEditable={false}\n      style={{\n        position: \"relative\",\n        display: \"inline-block\",\n        margin: 5,\n        verticalAlign: \"bottom\",\n        boxShadow: selected ? \"0 0 0 3px rgba(180,215,255,.7)\" : \"none\",\n        border: element.border ? \"1px solid #e5e5e5\" : \"none\",\n      }}\n    >\n      <Resizable\n        enable={enableResize()}\n        style={{ display: \"inline-block\" }}\n        size={state.size}\n        onResizeStop={onResizeStop}\n      >\n        {element.id ? mask : null}\n        <Popover\n          content={\n            <Row gutter={8}>\n              {imgFuncs.map((func) => {\n                return (\n                  <Col key={func.title}>\n                    <Tooltip title={func.title}>\n                      <Button\n                        onClick={func.method}\n                        type=\"text\"\n                        icon={func.icon}\n                      ></Button>\n                    </Tooltip>\n                  </Col>\n                );\n              })}\n            </Row>\n          }\n          trigger={readOnly ? [] : \"click\"}\n          placement=\"bottomLeft\"\n        >\n          <img\n            ref={registeImgViewer}\n            width=\"100%\"\n            height=\"100%\"\n            alt=\"\"\n            src={element.url}\n          ></img>\n        </Popover>\n        {children}\n      </Resizable>\n    </div>\n  );\n};\n","/* eslint-disable eqeqeq */\nimport {\n  DeleteOutlined,\n  DownloadOutlined,\n  PaperClipOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Tooltip } from \"antd\";\nimport { Transforms } from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\n\nexport const FileComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const editor = useSlateStatic();\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.5,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"black\",\n        zIndex: 9,\n      }}\n    >\n      uploading...\n    </div>\n  );\n\n  const deleteFile = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.delete(editor, { at: path, voids: true, reverse: true });\n    ReactEditor.focus(editor);\n  };\n\n  const downloadFile = () => {\n    window.open(element.url);\n  };\n\n  const imgFuncs = [\n    {\n      title: \"下载\",\n      icon: <DownloadOutlined />,\n      method: downloadFile,\n    },\n    {\n      title: \"删除\",\n      icon: <DeleteOutlined />,\n      method: deleteFile,\n    },\n  ];\n\n  return (\n    <div\n      {...attributes}\n      contentEditable={false}\n      style={{\n        position: \"relative\",\n        display: \"inline-block\",\n        margin: \"0 5px\",\n        verticalAlign: \"bottom\",\n      }}\n    >\n      {element.id ? mask : null}\n      <Popover\n        content={\n          <Row gutter={8}>\n            {imgFuncs.map((func) => {\n              return (\n                <Col key={func.title}>\n                  <Tooltip title={func.title}>\n                    <Button\n                      onClick={func.method}\n                      type=\"text\"\n                      icon={func.icon}\n                    ></Button>\n                  </Tooltip>\n                </Col>\n              );\n            })}\n          </Row>\n        }\n        trigger={readOnly ? [] : \"click\"}\n        placement=\"bottomLeft\"\n      >\n        <a\n          download\n          href={element.url}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <PaperClipOutlined style={{ marginRight: 2 }} />\n          {element.fileName}\n        </a>\n      </Popover>\n      {children}\n    </div>\n  );\n};\n","/* eslint-disable eqeqeq */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { DisconnectOutlined, SelectOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Form, Input, Popover, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport { CET } from \"../common/Defines\";\n\nexport const LinkComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n  const [content, setContent] = useState<string>();\n  const [url, setUrl] = useState<string>();\n\n  const visitLink = () => {\n    window.open(element.url);\n  };\n\n  const cancelLink = (e: any) => {\n    e.preventDefault();\n    ReactEditor.focus(editor);\n\n    const { selection } = editor;\n    if (!selection) return;\n\n    Transforms.unwrapNodes(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type == CET.LINK;\n      },\n    });\n  };\n\n  const formItemStyle = { marginBottom: 6 };\n\n  const submitChange = () => {\n    ReactEditor.focus(editor);\n    const link = ReactEditor.toSlateNode(editor, attributes.ref.current);\n    const linkPath = ReactEditor.findPath(editor, link);\n    if (link && linkPath) {\n      Transforms.insertText(editor, content || \"link\", {\n        at: Editor.range(editor, linkPath),\n      });\n      Transforms.setNodes(editor, { url }, { at: linkPath });\n    }\n  };\n\n  const editPanel = (\n    <Form size=\"small\">\n      <Row gutter={8} style={{ flexDirection: \"column\", width: 300 }}>\n        <Col flex=\"1\">\n          <Form.Item label=\"操作\" style={formItemStyle}>\n            <Button size=\"small\" onClick={visitLink}>\n              <SelectOutlined title=\"访问链接\" /> 访问链接\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onMouseDown={cancelLink}>\n              <DisconnectOutlined title=\"取消链接\" /> 取消链接\n            </Button>\n          </Form.Item>\n        </Col>\n        <Col flex=\"1\">\n          <Form.Item label=\"文字\" style={formItemStyle}>\n            <Input\n              value={content}\n              onChange={(el: any) => {\n                setContent(el.target.value);\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item label=\"链接\" style={formItemStyle}>\n            <Input\n              value={url}\n              onChange={(el: any) => {\n                setUrl(el.target.value);\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Row justify=\"end\">\n          <Button\n            type=\"primary\"\n            style={{ width: 100, marginRight: 4 }}\n            onClick={submitChange}\n          >\n            确定\n          </Button>\n        </Row>\n      </Row>\n    </Form>\n  );\n\n  const initEditPanel = () => {\n    const linkWrapper = attributes.ref.current;\n    const link = linkWrapper.querySelector(\"a\");\n\n    if (!link) return;\n\n    setUrl(link.href);\n    setContent(link.innerText);\n  };\n\n  return (\n    <div {...attributes} style={{ display: \"inline\", position: \"relative\" }}>\n      <Popover\n        placement=\"right\"\n        content={editPanel}\n        trigger={readOnly ? [] : [\"hover\"]}\n      >\n        <a\n          href={element.url}\n          target=\"__blank\"\n          onMouseEnter={() => initEditPanel()}\n        >\n          {children}\n        </a>\n      </Popover>\n    </div>\n  );\n};\n","// https://github.com/scniro/react-codemirror2\r\n// https://codemirror.net/doc/manual.html#config\r\nimport { Select } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { Resizable } from \"re-resizable\";\r\nimport { useRef } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { ICodeMirror, Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport { Transforms } from \"slate\";\r\nimport { useSlateStatic, ReactEditor, useReadOnly } from \"slate-react\";\r\nimport { RenderElementProps } from \"slate-react/dist/components/editable\";\r\nrequire(\"codemirror/lib/codemirror.css\");\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/theme/neat.css\");\r\nrequire(\"codemirror/theme/darcula.css\");\r\nrequire(\"codemirror/theme/material-palenight.css\");\r\nrequire(\"codemirror/mode/xml/xml.js\");\r\nrequire(\"codemirror/mode/javascript/javascript.js\");\r\nrequire(\"codemirror/mode/jsx/jsx.js\");\r\nrequire(\"codemirror/mode/vue/vue.js\");\r\nrequire(\"codemirror/mode/clike/clike.js\");\r\n\r\nconst lans = [\r\n  {\r\n    title: \"html\",\r\n    value: \"text/html\",\r\n  },\r\n  {\r\n    title: \"javascript\",\r\n    value: \"javascript\",\r\n  },\r\n  {\r\n    title: \"react\",\r\n    value: \"text/jsx\",\r\n  },\r\n  {\r\n    title: \"react-ts\",\r\n    value: \"text/typescript-jsx\",\r\n  },\r\n  {\r\n    title: \"vue\",\r\n    value: \"vue\",\r\n  },\r\n  {\r\n    title: \"java\",\r\n    value: \"text/x-java\",\r\n  },\r\n  {\r\n    title: \"c++\",\r\n    value: \"text/x-c++src\",\r\n  },\r\n];\r\n\r\nexport const CodeComp: (props: RenderElementProps) => JSX.Element = ({\r\n  attributes,\r\n  children,\r\n  element,\r\n}) => {\r\n  const readOnly = useReadOnly();\r\n  const editor = useSlateStatic();\r\n  const [state, setState] = useState({\r\n    size: {\r\n      width: \"100%\",\r\n      height: element.height || 300,\r\n    },\r\n    showTool: false,\r\n  });\r\n  const [code, setCode] = useState(element.defaultCode || \"\");\r\n  const codeIns = useRef<any>(null);\r\n  const saveContent = useRef<any>(\r\n    _.debounce((value) => {\r\n      const path = ReactEditor.findPath(editor, element);\r\n      Transforms.setNodes(\r\n        editor,\r\n        {\r\n          children: [],\r\n          defaultCode: value,\r\n        },\r\n        { at: path }\r\n      );\r\n    }, 100)\r\n  );\r\n  const codeConfig = useMemo(() => {\r\n    return {\r\n      mode: element.defaultMode,\r\n      theme: \"darcula\",\r\n      lineNumbers: true,\r\n      readOnly: readOnly ? \"nocursor\" : false,\r\n    };\r\n  }, [element.defaultMode, readOnly]);\r\n\r\n  const enableResize = () => {\r\n    return ReactEditor.isReadOnly(editor)\r\n      ? {\r\n          top: false,\r\n          right: false,\r\n          bottom: false,\r\n          left: false,\r\n          topRight: false,\r\n          bottomRight: false,\r\n          bottomLeft: false,\r\n          topLeft: false,\r\n        }\r\n      : {\r\n          top: false,\r\n          right: false,\r\n          bottom: true,\r\n          left: false,\r\n          topRight: false,\r\n          bottomRight: false,\r\n          bottomLeft: false,\r\n          topLeft: false,\r\n        };\r\n  };\r\n  const onResizeStop: ConstructorParameters<\r\n    typeof Resizable\r\n  >[0][\"onResizeStop\"] = (e, direction, ref, d) => {\r\n    setState((t) => ({\r\n      ...t,\r\n      size: {\r\n        ...t.size,\r\n        height: ref.offsetHeight,\r\n      },\r\n    }));\r\n    const path = ReactEditor.findPath(editor, element);\r\n    Transforms.setNodes(\r\n      editor,\r\n      {\r\n        children: [],\r\n        height: ref.offsetHeight,\r\n      },\r\n      { at: path }\r\n    );\r\n  };\r\n\r\n  const onLanChange = (value: string) => {\r\n    const path = ReactEditor.findPath(editor, element);\r\n    Transforms.setNodes(\r\n      editor,\r\n      {\r\n        children: [],\r\n        defaultMode: value,\r\n      },\r\n      { at: path }\r\n    );\r\n  };\r\n  const editorDidMount: ICodeMirror[\"editorDidMount\"] = useCallback(\r\n    (editor: any) => {\r\n      codeIns.current = editor;\r\n      editor.setSize(\"100%\", element.height);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const onEditorChange: ICodeMirror[\"onChange\"] = useCallback(\r\n    (editor, data, value) => {\r\n      saveContent.current(value);\r\n    },\r\n    [saveContent]\r\n  );\r\n\r\n  return (\r\n    <div {...attributes} contentEditable={false}>\r\n      <Resizable\r\n        enable={enableResize()}\r\n        style={{ display: \"inline-block\", position: \"relative\" }}\r\n        size={state.size}\r\n        onResizeStop={onResizeStop}\r\n        onResize={(a, b, c, d) => {\r\n          codeIns.current?.setSize(\"100%\", c.offsetHeight);\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            right: 30,\r\n            top: 5,\r\n            zIndex: 7,\r\n          }}\r\n        >\r\n          <Select\r\n            size=\"small\"\r\n            defaultValue={element.defaultMode}\r\n            style={{ width: 120, color: \"white\", textAlign: \"right\" }}\r\n            bordered={false}\r\n            showArrow={false}\r\n            onChange={onLanChange}\r\n          >\r\n            {lans.map((lan) => {\r\n              return (\r\n                <Select.Option key={lan.value} value={lan.value}>\r\n                  {lan.title}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        {useMemo(() => {\r\n          return (\r\n            <CodeMirror\r\n              value={code}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setCode(value);\r\n              }}\r\n              options={codeConfig}\r\n              onChange={onEditorChange}\r\n              editorDidMount={editorDidMount}\r\n            />\r\n          );\r\n        }, [code, codeConfig, editorDidMount, onEditorChange])}\r\n      </Resizable>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable eqeqeq */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Checkbox } from \"antd\";\r\nimport { Transforms } from \"slate\";\r\nimport {\r\n  RenderElementProps,\r\n  ReactEditor,\r\n  useSlateStatic,\r\n  useReadOnly,\r\n} from \"slate-react\";\r\n\r\nexport const TodoListComp: (props: RenderElementProps) => JSX.Element = ({\r\n  attributes,\r\n  children,\r\n  element,\r\n}) => {\r\n  const editor = useSlateStatic();\r\n  const readOnly = useReadOnly();\r\n\r\n  return (\r\n    <div {...attributes}>\r\n      <span contentEditable={false} style={{ marginRight: 12, }}>\r\n        <Checkbox\r\n          checked={element.checked}\r\n          onChange={(e) => {\r\n            Transforms.setNodes(\r\n              editor,\r\n              {\r\n                checked: e.target.checked,\r\n              },\r\n              {\r\n                at: ReactEditor.findPath(editor, element),\r\n              }\r\n            );\r\n          }}\r\n          disabled={readOnly}\r\n        ></Checkbox>\r\n      </span>\r\n      <span>{children}</span>\r\n    </div>\r\n  );\r\n};\r\n","import {\n  EditorType,\n  CustomElement,\n  CustomText,\n  CET,\n  TextWrappers,\n} from \"../common/Defines\";\nimport { TD } from \"../comps/Td\";\nimport { Table } from \"../comps/Table\";\nimport { ImgComp } from \"../comps/ImgComp\";\nimport { FileComp as File } from \"../comps/FileComp\";\nimport { LinkComp } from \"../comps/LinkComp\";\nimport { CodeComp as CODE } from \"../comps/Code\";\nimport { TodoListComp as TODO } from \"../comps/TodoListComp\";\nimport { RenderElementProps } from \"slate-react\";\n\ndeclare module \"slate\" {\n  interface CustomTypes {\n    Editor: EditorType;\n    Element: CustomElement;\n    Text: CustomText;\n  }\n}\nexport const MyElements: (props: RenderElementProps) => JSX.Element = (\n  props\n) => {\n  const { attributes, children, element } = props;\n  const style: any = {};\n  if (TextWrappers.includes(element.type) && element.textAlign)\n    style.textAlign = element.textAlign;\n\n  switch (element.type) {\n    case CET.TODOLIST:\n      return <TODO {...props}></TODO>;\n    case CET.NUMBER_LIST:\n      return <ol {...attributes}>{children}</ol>;\n    case CET.NORMAL_LIST:\n      return <ul {...attributes}>{children}</ul>;\n    case CET.LIST_ITEM:\n      return (\n        <li {...attributes} style={{ color: element.liColor || \"unset\" }}>\n          {children}\n        </li>\n      );\n    case CET.DIV:\n      return (\n        <div {...attributes} style={style}>\n          {children}\n        </div>\n      );\n    case CET.H1:\n      return (\n        <h1 {...attributes} style={{ ...style }}>\n          {children}\n        </h1>\n      );\n    case CET.H2:\n      return (\n        <h2 {...attributes} style={{ ...style }}>\n          {children}\n        </h2>\n      );\n    case CET.H3:\n      return (\n        <h3 {...attributes} style={{ ...style }}>\n          {children}\n        </h3>\n      );\n    case CET.H4:\n      return (\n        <h4 {...attributes} style={{ ...style }}>\n          {children}\n        </h4>\n      );\n    case CET.IMG:\n      return <ImgComp {...props}>{children}</ImgComp>;\n    case CET.LINK:\n      return <LinkComp {...props}></LinkComp>;\n    case CET.TABLE:\n      return <Table {...props}></Table>;\n    case CET.TBODY:\n      return <tbody {...attributes}>{children}</tbody>;\n    case CET.TR:\n      const otherAttr: any = {};\n      if (element.shouldEmpty) {\n        otherAttr.contentEditable = false;\n      }\n      return (\n        <tr {...attributes} {...otherAttr}>\n          {element.shouldEmpty ? null : children}\n        </tr>\n      );\n    case CET.TD:\n      return <TD {...props}></TD>;\n    case CET.CODE:\n      return <CODE {...props}></CODE>;\n    case CET.FILE:\n      return <File {...props}></File>;\n    default:\n      return <div {...attributes}>{children}</div>;\n  }\n};\n","import { Marks, EditableProps } from \"../common/Defines\";\n\nexport const MyLeaf: NonNullable<EditableProps[\"renderLeaf\"]> = ({\n  attributes,\n  children,\n  leaf,\n}) => {\n  const style: any = {};\n  if (leaf[Marks.BOLD]) style.fontWeight = \"bold\";\n  if (leaf[Marks.ITALIC]) style.fontStyle = \"italic\";\n  if (leaf[Marks.FontSize]) style.fontSize = leaf.fontSize;\n  if (leaf[Marks.Underline] || leaf[Marks.LineThrough])\n    style.textDecoration = `${leaf[Marks.Underline] ? \"underline\" : \"\"} ${\n      leaf[Marks.LineThrough] ? \"line-through\" : \"\"\n    }`;\n  if (leaf[Marks.Color]) style.color = leaf[Marks.Color];\n  if (leaf[Marks.BGColor]) style.backgroundColor = leaf[Marks.BGColor];\n\n  return (\n    <span {...attributes} style={style}>\n      {children}\n    </span>\n  );\n};\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  createContext,\n} from \"react\";\nimport { createEditor, Transforms, Editor, Operation, Selection } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport {\n  CET,\n  CustomElement,\n  EditableProps,\n  EditorCompShape,\n  Marks,\n  StateShape,\n} from \"./common/Defines\";\nimport { TableLogic } from \"./comps/Table\";\nimport { utils } from \"./common/utils\";\nimport { ToolBar } from \"./comps/TooBar/ToolBar\";\nimport { TdLogic } from \"./comps/Td\";\nimport { withCyWrap } from \"./plugins/WithCyWrap\";\nimport { HandleKeyDownEvent } from \"./EventHandler/HandleKeyDownEvent/HandleKeyDownEvent\";\nimport { MyElements } from \"./RenderElements/MyElements\";\nimport { MyLeaf } from \"./RenderElements/RenderLeaf\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport \"./RichEditor.css\";\n\ntype savedMarksShape =\n  | (Partial<\n      {\n        [key in Marks]: any;\n      }\n    > &\n      Partial<\n        {\n          [key in keyof CustomElement]: CustomElement[key];\n        }\n      > & {\n        [key: string]: any;\n      })\n  | null\n  | undefined;\n\nexport const EditorContext = createContext<{\n  savedMarks: savedMarksShape;\n  setSavedMarks: (marks: savedMarksShape) => void;\n  readOnly: boolean;\n  setReadOnly: (value: boolean) => void;\n}>({\n  savedMarks: null,\n  setSavedMarks: () => {},\n  readOnly: false,\n  setReadOnly: () => {},\n});\n\nconst EditorComp: EditorCompShape = () => {\n  /**\n   * 解决live refresh问题的链接\n   * https://github.com/ianstormtaylor/slate/issues/4081\n   */\n  const [editor] = useState(withCyWrap(withHistory(withReact(createEditor()))));\n  // const [editor] = useState(withCyWrap(withReact(createEditor())));\n  const [value, setValue] = useState<StateShape>(() => {\n    const content =\n      window.localStorage.getItem(\"savedContent\") ||\n      JSON.stringify([{ type: CET.DIV, children: [{ text: \"\" }] }]);\n    // return TableLogic.model || JSON.parse(content);\n    return JSON.parse(content);\n  });\n  const ref = useRef<{\n    preUndos: Operation[][];\n    preSelection: Selection | null;\n  }>({\n    preUndos: [],\n    preSelection: null,\n  });\n  const [savedMarks, setSavedMarks] = useState<savedMarksShape>();\n\n  useEffect(() => {\n    if (savedMarks != null) {\n      document.body.style.cursor = \"copy\";\n    } else {\n      document.body.style.cursor = \"auto\";\n    }\n  }, [savedMarks]);\n  const [readOnly, setReadOnly] = useState(false);\n\n  useEffect(() => {\n    // setTimeout(() => {\n    //   unitTest(editor);\n    // }, 100);\n    // TableLogic.resetSelectedTds(editor);\n  }, []);\n\n  const renderElement: EditableProps[\"renderElement\"] = useCallback(\n    (props) => <MyElements {...props} editorRef={ref}></MyElements>,\n    []\n  );\n  const renderLeaf: EditableProps[\"renderLeaf\"] = useCallback((props) => {\n    return <MyLeaf {...props}></MyLeaf>;\n  }, []);\n  const MyToolBar = useMemo(() => {\n    return <ToolBar></ToolBar>;\n  }, []);\n\n  const handleSelect = () => {\n    // 处理格式刷逻辑\n    if (savedMarks != null) {\n      const hasSelectTd = TableLogic.getFirstSelectedTd(editor);\n      if (hasSelectTd) return;\n\n      const hasTextAlign = savedMarks[Marks.TextAlign];\n      const textWrapper = Editor.above(editor, {\n        at: editor.selection?.anchor,\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n      if (!textWrapper) return;\n      for (const key of Object.values(Marks)) {\n        Editor.removeMark(editor, key);\n      }\n      if (hasTextAlign) {\n        Transforms.unsetNodes(editor, Marks.TextAlign, { at: textWrapper[1] });\n      }\n      for (const key in savedMarks) {\n        if (key === \"children\") continue;\n        Editor.addMark(editor, key, savedMarks[key]);\n      }\n      if (hasTextAlign) {\n        Transforms.setNodes(\n          editor,\n          {\n            [Marks.TextAlign]: savedMarks[Marks.TextAlign],\n          },\n          { at: textWrapper[1] }\n        );\n      }\n      setSavedMarks(null);\n      document.body.style.cursor = \"auto\";\n      editor.selection &&\n        Transforms.select(editor, Editor.start(editor, editor.selection));\n    }\n  };\n  const handleFocus = () => {\n    ref.current.preSelection &&\n      Editor.hasPath(editor, ref.current.preSelection.anchor.path) &&\n      Editor.hasPath(editor, ref.current.preSelection.focus.path) &&\n      Transforms.select(editor, ref.current.preSelection);\n  };\n  const handleBlur = () => {\n    ref.current.preSelection = editor.selection;\n  };\n  const handleMouseDown = (e: any) => {\n    // 取消所有表格的选中状态，因为表格部分已经阻止了自己的mousedown事件传递到父组件，所以只要能在这里触发的，都肯定不是在表格里\n    TdLogic.deselectAllTd(editor);\n  };\n  const handleKeyDown = (e: any) => HandleKeyDownEvent(e, editor);\n\n  return (\n    <div className=\"cyEditor\" style={{ position: \"relative\" }}>\n      <Slate\n        editor={editor}\n        value={value}\n        onChange={(value) => {\n          setValue(value);\n        }}\n      >\n        <EditorContext.Provider\n          value={useMemo(() => {\n            return {\n              savedMarks: savedMarks,\n              setSavedMarks: setSavedMarks,\n              readOnly,\n              setReadOnly,\n            };\n          }, [readOnly, savedMarks])}\n        >\n          {MyToolBar}\n          <div\n            className=\"cyEditor__content\"\n            style={{\n              overflow: \"auto\",\n              height: window.screen.availHeight - 200,\n              border: \"1px solid\",\n              padding: 12,\n            }}\n          >\n            <Editable\n              renderElement={renderElement}\n              renderLeaf={renderLeaf}\n              autoFocus\n              readOnly={readOnly}\n              onCompositionStart={() => {\n                utils.removeRangeElement(editor);\n              }}\n              placeholder=\"welcome to cyEditor!\"\n              onKeyDown={handleKeyDown}\n              onMouseDown={handleMouseDown}\n              onDragStart={(e) => {\n                e.preventDefault();\n              }}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              onSelect={handleSelect}\n            />\n          </div>\n        </EditorContext.Provider>\n      </Slate>\n    </div>\n  );\n};\n\nexport default EditorComp;\n","import _ from \"lodash\";\nimport {\n  Editor,\n  Range,\n  Element,\n  Text,\n  Transforms,\n  NodeEntry,\n  Descendant,\n  Path,\n} from \"slate\";\nimport { CET, CustomElement, EditorType, InLineTypes } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\nimport { ListLogic } from \"../comps/ListComp\";\nimport { TableLogic } from \"../comps/Table\";\nimport {\n  getCopyedCells,\n  setCopyedCells,\n  setCopyedContent,\n  setCopyedMaxRowAndCol,\n} from \"../common/globalStore\";\nimport { htmlToSlate } from \"../common/htmlToSlate\";\nimport { HistoryEditor } from \"slate-history\";\nimport { insertImg } from \"../comps/TooBar/funcButtons/InsertImgButton\";\nimport { insertFile } from \"../comps/TooBar/funcButtons/InsertFileButton\";\n\nexport const withCyWrap = (editor: EditorType) => {\n  const {\n    deleteForward,\n    deleteBackward,\n    deleteFragment,\n    getFragment,\n    insertText,\n    insertData,\n    insertBreak,\n    isInline,\n    isVoid,\n    normalizeNode,\n    apply,\n  } = editor;\n\n  const getTodoList = () => {\n    const [todo] = Editor.nodes(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TODOLIST;\n      },\n    });\n    return todo;\n  };\n\n  editor.apply = (e) => {\n    try {\n      if (e.type === \"set_node\") {\n        const node = Editor.node(editor, e.path);\n        const isImg =\n          node && Element.isElement(node[0]) && node[0].type === CET.IMG;\n        const isFile =\n          node && Element.isElement(node[0]) && node[0].type === CET.FILE;\n        const isTd = node && TableLogic.isTd(node[0]);\n        const isTable = node && TableLogic.isTable(node[0]);\n        const properties = e.newProperties as Partial<CustomElement>;\n        const oldProperties = e.properties as Partial<CustomElement>;\n        if (\n          (isTd &&\n            (properties.selected ||\n              properties.width ||\n              properties.start ||\n              properties.canTdEdit ||\n              oldProperties.start ||\n              oldProperties.selected ||\n              oldProperties.width ||\n              oldProperties.canTdEdit)) ||\n          (isTable &&\n            (properties.wrapperWidthWhenCreated ||\n              oldProperties.wrapperWidthWhenCreated)) ||\n          isImg ||\n          isFile\n        ) {\n          HistoryEditor.withoutSaving(editor, () => {\n            apply(e);\n          });\n          return;\n        }\n      }\n\n      apply(e);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  editor.insertBreak = () => {\n    if (!editor.selection) return;\n    const todoList = getTodoList();\n    if (todoList) {\n      if (\n        todoList &&\n        Editor.string(editor, todoList[1], { voids: true }) === \"\"\n      ) {\n        Transforms.setNodes(editor, { type: CET.DIV }, { at: todoList[1] });\n        return;\n      }\n      insertBreak();\n      return;\n    }\n    if (Range.isExpanded(editor.selection)) {\n      utils.removeRangeElement(editor);\n    } else {\n      const textWrapper = utils.getParent(editor, editor.selection.anchor.path);\n      if (!textWrapper[0]) return;\n      const twParent = Editor.parent(editor, textWrapper[1]);\n\n      const li = ListLogic.isListItem(twParent[0]) && twParent;\n      if (li && Editor.string(editor, li[1], { voids: true }) === \"\") {\n        Transforms.liftNodes(editor, { at: li[1] });\n        return;\n      }\n    }\n    insertBreak();\n  };\n\n  editor.deleteFragment = (direction) => {\n    utils.removeRangeElement(editor);\n    deleteFragment(direction);\n  };\n\n  editor.deleteForward = (unit) => {\n    if (!editor.selection) return;\n\n    normalizeList();\n\n    const li = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n    const td = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    const twWrapper = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return utils.isTextWrapper(n);\n      },\n    });\n\n    const isInLi = li && (!td || li[1].length > td[1].length);\n\n    if (\n      twWrapper &&\n      Editor.string(editor, twWrapper[1], { voids: true }) === \"\"\n    ) {\n      Transforms.removeNodes(editor, { at: twWrapper[1] });\n      return;\n    }\n\n    // 如果光标处于列表里\n    if (isInLi && li && Editor.string(editor, li[1], { voids: true }) === \"\") {\n      Transforms.removeNodes(editor, { at: li[1] });\n      return;\n    }\n\n    const afterPos = Editor.after(editor, editor.selection.anchor);\n    const afterTd =\n      afterPos &&\n      Editor.above(editor, {\n        at: afterPos,\n        mode: \"lowest\",\n        match(n) {\n          return TableLogic.isTd(n);\n        },\n      });\n    if (td && afterTd && !Path.equals(td[1], afterTd[1])) return;\n\n    deleteForward(unit);\n  };\n\n  editor.deleteBackward = (unit) => {\n    if (!editor.selection) return;\n\n    const isCode = Editor.above(editor, {\n      at: Editor.before(editor, editor.selection),\n      match(n) {\n        return Element.isElement(n) && n.type === CET.CODE;\n      },\n    });\n    if (isCode) {\n      Transforms.removeNodes(editor, {\n        at: isCode[1],\n      });\n      return;\n    }\n\n    normalizeList();\n\n    const todoList = getTodoList();\n    if (todoList) {\n      if (Editor.isStart(editor, editor.selection.anchor, todoList[1])) {\n        Transforms.removeNodes(editor, { at: todoList[1] });\n        return;\n      }\n      deleteBackward(unit);\n      return;\n    }\n\n    const li = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n    const td = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    const twWrapper = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return utils.isTextWrapper(n);\n      },\n    });\n\n    const isInLi = li && (!td || li[1].length > td[1].length);\n\n    if (\n      twWrapper &&\n      Editor.string(editor, twWrapper[1], { voids: true }) === \"\"\n    ) {\n      Transforms.removeNodes(editor, { at: twWrapper[1] });\n      return;\n    }\n\n    const beforePos = Editor.before(editor, editor.selection.anchor);\n\n    // 如果光标处于列表里\n    if (isInLi && li && Editor.string(editor, li[1], { voids: true }) === \"\") {\n      Transforms.removeNodes(editor, { at: li[1] });\n      return;\n    }\n\n    // 如果执行动作时所处的td和即将触及到的td不是同一个td，那么阻止\n    const preTd = Editor.above(editor, {\n      at: beforePos,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (preTd && td && !Path.equals(preTd[1], td[1])) return;\n\n    deleteBackward(unit);\n  };\n\n  editor.insertText = (e) => {\n    if (getTodoList()) {\n      insertText(e);\n      return;\n    }\n    if (editor.selection && Range.isExpanded(editor.selection)) {\n      utils.removeRangeElement(editor);\n    }\n    insertText(e);\n  };\n\n  // 在本编辑器复制的时候触发\n  // dataTransfer 说明：https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransfer\n  editor.getFragment = () => {\n    setCopyedCells(null);\n    setCopyedMaxRowAndCol({ copyedAreaHeight: 0, copyedAreaWidth: 0 });\n    setCopyedContent(getFragment());\n    // console.log(\"getFragment\", getFragment());\n    // return [\n    //   {\n    //     type: CET.DIV,\n    //     children: [{ text: \"chenyu paste text\" }],\n    //   },\n    // ];\n    return getFragment();\n  };\n\n  // 在粘贴的时候触发\n  editor.insertFragment = (fragment) => {\n    utils.removeRangeElement(editor);\n    Transforms.insertNodes(editor, fragment);\n  };\n\n  // 粘贴的时候首先触发的方法，在这里可以将传入的内容进行个性化处理，然后生成新的dataTransfer传递给slate\n  editor.insertData = (e) => {\n    // console.log(\"insertdata\");\n    // 解码application/x-slate-fragment内容\n    // console.log(\n    //   utils.decodeContentToSlateData(e.getData(\"application/x-slate-fragment\"))\n    // );\n    // newTransfer.setData(\"text/plain\", \"plan text\");\n    const tds = getCopyedCells();\n    if (tds) {\n      const [table] = Editor.nodes(editor, {\n        at: tds[0][1],\n        mode: \"lowest\",\n        match(n) {\n          return TableLogic.isTable(n);\n        },\n      });\n      if (table) {\n        const newTransfer = new DataTransfer();\n        newTransfer.setData(\n          \"application/x-slate-fragment\",\n          // 编码内容\n          utils.encodeSlateContent([table[0] as Descendant])\n        );\n        insertData(newTransfer);\n        return;\n      }\n    } else if (e.types.includes(\"application/x-slate-fragment\")) {\n      insertData(e);\n    } else if (e.types.includes(\"text/plain\")) {\n      const newTransfer = new DataTransfer();\n      const content = htmlToSlate(e.getData(\"text/plain\"));\n      newTransfer.setData(\n        \"application/x-slate-fragment\",\n        // 编码内容\n        utils.encodeSlateContent(content)\n      );\n      insertData(newTransfer);\n    } else if (e.types.includes(\"Files\")) {\n      const files = e.files;\n      insertImg(editor, files);\n      insertFile(editor, files);\n    }\n  };\n\n  const normalizeList = _.debounce(() => {\n    const afterList = Editor.next(editor, {\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    if (afterList) editor.normalizeNode(afterList);\n    const beforeList = Editor.previous(editor, {\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    if (beforeList) editor.normalizeNode(beforeList);\n  }, 0);\n\n  editor.isInline = (node) => {\n    if ([CET.IMG, CET.FILE, CET.LINK].includes(node.type)) {\n      return true;\n    }\n    return isInline(node);\n  };\n  editor.isVoid = (node) => {\n    if ([CET.IMG, CET.FILE, CET.CODE].includes(node.type)) {\n      return true;\n    }\n    return isVoid(node);\n  };\n\n  const normalizeEditor = (nodeEntry: NodeEntry) => {\n    const [node, path] = nodeEntry;\n\n    if (Element.isElement(node) && node.type === CET.CODE) {\n      if (Editor.next(editor, { at: path }) == null) {\n        Transforms.insertNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"\" }],\n          },\n          {\n            at: Path.next(path),\n          }\n        );\n        return;\n      }\n    }\n\n    // 如果没有子元素，那么强行添加一个\n    if (editor.children.length === 0) {\n      Transforms.insertNodes(editor, {\n        type: CET.DIV,\n        children: [{ text: \"\" }],\n      });\n      return;\n    }\n\n    // 如果一个块级元素出现在textWrapper里，那么直接删除\n    if (Element.isElement(node) && Editor.isBlock(editor, node)) {\n      const [parent] = utils.getParent(editor, path);\n      if (utils.isTextWrapper(parent)) {\n        Transforms.removeNodes(editor, { at: path });\n        return;\n      }\n    }\n\n    // inline元素和void元素的前后都必须有文本节点\n    if (Element.isElement(node) && InLineTypes.includes(node.type)) {\n      const prePath = utils.getPath(path, \"pre\");\n      const [preNode] = utils.getNodeByPath(editor, prePath);\n      if (!Text.isText(preNode)) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: prePath });\n        return;\n      }\n\n      const nextPath = utils.getPath(path, \"next\");\n      const [nextNode] = utils.getNodeByPath(editor, nextPath);\n      if (!Text.isText(nextNode)) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: nextPath });\n        return;\n      }\n    }\n\n    if (Element.isElement(node) && node.type === CET.LINK) {\n      if (Editor.string(editor, path, { voids: true }) === \"\") {\n        Transforms.removeNodes(editor, { at: path });\n        return;\n      }\n    }\n\n    if (TableLogic.normalizeTable(editor, nodeEntry)) return;\n    if (ListLogic.normalizeList(editor, nodeEntry)) return;\n\n    normalizeNode(nodeEntry);\n  };\n\n  editor.normalizeNode = normalizeEditor;\n\n  return editor;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./components/RichEditor/RichEditor\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n"],"sourceRoot":""}