{"version":3,"sources":["components/RichEditor/common/Defines.ts","components/RichEditor/common/utils.ts","components/RichEditor/common/globalStore.ts","components/RichEditor/comps/Td.tsx","components/RichEditor/comps/Table.tsx","components/RichEditor/comps/ListComp.ts","components/RichEditor/comps/TodoListComp.tsx","components/RichEditor/comps/TooBar/common/StaticButton.tsx","components/RichEditor/comps/TooBar/funcButtons/CleanFormatButton.tsx","components/RichEditor/comps/TooBar/common/config.ts","components/RichEditor/comps/TooBar/funcButtons/CopyFormatButton.tsx","components/RichEditor/comps/TooBar/common/ValueSelector.tsx","components/RichEditor/comps/TooBar/funcButtons/TextAlignButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontSizeButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontTypeButton.tsx","components/RichEditor/comps/TooBar/common/ColorPickerCore.tsx","components/RichEditor/comps/TooBar/common/ColorPicker.tsx","components/RichEditor/comps/TooBar/funcButtons/FontColorButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontBGColorButton.tsx","components/RichEditor/comps/TooBar/common/MarkButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontWeightButton.tsx","components/RichEditor/comps/TooBar/funcButtons/FontStyleButton.tsx","components/RichEditor/comps/TooBar/funcButtons/UnderLineButton.tsx","components/RichEditor/comps/TooBar/funcButtons/LineThroughButton.tsx","components/RichEditor/comps/TooBar/common/ReactButton.tsx","components/RichEditor/comps/TooBar/funcButtons/ToDoListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/OrderListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/NormalListButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SetLinkButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertImgButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertFileButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/CopyTableButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteColumnButton.tsx","components/RichEditor/comps/TooBar/funcButtons/DeleteRowButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTextAfterVoid.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertTextBeforeVoid.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertColumnBeforeCell.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertColumnAfterCell.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertRowBeforeButton.tsx","components/RichEditor/comps/TooBar/funcButtons/InsertRowAfterButton.tsx","components/RichEditor/comps/TooBar/funcButtons/MergeCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SplitCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/ClearCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/SelectCellButton.tsx","components/RichEditor/comps/TooBar/funcButtons/TableAutoWidth.tsx","externalComps/Code/button.tsx","components/RichEditor/comps/TooBar/ToolBar.tsx","components/RichEditor/common/htmlToSlate.ts","components/RichEditor/plugins/WithCyWrap.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/HandleKeyDownEvent.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleSelectedTd.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleRangeExpand.ts","components/RichEditor/EventHandler/HandleKeyDownEvent/handleRangeCollapsed.ts","components/RichEditor/comps/ImgComp.tsx","components/RichEditor/comps/FileComp.tsx","components/RichEditor/comps/LinkComp.tsx","components/RichEditor/comps/CheckBox.tsx","components/RichEditor/RenderElements/MyElements.tsx","components/RichEditor/RenderElements/RenderLeaf.tsx","components/RichEditor/comps/FixLayoutBox.tsx","externalComps/Code/rule.ts","externalComps/Code/source.tsx","externalComps/AtPerson/ChoosePersonComp.tsx","externalComps/Code/index.ts","externalComps/AtPerson/rule.tsx","externalComps/AtPerson/index.ts","externalComps/AtPerson/source.tsx","components/RichEditor/RichEditor.tsx","index.tsx"],"names":["CET","Marks","ToolBars","TextWrappers","DIV","H1","H2","H3","H4","P","InLineTypes","IMG","LINK","CHECKBOX","CypressFlagValues","TextAlignEnum","CypressTestFlag","FixlayoutBoxId","EditorContainerClassName","utils","getTextAlignStyle","textAlign","LEFT","RIGHT","X_CENTER","Y_CENTER","verticalAlign","XY_CENTER","getDataTransfer","nodes","newTransfer","DataTransfer","setData","encodeSlateContent","getCursorPos","editor","selection","Range","isExpanded","ReactEditor","toDOMRange","startContainer","startOffset","cursorOffsetX","calcTextWidth","textContent","slice","parentOffset","calcOffsetDistanceFromAToB","parentNode","toDOMNode","parentElement","offsetLeft","offsetTop","insertCypressId","props","key","text","span","document","createElement","innerHTML","replace","style","opacity","body","appendChild","width","offsetWidth","remove","A","B","contains","nowNode","leftDistance","topDistance","scrollLeft","offsetParent","findParent","startDom","targetDom","parent","findParentByClassName","className","isElementEmpty","el","Array","from","Node","descendants","some","childEntry","node","path","Text","isText","length","Editor","isVoid","isInline","string","voids","removeAllRange","window","getSelection","removeAllRanges","data","btoa","encodeURIComponent","JSON","stringify","decodeContentToSlateData","parse","decodeURIComponent","atob","filterCopyedContent","content","array","forEach","c","TableLogic","isTable","isTd","push","children","removeRangeElement","isCollapsed","originSelection","editorRange","range","inte","intersection","equals","withoutNormalizing","reverse","childP","Transforms","removeNodes","at","hanging","mode","ranges","s1","start","s2","end","isBefore","a","b","Point","compare","isEqual","match","n","table","t1","t2","beforeT1","before","afterT2","after","splitRange","r","anchor","focus","above","tableRange","tInte","tds","td","tdRange","setSelection","delete","select","isTextWrapper","Element","isElement","includes","type","getFirstAboveElementType","textWrapper","getParent","element","isEditor","EDITOR","getPath","basePath","t","getNodeByPath","error","this","hasNotSelectedAnyTd","getFirstSelectedTd","isInTable","globalStore","selectedTds","Set","editingTdsPath","preSelectedTdPos","row","col","copyedCellsPath","copyedAreaHeight","copyedAreaWidth","copyedCells","copyedContent","setCopyedCells","value","getCopyedCells","setCopyedMaxRowAndCol","getStrPathSetOfSelectedTds","filterPath","setStrPathSetOfSelectedTds","paths","p","split","map","o","hasPath","getEditingTdsPath","setEditingTdsPath","editingTdPath","tdMinWidth","tdMinHeight","TD","attributes","useSlateStatic","readOnly","useReadOnly","useEffect","findPath","height","setNodes","pathStr","join","editingTds","nowSelected","selected","tdIsEditing","add","colSpan","rowSpan","tdAutoWidth","minWidth","maxWidth","color","Color","backgroundColor","BGColor","fontSize","FontSize","fontWeight","BOLD","fontStyle","ITALIC","textDecoration","Underline","LineThrough","onClick","onDoubleClick","e","nativeEvent","target","ref","current","TdLogic","deselectAllTd","deselect","position","zIndex","right","top","cursor","userSelect","contentEditable","onMouseDown","x","clientX","cell","i","ele","tagName","cellNode","toSlateNode","cellPath","tbody","TBODY","tdMap","getTdMap","tdOriginRow","tdOriginCol","targetCol","j","originCol","originRow","cells","tdInMap","tdDom","initX","mouseMoveHandler","dx","addEventListener","mouseUpHandler","querySelectorAll","tr","rowIndex","cellIndex","parseInt","tdNode","removeEventListener","left","bottom","y","clientY","targetRow","initY","offsetHeight","preventDefault","dy","minHeight","maxHeight","trs","startPoins","fill","colStart","findIndex","colEnd","rowStart","rowEnd","fillTd","getSelectedTdInTdMap","selectedTd","Map","helper","selectedTdMap","has","set","Math","min","max","selectedTdsPath","getSelectedTdsPath","unsetNodes","findTargetTd","direct","selectAll","startTd","rightX","targetTd","nextTdPath","nextTd","setTdIsEditing","tdPath","clearTd","getSelectedTds","emptyTd","_","assign","insertNodes","cloneDeep","Table","useRef","isBeginSelectTd","mouseDownStartPoint","lastSelectedPaths","preMouseOnTdPath","prePath","useContext","EditorContext","savedMarks","setSavedMarks","reCalcTdWidth","useCallback","selfDom","tableDom","nowWrapperWidth","preWrapperWidth","wrapperWidthWhenCreated","tableNode","tablePath","ro","ResizeObserver","entries","requestAnimationFrame","isArray","container","querySelector","observe","unobserve","Path","resetSelectedTds","selectTd","throttle","pa","pb","commonNode","common","pbTd","TR","tda","tdb","nowTdsPath","keys","nowSelectedTds","preSelectedTds","nowSelectedTdsPathSet","preSelectedTdsPathSet","deselectedPath","filter","newSelectedPath","display","tableLayout","wordBreak","overflowX","overflowY","borderCollapse","slateNode","slateNodePath","find","mousemoveFunc","editorDom","abs","point","console","mouseupFunc","onMouseUp","copyMarks","hasSelectTd","getSelectedTdsSize","Object","values","getEditingOrSelectedTdBelongTable","model","TABLE","item","fatherIndex","index","isSelectedTd","fPath","aPath","rel","isInTd","normalizeTable","nodeEntry","child","shouldEmpty","wrapNodes","tabEvent","getEditingTd","shiftTabEvent","deleteRow","deleteVArea","Infinity","removePath","unshift","leftCol","moveNodes","to","deleteColumn","deleteHArea","sort","arow","brow","acol","bcol","insertColumn","count","nowTd","nowTr","insertCol","getInsertCells","nowTdRow","nowTdCol","size","tdInTdMap","Number","isFinite","downTd","downTdOriginPos","insertRow","insertNode","getInsertRow","tdCount","splitTd","td1","td2","belongTr","tdCol","tdRow","tdColSpan","tdRowSpan","leftSumColSpan","findInsertCol","sumColSpan","isInNowTr","insertTdCount","mergeTd","isOnlyOne","tbodyPath","firstTd","maxColSpan","maxRowSpan","newTdPath","toBeDeletedTdsPath","toBeAddedChildren","firstTdClone","merge","toBeDeleted","deleteTable","copyTable","copyedTable","next","pathArr","tdArr","arr","tdsPath","copyCells","areaWidth","areaHeight","isSelectTableAllTd","pasteCells","startPoint","message","waitToDeleteTdsPath","uniqWith","minRow","reduce","nowCopyedCellsRow","insertTds","copyedTd","childLength","ListLogic","toggleList","twParent","li","isListItem","liParent","isSameTypeToggle","isChangeListType","isSetToList","unwrapNodes","parents","selectedListItems","LIST_ITEM","isOrderList","isInLi","isInList","NUMBER_LIST","NORMAL_LIST","normalizeList","nextPath","texts","liftNodes","colors","onlyColor","pop","preNode","mergeNodes","nextNode","first","onlyChild","childCount","universal","indentLi","liEntry","liftLi","liPath","pp","parentParent","TodoListComp","renderChild","marginRight","checked","onChange","disabled","attrs","childrenWrapper","renderFather","ToDoListLogic","isTodoList","TODOLIST","isInToDoList","getToDoList","normalizeToDoList","handleKeyDown","shiftKey","StaticButton","title","mouseEnterDelay","mouseLeaveDelay","getPopupContainer","mousedownFunc","CleanFormatButton","mark","removeMark","all","cleanFormat","cypressId","CLEAN_FORMAT","Icon","component","viewBox","version","xmlns","d","ToolBarConfig","isMounted","CopyFormatButton","useSlate","useState","setDisabled","isDisabled","debounce","hasSelectSingleTd","isSelectionExpanded","useMemo","isNotOnlyOne","marks","warn","copyMark","COPY_FORMAT","FormatPainterOutlined","ValueSelector","visible","setVisible","setValue","toolDom","getValue","onMouseLeave","placeholder","bordered","open","dropdownClassName","triggerNode","onSelect","afterSelect","dropdownMatchSelectWidth","options","Option","String","optionLabelRender","TextAlignButton","TextAlign","SET_FONT_ALIGN","FontSizeButton","getMarkValue","SET_FONT_SIZE","addMark","FontTypeButton","setTextWrapper","todos","todo","toUpperCase","WRAP_FONT_COMP","ColorPickerCore","hex","setColor","padding","justifyContent","flexDirection","icon","DeleteOutlined","ColorPicker","_getColor","getColor","getComputedStyle","placement","overlayStyle","overlay","trigger","FontColorButton","FontColorsOutlined","FontBGColorButton","BgColorsOutlined","MarkButton","setType","getType","isMarkActive","toggleMark","FontWeightButton","SET_BOLD","BoldOutlined","FontStyleButton","SET_ITALIC","ItalicOutlined","UnderLineButton","SET_UNDERLINE","UnderlineOutlined","LineThroughButton","SET_LINETHROUGH","StrikethroughOutlined","ReactButton","disabledCondition","_isDisabled","buttonRef","ToDoListButton","textWrappers","insertText","insertToDoList","TODO_LIST","CheckSquareOutlined","OrderListButton","ORDER_LIST","OrderedListOutlined","NormalListButton","NORMALIZE_LIST","UnorderedListOutlined","SetLinkButton","url","setLink","LinkOutlined","acceptImgTypes","maxSize","uploadImg","file","formData","FormData","append","axios","method","headers","res","filename","Promise","setTimeout","URL","createObjectURL","insertImg","files","legalFiles","illegalFiles","valideImg","name","id","callback","collapse","edge","move","insertImgToEditor","Date","getTime","InsertImgButton","fileRef","click","accept","multiple","hidden","PictureOutlined","acceptFileTypes","uploadFile","insertFile","valideFile","fileName","FILE","insertFileToEditor","InsertFileButton","PaperClipOutlined","InsertTableButton","counts","setCounts","tdMouseEnter","addTable","cellCount","rowCount","isInteger","tw","twDom","tableWrapperWidth","tPath","border","onMouseEnter","TableOutlined","DeleteTableButton","CopyTableButton","CopyOutlined","DeleteColumnButton","DeleteColumnOutlined","DeleteRowButton","DeleteRowOutlined","InsertTextAfterVoid","isBlock","topBlock","insertDivAfterTable","CODE","VerticalAlignBottomOutlined","InsertTextBeforeVoid","insertDivBeforeTable","VerticalAlignTopOutlined","InsertColumnBeforeCell","InsertRowLeftOutlined","InsertColumnAfterCell","InsertRowRightOutlined","InsertRowBeforeButton","InsertRowAboveOutlined","InsertRowAfterButton","InsertRowBelowOutlined","MergeCellButton","MergeCellsOutlined","SplitCellButton","SplitCellsOutlined","ClearCellButton","ClearOutlined","SelectCellButton","SELECTE_TD","SelectOutlined","TableAutoWidthButton","isAutoWidth","ColumnWidthOutlined","Button","defaultMode","CodeOutlined","ReadOnlyButton","setReadOnly","EyeOutlined","EyeInvisibleOutlined","ToolBar","diverComp","ButtonMapper","obj","InsertCodeButton","divide","marginBottom","align","buttons","button","deserialize","nodeType","nodeStyle","cssText","changeKey","trim","$0","$1","$2","$3","changeValue","childNodes","nodeName","jsx","every","Block","getAttribute","htmlToSlate","html","DOMParser","parseFromString","withCyWrap","deleteForward","deleteBackward","getFragment","insertFragment","insertData","insertBreak","normalizeNode","apply","deleteFragment","undo","isImg","isFile","properties","newProperties","oldProperties","HistoryEditor","withoutSaving","myInsertBreak","todoList","unit","afterPos","isGoingToOtherTd","isEnd","isInTextWrapper","func","beforePos","preTd","isLiEmpty","isOnlyChild","isStart","isInTodoList","fragment","copyedCellsContent","isCopyedSelectTdContent","isGoingToPastInTable","types","getData","afterList","beforeList","previous","editorLastNode","preLastNode","HandleKeyDownEvent","ctrlKey","handleSelectedTd","handleRangeExpand","elementType","getTable","isInFirstRow","isDescendant","prePos","isInLastText","isInLastRow","nextPos","handleRangeCollapsed","ImgComp","useSelected","showTool","state","setState","viewerIns","registeImgViewer","Viewer","mask","alignItems","imgFuncs","BorderOuterOutlined","BorderlessTableOutlined","FullscreenOutlined","imgNode","v","destroy","show","margin","boxShadow","thisDom","bindEvnet","enable","isReadOnly","topRight","bottomRight","bottomLeft","topLeft","onResizeStop","direction","newWidth","newHeight","gutter","alt","src","FileComp","DownloadOutlined","download","href","LinkComp","setContent","setUrl","formItemStyle","editPanel","flex","Item","label","DisconnectOutlined","justify","link","linkPath","innerText","initEditPanel","CheckBoxComp","MyElements","ExternalComp","comps","comp","Comp","otherAttr","MyLeaf","leaf","boxSizing","FixLayoutBox","finalLeft","setFinalLeft","useLayoutEffect","boxDom","boxWidth","editorContainerDom","editorContainerWidth","childrenComp","require","runId","lans","exportObj","rule","code","defaultCode","setCode","codeIns","saveContent","codeConfig","theme","lineNumbers","editorDidMount","setSize","onEditorChange","paddingTop","onResize","defaultValue","showArrow","lan","onBeforeChange","datas","Random","cname","moreInfo","org","mountPopComp","fetchUsers","searchContent","taskId","reject","user","indexOf","matchRule","getUsers","then","users","catch","ChoosePersonComp","initPerson","personsList","setPersonsList","nowPersons","setNowPersons","isFetching","setIsFetching","containerDom","divDom","selectCompProps","allowClear","showSearch","filterOption","optionLabelProp","tagRender","marginTop","ellipsis","notFoundContent","marginLeft","indicator","LoadingOutlined","spin","onClear","onSearch","ids","uniqBy","person","dropdownStyle","MAX_SAFE_INTEGER","renderPersonList","flexWrap","avatarSrc","UserOutlined","lineHeight","strong","optionRenderComp","paddingBottom","bodyStyle","float","AT_PERSON_TEXT","openModal","modalX","modalY","setFixLayoutBox","persons","handlePressEsc","handleMouseDown","isMouseDownOutSide","createContext","EditorComp","plugins","editorDomRef","fixBox","setFixBox","reduceRight","createEditor","loadPlugins","plugin","withHistory","withReact","localStorage","getItem","preUndos","preSelection","getEditor","renderElement","editorRef","renderLeaf","MyToolBar","toolbars","Provider","screen","availHeight","autoFocus","onCompositionStart","onDOMBeforeInput","inputType","onKeyDown","onDragStart","onBlur","onFocus","hasTextAlign","CyReactEditor","codeComp","atPerson","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b1a0b51.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { BaseEditor } from \"slate\";\nimport { HistoryEditor } from \"slate-history\";\nimport { Editable, ReactEditor, RenderElementProps, Slate } from \"slate-react\";\n\ndeclare module \"slate\" {\n  interface CustomTypes {\n    Editor: EditorType;\n    Element: CustomElement;\n    Text: CustomText;\n    Node: CustomElement | EditorType | CustomText;\n  }\n}\n\nexport enum CET {\n  EDITOR = \"editor\",\n  NUMBER_LIST = \"ol\",\n  NORMAL_LIST = \"ul\",\n  LIST_ITEM = \"li\",\n  DIV = \"div\",\n  Block = \"block\",\n  P = \"p\",\n  H1 = \"h1\",\n  H2 = \"h2\",\n  H3 = \"h3\",\n  H4 = \"h4\",\n  IMG = \"img\",\n  LINK = \"link\",\n  TABLE = \"table\",\n  TBODY = \"tbody\",\n  TR = \"tr\",\n  TD = \"td\",\n  TODOLIST = \"todo\",\n  CHECKBOX = \"checkbox\",\n  CODE = \"code\",\n  FILE = \"file\",\n}\n\nexport const TextWrappers = [CET.DIV, CET.H1, CET.H2, CET.H3, CET.H4, CET.P];\nexport const InLineTypes = [CET.IMG, CET.LINK, CET.CHECKBOX];\n\nexport enum Marks {\n  BOLD = \"bold\",\n  ITALIC = \"italic\",\n  FontSize = \"fontSize\",\n  Underline = \"underline\",\n  LineThrough = \"line-through\",\n  Color = \"color\",\n  BGColor = \"backgroundColor\",\n  TextAlign = \"textAlign\",\n}\n\nexport type CustomElement = {\n  type: CET;\n  [key: string]: any;\n  url?: string; // 图片，文件，Link组件的参数\n  fileName?: string; // 文件名\n  id?: number; // 唯一标识，表示图片或者文件正在上传中\n  border?: boolean; // img边框\n  colSpan?: number; // td属性\n  rowSpan?: number; // td 属性\n  tdAutoWidth?: boolean; // 是否自动宽度\n  width?: number; // td样式属性\n  height?: number; // td样式属性\n  selected?: boolean; // td是否被选中\n  childrenWrapper?: \"div\" | \"h1\" | \"h2\" | \"h3\" | \"h4\"; // todo 里包裹文字的容器\n  // canTdEdit?: boolean; // td是否可以编辑\n  tdIsEditing?: boolean; // 光标是否处于该td上\n  checked?: boolean; // todoList属性\n  openPopModal?: boolean; // 是否打开弹窗\n  wrapperWidthWhenCreated?: number; // table创建时所在的容器宽度，用于动态计算td的宽度\n  defaultMode?: string; // code 专属\n  defaultCode?: string; // code 专属\n  textAlign?: TextAlignEnum; // textWrapper和todoListComp的属性\n  tdMap?: any; // 用于计算tdMap\n  children: (CustomText | CustomElement)[];\n};\nexport type CustomText = { text: string; [key: string]: any } & Partial<{\n  [key in Marks]: any;\n}>;\nexport type EditorType = BaseEditor &\n  ReactEditor &\n  HistoryEditor & {\n    setFixLayoutBox?(\n      attr: {\n        visible: boolean;\n        left?: number;\n        top?: number;\n      },\n      children?: ReactElement<any>\n    ): void; // 设置相对于视口定位的悬浮窗的隐藏和显示内容\n  };\n\nexport type StateShape = Parameters<typeof Slate>[0][\"value\"];\nexport enum ToolBars {\n  FontTypeButton = \"FontTypeButton\",\n  FontSizeButton = \"FontSizeButton\",\n  TextAlignButton = \"TextAlignButton\",\n  CopyFormatButton = \"CopyFormatButton\",\n  CleanFormatButton = \"CleanFormatButton\",\n  FontColorButton = \"FontColorButton\",\n  FontBGColorButton = \"FontBGColorButton\",\n  FontWeightButton = \"FontWeightButton\",\n  FontStyleButton = \"FontStyleButton\",\n  UnderLineButton = \"UnderLineButton\",\n  LineThroughButton = \"LineThroughButton\",\n  ToDoListButton = \"ToDoListButton\",\n  OrderListButton = \"OrderListButton\",\n  NormalListButton = \"NormalListButton\",\n  InsertTextAfterVoid = \"InsertTextAfterVoid\",\n  InsertTextBeforeVoid = \"InsertTextBeforeVoid\",\n  SetLinkButton = \"SetLinkButton\",\n  InsertImgButton = \"InsertImgButton\",\n  InsertFileButton = \"InsertFileButton\",\n  InsertTableButton = \"InsertTableButton\",\n  TableAutoWidthButton = \"TableAutoWidthButton\",\n  DeleteTableButton = \"DeleteTableButton\",\n  CopyTableButton = \"CopyTableButton\",\n  SelectCellButton = \"SelectCellButton\",\n  DeleteColumnButton = \"DeleteColumnButton\",\n  DeleteRowButton = \"DeleteRowButton\",\n  InsertColumnBeforeCell = \"InsertColumnBeforeCell\",\n  InsertColumnAfterCell = \"InsertColumnAfterCell\",\n  InsertRowBeforeButton = \"InsertRowBeforeButton\",\n  InsertRowAfterButton = \"InsertRowAfterButton\",\n  MergeCellButton = \"MergeCellButton\",\n  SplitCellButton = \"SplitCellButton\",\n  ClearCellButton = \"ClearCellButton\",\n  ReadOnlyButton = \"ReadOnlyButton\",\n  InsertCodeButton = \"InsertCodeButton\",\n}\nexport type EditorCompPropShape = {\n  /**\n   * 初次加载的内容\n   */\n  content?: string;\n  /**\n   * 返回editor的实例\n   */\n  getEditor?: (editor: EditorType) => void;\n  /**\n   * 内部加载插件用\n   */\n  plugins?: {\n    rule: (editor: EditorType) => EditorType;\n    comp: React.FC<RenderElementProps>;\n    name: string;\n    button?: React.FC; // 工具条上的button\n  }[];\n  /**\n   * 工具条上显示的button\n   */\n  toolbars?: (ToolBars | \"divide\")[];\n};\nexport type EditorCompShape = (\n  props: EditorCompPropShape\n) => React.ReactElement;\nexport type EditableProps = Parameters<typeof Editable>[0];\n\nexport const CypressTestFlag = \"data-cypress-id\";\nexport enum CypressFlagValues {\n  ORDER_LIST = \"order_list\",\n  NORMALIZE_LIST = \"unorder_list\",\n  TODO_LIST = \"todo_list\",\n  SELECTE_TD = \"select_td\",\n  AT_PERSON_MODAL = \"atPersonModal\",\n  AT_PERSON_TEXT = \"atPersonText\",\n  WRAP_FONT_COMP = \"wrapFontComp\",\n  SET_FONT_SIZE = \"setFontSize\",\n  SET_FONT_ALIGN = \"setFontAlign\",\n  SET_BOLD = \"setBold\",\n  SET_ITALIC = \"setItalic\",\n  SET_UNDERLINE = \"setUnderline\",\n  SET_LINETHROUGH = \"setLinethrough\",\n  COPY_FORMAT = \"copyFormat\",\n  CLEAN_FORMAT = \"cleanFormat\",\n}\n\nexport enum TextAlignEnum {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  X_CENTER = \"xCenter\",\n  Y_CENTER = \"yCenter\", // 垂直居中\n  XY_CENTER = \"xyCenter\", // 水平垂直居中\n}\n\nexport const FixlayoutBoxId = \"CyEditor_FixlayoutBox\";\n\nexport const EditorContainerClassName = \"cyEditor__content\";\n","/* eslint-disable eqeqeq */\nimport {\n  Element,\n  Editor,\n  Path,\n  Text,\n  Node,\n  Transforms,\n  Range,\n  NodeEntry,\n  Point,\n} from \"slate\";\nimport {\n  TextWrappers,\n  EditorType,\n  CET,\n  CypressTestFlag,\n  TextAlignEnum,\n} from \"./Defines\";\nimport { TableLogic } from \"../comps/Table\";\nimport { jsx } from \"slate-hyperscript\";\nimport { ReactEditor } from \"slate-react\";\nimport { CSSProperties } from \"react\";\n\nconst deserialize: any = (el: any) => {\n  // text node\n  if (el.nodeType === 3) {\n    return el.textContent;\n    // not element node\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{ text: \"\" }];\n  }\n\n  switch (el.nodeName) {\n    case \"BODY\":\n      return jsx(\"fragment\", {}, children);\n    case \"BR\":\n      return \"\\n\";\n    case \"BLOCKQUOTE\":\n      return jsx(\"element\", { type: \"quote\" }, children);\n    case \"P\":\n    case \"DIV\":\n      return jsx(\"element\", { type: CET.DIV }, children);\n    case \"A\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.LINK,\n          url: el.getAttribute(\"href\"),\n          content: el.innserHTML,\n        },\n        children\n      );\n    case \"IMG\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.IMG,\n          url: el.getAttribute(\"src\"),\n        },\n        children\n      );\n    case \"TABLE\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TABLE,\n        },\n        children\n      );\n    case \"TBODY\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TBODY,\n        },\n        children\n      );\n    case \"TR\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TR,\n        },\n        children\n      );\n    case \"TD\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TD,\n          colSpan: el.getAttribute(\"colSpan\"),\n        },\n        children\n      );\n    default:\n      return el.textContent;\n  }\n};\n\nexport const utils = {\n  getTextAlignStyle(\n    textAlign: TextAlignEnum | null | undefined\n  ): CSSProperties {\n    if (!textAlign) return {};\n    switch (textAlign) {\n      case TextAlignEnum.LEFT:\n        return {\n          textAlign: \"left\",\n        };\n      case TextAlignEnum.RIGHT:\n        return {\n          textAlign: \"right\",\n        };\n      case TextAlignEnum.X_CENTER:\n        return {\n          textAlign: \"center\",\n        };\n      case TextAlignEnum.Y_CENTER:\n        return {\n          verticalAlign: \"middle\",\n        };\n      case TextAlignEnum.XY_CENTER:\n        return {\n          verticalAlign: \"middle\",\n          textAlign: \"center\",\n        };\n      default:\n        return {};\n    }\n  },\n  getDataTransfer(nodes: Node[]) {\n    const newTransfer = new DataTransfer();\n    newTransfer.setData(\n      \"application/x-slate-fragment\",\n      // 编码内容\n      utils.encodeSlateContent([])\n    );\n    return newTransfer;\n  },\n  /**\n   * 获得光标相对文档区域原点的相对位置\n   * @param editor\n   * @returns\n   */\n  getCursorPos(editor: EditorType) {\n    if (!editor.selection || Range.isExpanded(editor.selection))\n      return [-1, -1];\n\n    const { startContainer, startOffset } = ReactEditor.toDOMRange(\n      editor,\n      editor.selection\n    );\n    const cursorOffsetX = utils.calcTextWidth(\n      startContainer.textContent?.slice(0, startOffset)\n    );\n    const parentOffset = utils.calcOffsetDistanceFromAToB(\n      startContainer.parentNode as HTMLElement,\n      ReactEditor.toDOMNode(editor, editor).parentElement as HTMLElement\n    );\n    const modalX = parentOffset.offsetLeft + cursorOffsetX,\n      modalY = parentOffset.offsetTop;\n\n    return [modalX, modalY];\n  },\n  /**\n   * 为组件注入cypress flag，用于cypress测试\n   * @param props\n   * @param key\n   * @returns\n   */\n  insertCypressId<T extends object>(props: T, key: keyof T) {\n    return props[key] != null\n      ? {\n          [CypressTestFlag]: props[key],\n        }\n      : {};\n  },\n  calcTextWidth(text: any) {\n    if (typeof text !== \"string\") return 0;\n    const span = document.createElement(\"span\");\n    span.innerHTML = text.replace(/ /gi, \"&nbsp;\");\n    span.style.opacity = \"0.01\";\n    document.body.appendChild(span);\n    const width = span.offsetWidth;\n    span.remove();\n    return width;\n  },\n  /**\n   * 计算从A往上直到B的offsetLeft和offsetTop距离，\n   * 其中A是B的子元素\n   * @param A\n   * @param B\n   */\n  calcOffsetDistanceFromAToB(A: HTMLElement, B: HTMLElement) {\n    if (!B?.contains?.(A))\n      return {\n        offsetLeft: -999999,\n        offsetTop: -999999,\n      };\n\n    let nowNode: any = A;\n    let leftDistance = 0,\n      topDistance = 0;\n    do {\n      leftDistance += nowNode.offsetLeft - (nowNode.scrollLeft || 0);\n      topDistance += nowNode.offsetTop;\n      nowNode = nowNode.offsetParent;\n    } while (nowNode != B);\n    return {\n      offsetLeft: leftDistance,\n      offsetTop: topDistance,\n    };\n  },\n  /**\n   * 从startDom开始往上找到与targetDom相同的dom元素，如果没找到，则返回null\n   * @param startDom\n   * @param targetDom\n   * @returns\n   */\n  findParent(\n    startDom: HTMLElement,\n    targetDom: HTMLElement\n  ): HTMLElement | null {\n    let parent = startDom;\n    while (parent != null && parent != targetDom) {\n      parent = parent.offsetParent as HTMLElement;\n    }\n    return parent;\n  },\n  findParentByClassName(\n    startDom: HTMLElement,\n    className: string\n  ): HTMLElement | null {\n    let parent = startDom;\n    while (parent != null && parent.className != className) {\n      parent = parent.parentNode as HTMLElement;\n    }\n    return parent;\n  },\n  /**\n   * 判断包含了void,inline,text元素后，父元素是否依然为空\n   * @param editor\n   * @param el\n   * @returns\n   */\n  isElementEmpty(editor: EditorType, el: NodeEntry) {\n    const isThereHasNoEmptyChild = Array.from(Node.descendants(el[0])).some(\n      (childEntry) => {\n        const [node, path] = childEntry;\n        return (\n          (Text.isText(node) && node.text.length > 0) ||\n          Editor.isVoid(editor, node) ||\n          Editor.isInline(\n            editor,\n            node || Editor.string(editor, path, { voids: true }) !== \"\"\n          )\n        );\n      }\n    );\n    return !isThereHasNoEmptyChild;\n  },\n  removeAllRange() {\n    window.getSelection()?.removeAllRanges();\n  },\n  encodeSlateContent(data: Node[]) {\n    return window?.btoa(encodeURIComponent(JSON.stringify(data)));\n  },\n  decodeContentToSlateData(data: string) {\n    return JSON.parse(decodeURIComponent(window.atob(data)));\n  },\n  /**\n   * 对复制的区域进行转换，主要是防止在表格内复制了表格的内容再粘贴到表格\n   * @param content\n   * @returns\n   */\n  filterCopyedContent(content: Node[]) {\n    const array: Node[] = [];\n    content.forEach((c) => {\n      if (TableLogic.isTable(c)) {\n        Array.from(Node.descendants(c)).forEach((node) => {\n          if (TableLogic.isTd(node[0])) {\n            array.push(...node[0].children);\n          }\n        });\n      } else if (TableLogic.isTd(c)) {\n        array.push(...c.children);\n      } else {\n        array.push(c);\n      }\n    });\n    return array;\n  },\n  /**\n   * 思路：将选中区域按照表格来分开，非表格区域的可以直接用Transforms.delete进行删除，\n   * 而表格区域，需要分情况讨论：\n   *  如果选中区域全覆盖表格，那么直接删除表格\n   *  如果选中区域部分覆盖表格，那么需要按照单元格来删除，（因为多个单元格连在一起删会破坏表格结构）\n   * @param editor\n   * @returns\n   */\n  removeRangeElement(editor: EditorType) {\n    if (!editor.selection || Range.isCollapsed(editor.selection)) return;\n    const originSelection = editor.selection;\n\n    // 判断文档是否全部被选中\n    const editorRange = Editor.range(editor, []);\n    const inte = Range.intersection(editorRange, originSelection);\n    if (inte && Range.equals(inte, editorRange)) {\n      Editor.withoutNormalizing(editor, () => {\n        for (const [, childP] of Node.children(editor, [], {\n          reverse: true,\n        })) {\n          Transforms.removeNodes(editor, {\n            at: childP,\n            hanging: true,\n            voids: true,\n            mode: \"highest\",\n          });\n        }\n      });\n      return;\n    }\n\n    // 根据table的位置来分离Range\n    const splitRange = () => {\n      if (!editor.selection) return;\n      let s1 = Range.start(editor.selection);\n      let s2 = Range.end(editor.selection);\n\n      const tables = Array.from(\n        Editor.nodes(editor, {\n          match(n) {\n            return TableLogic.isTable(n);\n          },\n        })\n      );\n\n      const isBefore = (a: Point, b: Point) => {\n        return Point.compare(a, b) == -1;\n      };\n      const isEqual = (a: Point, b: Point) => {\n        return Point.compare(a, b) == 0;\n      };\n\n      const array = [];\n      for (const table of tables) {\n        const t1 = Editor.start(editor, table[1]);\n        const t2 = Editor.end(editor, table[1]);\n        const beforeT1 = Editor.before(editor, t1) || t1;\n        const afterT2 = Editor.after(editor, t2) || t2;\n\n        if (isBefore(s1, t1)) {\n          if (isBefore(s2, t2)) {\n            array.push([s1, beforeT1], [t1, s2]);\n            s1 = null as any;\n          } else if (isEqual(s2, t2)) {\n            array.push([s1, beforeT1], [t1, t2]);\n            s1 = null as any;\n          } else {\n            // s2>t2\n            array.push([s1, beforeT1], [t1, t2]);\n            s1 = afterT2;\n          }\n        } else if (isEqual(s1, t1)) {\n          if (isBefore(s2, t2)) {\n            array.push([t1, s2]);\n            s1 = null as any;\n          } else if (isEqual(s2, t2)) {\n            array.push([t1, t2]);\n            s1 = null as any;\n          } else {\n            // s2>t2\n            array.push([t1, t2]);\n            s1 = afterT2;\n          }\n        } else {\n          // s1>t1\n          if (isBefore(s2, t2)) {\n            array.push([s1, s2]);\n            s1 = null as any;\n          } else if (isEqual(s2, t2)) {\n            array.push([s1, t2]);\n            s1 = null as any;\n          } else {\n            // s2>t2\n            array.push([s1, t2]);\n            s1 = afterT2;\n          }\n        }\n        if (s1 == null) break;\n      }\n      // 处理完表格后还剩下的区域，如果符合条件，那么直接加入range数组\n      if (s1 != null && isBefore(s1, s2)) {\n        array.push([s1, s2]);\n      }\n      return array;\n    };\n\n    const ranges = splitRange() || [];\n    for (const r of ranges.reverse()) {\n      const range = {\n        anchor: r[0],\n        focus: r[1],\n      };\n      if (Range.isCollapsed(range)) continue;\n      const isTable = Editor.above(editor, {\n        at: range,\n        match(n) {\n          return TableLogic.isTable(n);\n        },\n      });\n      if (isTable) {\n        // 如果表格被全选，那么直接删除\n        const tableRange = Editor.range(editor, isTable[1]);\n        const tInte = Range.intersection(range, tableRange);\n        if (tInte && Range.equals(tInte, tableRange)) {\n          Transforms.removeNodes(editor, { at: isTable[1] });\n          continue;\n        }\n        const tds = Array.from(\n          Editor.nodes(editor, {\n            at: range,\n            match(n) {\n              return TableLogic.isTd(n);\n            },\n          })\n        );\n        for (const td of tds) {\n          const tdRange = Editor.range(editor, td[1]);\n          const inte = Range.intersection(tdRange, range);\n          if (inte && Range.isExpanded(inte)) {\n            // 对于被全选的td，用下面的方法删除不会造成内存泄漏\n            if (Range.equals(inte, tdRange)) {\n              for (const [, childP] of Node.children(editor, td[1], {\n                reverse: true,\n              })) {\n                Transforms.removeNodes(editor, { at: childP });\n              }\n            } else {\n              // 对于非全选的单元格，只好用这种方式删\n              Transforms.setSelection(editor, inte);\n              Transforms.delete(editor, {\n                hanging: true,\n                voids: true,\n              });\n            }\n          }\n        }\n      } else {\n        Transforms.setSelection(editor, range);\n        Transforms.delete(editor, {\n          hanging: true,\n          voids: true,\n        });\n      }\n    }\n\n    Transforms.select(editor, Range.start(originSelection));\n  },\n  isTextWrapper(node: Node) {\n    return Element.isElement(node) && TextWrappers.includes(node.type);\n  },\n  // 获取包裹光标文本位置的li或者td\n  getFirstAboveElementType(editor: EditorType) {\n    if (editor.selection) {\n      const textWrapper = utils.getParent(editor, editor.selection.anchor.path);\n      if (!textWrapper[0]) return null;\n      const element = utils.getParent(editor, textWrapper[1]);\n      if (!element[0]) return null;\n\n      return (\n        (Element.isElement(element[0]) && element[0].type) ||\n        (Editor.isEditor(element[0]) && CET.EDITOR)\n      );\n    }\n  },\n  getPath(path: Path, type: \"pre\" | \"next\" | \"parent\") {\n    const basePath = path.slice(0, path.length - 1);\n    const t = path[path.length - 1];\n    return type == \"parent\"\n      ? basePath\n      : [...basePath, type == \"pre\" ? t - 1 : t + 1];\n  },\n  getNodeByPath(editor: EditorType, path: Path) {\n    try {\n      return Editor.node(editor, path);\n    } catch (error) {\n      return [];\n    }\n  },\n  getParent(editor: EditorType, path: Path) {\n    return this.getNodeByPath(editor, this.getPath(path, \"parent\"));\n  },\n  hasNotSelectedAnyTd(editor: EditorType) {\n    const hasSelectedTd = TableLogic.getFirstSelectedTd(editor);\n    return hasSelectedTd == null && !TableLogic.isInTable(editor);\n  },\n};\n","import { Editor, NodeEntry, Path, Node } from \"slate\";\nimport { EditorType } from \"./Defines\";\n\ntype preSelectedTdPosShape = {\n  row: number;\n  col: number;\n} | null;\n\ntype globalStoreShape = {\n  selectedTds: Set<string>;\n  editingTdsPath: Set<string>;\n  preSelectedTdPos: preSelectedTdPosShape;\n  copyedCellsPath: Path[] | null;\n  copyedAreaHeight: number; // 复制的区域的高度\n  copyedAreaWidth: number; // 复制的区域的宽度\n  copyedCells: NodeEntry[] | null;\n  copyedContent: Node[] | null;\n};\nconst globalStore: globalStoreShape = {\n  selectedTds: new Set<string>(),\n  editingTdsPath: new Set<string>(),\n  preSelectedTdPos: {\n    row: 0,\n    col: 0,\n  },\n  copyedCellsPath: null,\n  copyedAreaHeight: 0,\n  copyedAreaWidth: 0,\n  copyedCells: null,\n  copyedContent: null,\n};\n\nexport const getCopyedContent = () => {\n  return globalStore.copyedContent;\n};\n\nexport const setCopyedContent = (value: globalStoreShape[\"copyedContent\"]) => {\n  globalStore.copyedContent = value;\n};\n\nexport const setCopyedCells = (value: globalStoreShape[\"copyedCells\"]) => {\n  globalStore.copyedCells = value;\n};\n\nexport const getCopyedCells = () => {\n  return globalStore.copyedCells;\n};\n\nexport const getCopyedMaxRowAndCol = () => {\n  return {\n    copyedAreaHeight: globalStore.copyedAreaHeight,\n    copyedAreaWidth: globalStore.copyedAreaWidth,\n  };\n};\n\nexport const setCopyedMaxRowAndCol = (value: {\n  copyedAreaHeight: globalStoreShape[\"copyedAreaHeight\"];\n  copyedAreaWidth: globalStoreShape[\"copyedAreaWidth\"];\n}) => {\n  globalStore.copyedAreaHeight = value.copyedAreaHeight;\n  globalStore.copyedAreaWidth = value.copyedAreaWidth;\n};\n\nexport const setCopyedCellsPath = (\n  value: globalStoreShape[\"copyedCellsPath\"]\n) => {\n  globalStore.copyedCellsPath = value;\n};\n\nexport const getCopyedCellsPath = () => {\n  return globalStore.copyedCellsPath;\n};\n\nexport const getStrPathSetOfSelectedTds = (editor: EditorType) => {\n  filterPath(editor, globalStore.selectedTds);\n  return globalStore.selectedTds;\n};\n\nexport const setStrPathSetOfSelectedTds = (\n  selectedTds: globalStoreShape[\"selectedTds\"]\n) => {\n  globalStore.selectedTds = selectedTds;\n};\n\nconst filterPath = (editor: EditorType, paths: Set<string>): void => {\n  for (const p of paths) {\n    const path = p.split(\",\").map((o) => +o);\n    if (!Editor.hasPath(editor, path)) {\n      paths.delete(p);\n      filterPath(editor, paths);\n      return;\n    }\n  }\n};\n\nexport const getEditingTdsPath = (editor: EditorType) => {\n  filterPath(editor, globalStore.editingTdsPath);\n  return globalStore.editingTdsPath;\n};\n\nexport const setEditingTdsPath = (\n  editingTdPath: globalStoreShape[\"editingTdsPath\"]\n) => {\n  globalStore.editingTdsPath = editingTdPath;\n};\n","/* eslint-disable eqeqeq */\nimport _ from \"lodash\";\nimport { DOMAttributes } from \"react\";\nimport { useEffect } from \"react\";\nimport { Editor, Element, Transforms, Path, NodeEntry } from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useReadOnly,\n  useSlateStatic,\n} from \"slate-react\";\nimport { CET, CustomElement, EditorType, Marks } from \"../common/Defines\";\nimport {\n  getEditingTdsPath,\n  getStrPathSetOfSelectedTds,\n  setEditingTdsPath,\n  setStrPathSetOfSelectedTds,\n} from \"../common/globalStore\";\nimport { utils } from \"../common/utils\";\nimport { TableLogic } from \"./Table\";\n\nexport type customTdShape = {\n  start: boolean;\n  colSpan: number;\n  rowSpan: number;\n  row: number; // 在tdMap里的坐标\n  col: number; // 在tdMap里的坐标\n  originRow: number; // 在原来tbody里的坐标\n  originCol: number; // 在原来tbody里的坐标\n} & CustomElement;\n\ntype tdMapShape = Array<customTdShape[]>;\ntype getTdMapReturn = {\n  tdMap: tdMapShape;\n  startPoins: customTdShape[];\n};\n\nexport let tdMinWidth = 100;\nexport const tdMinHeight = 30;\n\nexport const TD: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  element,\n  children,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  useEffect(() => {\n    const path = ReactEditor.findPath(editor, element);\n    if (element.width == null || element.height == null) {\n      Transforms.setNodes(\n        editor,\n        {\n          width: element.width || tdMinWidth,\n          height: element.height || tdMinHeight,\n        },\n        {\n          at: path,\n        }\n      );\n    }\n    // 销毁时，删除状态\n    return () => {\n      const path = ReactEditor.findPath(editor, element);\n      const pathStr = path.join(\",\");\n      const selectedTds = getStrPathSetOfSelectedTds(editor);\n      const editingTds = getEditingTdsPath(editor);\n      selectedTds.delete(pathStr);\n      editingTds.delete(pathStr);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const path = ReactEditor.findPath(editor, element);\n    const pathStr = path.join(\",\");\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const editingTds = getEditingTdsPath(editor);\n    const { selected: nowSelected, tdIsEditing } = element;\n\n    if (tdIsEditing === true) {\n      editingTds.add(pathStr);\n    } else {\n      editingTds.delete(pathStr);\n    }\n\n    if (nowSelected === true) {\n      selectedTds.add(pathStr);\n    } else {\n      selectedTds.delete(pathStr);\n    }\n  });\n\n  const resizeTdX = (e: any) => {\n    let x = e.clientX;\n    let cell: any = null,\n      table: any = null;\n\n    for (let i = 0, paths = e.nativeEvent.path; i < paths.length; i++) {\n      const ele = paths[i];\n      if (ele.tagName == \"TD\") {\n        cell = ele;\n      }\n      if (ele.tagName == \"TABLE\") {\n        table = ele;\n        break;\n      }\n    }\n\n    if (cell == null || table == null) return;\n\n    const cellNode = ReactEditor.toSlateNode(editor, cell);\n    const cellPath = ReactEditor.findPath(editor, cellNode);\n    const tbody = Editor.above(editor, {\n      at: cellPath,\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    // 找到tdMap中在当前cell的最右边的cells\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    // 先找到当前的cell在tdMap中的位置\n    const [tdOriginRow, tdOriginCol] = cellPath.slice(cellPath.length - 2);\n    let targetCol: number = -1;\n    for (let i = 0; i < tdMap.length; i++) {\n      for (let j = 0; j < tdMap[i].length; j++) {\n        const td = tdMap[i][j];\n        if (td.originCol == tdOriginCol && td.originRow == tdOriginRow) {\n          targetCol = td.col + td.colSpan - 1;\n          break;\n        }\n      }\n      if (targetCol != -1) break;\n    }\n    if (targetCol == -1) return;\n\n    const cells: any[] = [];\n    for (let i = 0; i < tdMap.length; i++) {\n      const tdInMap = tdMap[i][targetCol];\n      const td = Editor.node(editor, [\n        ...tbody[1],\n        tdInMap.originRow,\n        tdInMap.originCol,\n      ]);\n      const tdDom: any = ReactEditor.toDOMNode(editor, td[0]);\n      tdDom.initX = tdDom.offsetWidth;\n      cells.push(tdDom);\n    }\n\n    // const tableInitWidth = table.offsetWidth;\n\n    const mouseMoveHandler = function (e: any) {\n      const dx = e.clientX - x;\n      cells.forEach((c) => {\n        c.style.maxWidth =\n          c.style.width =\n          c.style.minWidth =\n            (c.initX + dx < tdMinWidth ? tdMinWidth : c.initX + dx) + \"px\";\n      });\n      // table.style.width = tableInitWidth + dx + \"px\";\n    };\n\n    const mouseUpHandler = function () {\n      const trs = Array.from(table.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const width = parseInt(td.style.minWidth);\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (Element.isElement(tdNode) && tdNode.width != width) {\n            Transforms.setNodes(\n              editor,\n              { width },\n              { at: [...tbody[1], rowIndex, cellIndex] }\n            );\n          }\n        });\n      });\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", mouseUpHandler);\n    };\n\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n    document.addEventListener(\"mouseup\", mouseUpHandler);\n  };\n\n  const resizeTdY = (e: any) => {\n    let y = e.clientY;\n    let cell: any = null,\n      row: any = null,\n      table: any = null;\n\n    for (let i = 0, paths = e.nativeEvent.path; i < paths.length; i++) {\n      const ele = paths[i];\n      if (ele.tagName == \"TD\") {\n        cell = ele;\n      }\n      if (ele.tagName == \"TR\") {\n        row = ele;\n      }\n      if (ele.tagName == \"TABLE\") {\n        table = ele;\n        break;\n      }\n    }\n\n    if (cell == null || row == null || table == null) return;\n\n    const cellNode = ReactEditor.toSlateNode(editor, cell);\n    const cellPath = ReactEditor.findPath(editor, cellNode);\n    const tbody = Editor.above(editor, {\n      at: cellPath,\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    // 找到tdMap中在当前cell的最右边的cells\n    const { tdMap } = TdLogic.getTdMap(tbody);\n\n    // 先找到当前的cell在tdMap中的位置\n    const [tdOriginRow, tdOriginCol] = cellPath.slice(cellPath.length - 2);\n    let targetRow: number = -1;\n    for (let i = 0; i < tdMap.length; i++) {\n      for (let j = 0; j < tdMap[i].length; j++) {\n        const td = tdMap[i][j];\n        if (td.originCol == tdOriginCol && td.originRow == tdOriginRow) {\n          targetRow = td.row + td.rowSpan - 1;\n          break;\n        }\n      }\n      if (targetRow != -1) break;\n    }\n    if (targetRow == -1) return;\n\n    const cells: any[] = [];\n    for (let i = 0; i < tdMap[0].length; i++) {\n      const tdInMap = tdMap[targetRow][i];\n      const td = Editor.node(editor, [\n        ...tbody[1],\n        tdInMap.originRow,\n        tdInMap.originCol,\n      ]);\n      const tdDom: any = ReactEditor.toDOMNode(editor, td[0]);\n      tdDom.initY = tdDom.offsetHeight;\n      cells.push(tdDom);\n    }\n\n    // const tableInitY = parseInt(window.getComputedStyle(table).minHeight);\n\n    const mouseMoveHandler = function (e: any) {\n      e.preventDefault();\n      const dy = e.clientY - y;\n      cells.forEach(\n        (c) =>\n          (c.style.minHeight =\n            c.style.height =\n            c.style.maxHeight =\n              (c.initY + dy <= tdMinHeight ? tdMinHeight : c.initY + dy) + \"px\")\n      );\n      // table.style.height = tableInitY + dy + \"px\";\n    };\n\n    const mouseUpHandler = function () {\n      const trs = Array.from(table.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const height = parseInt(td.style.height);\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (Element.isElement(tdNode) && tdNode.height != height) {\n            Transforms.setNodes(\n              editor,\n              { height },\n              { at: [...tbody[1], rowIndex, cellIndex] }\n            );\n          }\n        });\n      });\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", mouseUpHandler);\n    };\n\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n    document.addEventListener(\"mouseup\", mouseUpHandler);\n  };\n\n  const tdClick = () => {\n    // TdLogic.deselectAllTd(editor);\n    // const path = ReactEditor.findPath(editor, element);\n    // Transforms.setNodes(\n    //   editor,\n    //   {\n    //     tdIsEditing: true,\n    //   },\n    //   {\n    //     at: path,\n    //     mode: \"lowest\",\n    //     match(n) {\n    //       return TableLogic.isTd(n);\n    //     },\n    //   }\n    // );\n  };\n\n  const tdDbClick: DOMAttributes<any>[\"onDoubleClick\"] = (e) => {\n    if ((e.nativeEvent.target as any) != attributes.ref.current) {\n      return;\n    }\n    TdLogic.deselectAllTd(editor);\n\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        start: true,\n        selected: true,\n      },\n      {\n        at: path,\n      }\n    );\n    Transforms.deselect(editor);\n  };\n\n  return (\n    <td\n      {...attributes}\n      colSpan={element.colSpan}\n      rowSpan={element.rowSpan}\n      style={{\n        ...(element.tdAutoWidth\n          ? {\n              minWidth: tdMinWidth,\n            }\n          : {\n              minWidth: element.width || tdMinWidth,\n              maxWidth: element.width || tdMinWidth,\n              width: element.width || tdMinWidth,\n            }),\n        height: element.height || tdMinHeight,\n        color: element[Marks.Color] || \"unset\",\n        backgroundColor:\n          element.selected && !readOnly\n            ? \"rgba(180,215,255,.7)\"\n            : element[Marks.BGColor] || \"unset\",\n        // textAlign: element[Marks.TextAlign] || \"unset\",\n        fontSize: element[Marks.FontSize] || \"unset\",\n        fontWeight: element[Marks.BOLD] ? \"bold\" : \"unset\",\n        fontStyle: element[Marks.ITALIC] ? \"italic\" : \"unset\",\n        textDecoration: `${element[Marks.Underline] ? \"underline\" : \"\"} ${\n          element[Marks.LineThrough] ? \"line-through\" : \"\"\n        }`,\n        ...utils.getTextAlignStyle(element.textAlign),\n      }}\n      onClick={tdClick}\n      onDoubleClick={tdDbClick}\n    >\n      {children}\n      {!readOnly && !element.tdAutoWidth ? (\n        <>\n          <span\n            className=\"resizer\"\n            style={{\n              position: \"absolute\",\n              zIndex: 10,\n              width: 5,\n              right: 0,\n              top: 0,\n              height: \"100%\",\n              cursor: \"col-resize\",\n              userSelect: \"none\",\n            }}\n            contentEditable={false}\n            onMouseDown={resizeTdX}\n          ></span>\n          <span\n            className=\"resizer\"\n            style={{\n              position: \"absolute\",\n              zIndex: 10,\n              width: \"100%\",\n              height: 5,\n              left: 0,\n              bottom: 0,\n              cursor: \"row-resize\",\n              userSelect: \"none\",\n            }}\n            contentEditable={false}\n            onMouseDown={resizeTdY}\n          ></span>\n        </>\n      ) : null}\n    </td>\n  );\n};\n\nexport const TdLogic = {\n  /**\n   * 获得一个以改造过后的td（fillTd）对象构成的矩阵\n   * 在这个矩阵中，如果某个fillTd占有横向两个单位，纵向两个单位，那么这四个位置都将填充此fillTd对象。\n   * 举例：td1-3,td4,td-6都是colSpan=rowSpan=1的单元格，那么他们在矩阵中只占有一个位置，而td5的colSpan=rowSpan=2，所以占四个位置\n   * 而且，这四个位置的td5都是同一个对象\n   * [\n   *  td1,td2,td3,\n   *  td4,(td5),(td5),\n   *  td6,(td5),(td5)\n   * ]\n   */\n  getTdMap(tbody: NodeEntry): getTdMapReturn {\n    const trs = tbody[0].children as Element[];\n    const startPoins: customTdShape[] = [];\n    const tdMap: any = new Array(trs.length).fill(0).map(() => []);\n    for (let i = 0; i < trs.length; i++) {\n      const tr = trs[i];\n      const tds = tr.children;\n      for (let j = 0; j < tds.length; j++) {\n        const td = tds[j] as Element;\n        if (!TableLogic.isTd(td)) continue;\n        let colStart = tdMap[i].findIndex((o: any) => o == null);\n        colStart = colStart == -1 ? tdMap[i].length : colStart;\n        let colEnd = colStart + (td.colSpan || 1),\n          rowStart = i,\n          rowEnd = rowStart + (td.rowSpan || 1);\n        const fillTd = {\n          ...td,\n          colSpan: td.colSpan || 1,\n          rowSpan: td.rowSpan || 1,\n          row: i,\n          col: colStart,\n          originRow: i,\n          originCol: j,\n        };\n        // 如果tdIsEditing存在，那么表示只是单一的对单元格进行点击\n        if (td.start || td.tdIsEditing)\n          startPoins.push(fillTd as customTdShape);\n\n        for (let row = rowStart; row < rowEnd; row++) {\n          for (let col = colStart; col < colEnd; col++) {\n            tdMap[row][col] = fillTd;\n          }\n        }\n      }\n    }\n    return {\n      tdMap,\n      startPoins,\n    };\n  },\n  // 从tdMap中获得选中的td\n  getSelectedTdInTdMap(tbody: NodeEntry) {\n    const { tdMap, startPoins } = TdLogic.getTdMap(tbody);\n    if (startPoins.length < 1) return null;\n    if (startPoins.length == 1) startPoins[1] = startPoins[0];\n    if (!tdMap) return null;\n\n    const helper = (\n      {\n        colStart,\n        colEnd,\n        rowStart,\n        rowEnd,\n      }: {\n        colStart: number;\n        colEnd: number;\n        rowStart: number;\n        rowEnd: number;\n      },\n      selectedTdMap: Map<customTdShape, number>\n    ) => {\n      for (let i = rowStart; i < rowEnd; i++) {\n        for (let j = colStart; j < colEnd; j++) {\n          const td = tdMap[i][j];\n          if (!selectedTdMap.has(td)) {\n            selectedTdMap.set(td, 1);\n            helper(\n              {\n                colStart: Math.min(td.col, colStart),\n                colEnd: Math.max(colEnd, td.col + td.colSpan),\n                rowStart: Math.min(td.row, rowStart),\n                rowEnd: Math.max(td.row + td.rowSpan, rowEnd),\n              },\n              selectedTdMap\n            );\n            return;\n          }\n        }\n      }\n    };\n\n    const [a, b] = startPoins;\n    const selectedTd = new Map<customTdShape, number>([\n      [a, 1],\n      [b, 1],\n    ]);\n    helper(\n      {\n        colStart: Math.min(a.col, b.col),\n        colEnd: Math.max(a.col + a.colSpan, b.col + b.colSpan),\n        rowStart: Math.min(a.row, b.row),\n        rowEnd: Math.max(a.row + a.rowSpan, b.row + b.rowSpan),\n      },\n      selectedTd\n    );\n    return selectedTd;\n  },\n  deselectAllTd(editor: EditorType) {\n    const selectedTdsPath = TableLogic.getSelectedTdsPath(editor);\n    for (const path of selectedTdsPath) {\n      Transforms.unsetNodes(editor, [\"selected\", \"start\", \"tdIsEditing\"], {\n        at: path,\n      });\n    }\n    setStrPathSetOfSelectedTds(new Set());\n\n    const editingTdsPath = TableLogic.getEditingTdsPath(editor);\n    for (const tdStrPath of editingTdsPath) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      Transforms.unsetNodes(editor, [\"selected\", \"start\", \"tdIsEditing\"], {\n        at: path,\n      });\n    }\n    setEditingTdsPath(new Set());\n  },\n  /**\n   * 找到下一个位置的td\n   */\n  findTargetTd(\n    editor: EditorType,\n    td: NodeEntry,\n    direct: \"left\" | \"right\" | \"up\" | \"down\",\n    selectAll: boolean = false\n  ) {\n    if (!td) return;\n    // 首先判断当前是不是只有一个单元格被选中\n    const tbody = Editor.above(editor, {\n      at: td[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody || !Element.isElement(tbody[0])) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n\n    let row, col;\n    // 获得当前单元格\n    tdMap.some((tr, i) => {\n      return tr.some((td, j) => {\n        if (td.tdIsEditing === true) {\n          row = i;\n          col = j;\n          return true;\n        }\n        return false;\n      });\n    });\n    if (row == null || col == null) return;\n    const startTd = tdMap[row][col];\n\n    let targetCol: number = col,\n      targetRow: number = row;\n    if (direct == \"left\") {\n      targetCol =\n        col == 0\n          ? row == 0\n            ? 0\n            : ((targetRow = row - 1), tdMap[0].length - 1)\n          : col - 1;\n    } else if (direct == \"right\") {\n      const rightX = col + startTd.colSpan;\n      targetCol =\n        rightX >= tdMap[0].length\n          ? row == tdMap.length - 1\n            ? col\n            : ((targetRow = row + 1), 0)\n          : rightX;\n    } else if (direct == \"up\") {\n      targetRow = row == 0 ? 0 : row - 1;\n    } else if (direct == \"down\") {\n      targetRow =\n        row + startTd.rowSpan >= tdMap.length ? row : row + startTd.rowSpan;\n    }\n    const targetTd = tdMap[targetRow][targetCol];\n\n    const nextTdPath = [...tbody[1], targetTd.originRow, targetTd.originCol];\n    const nextTd = Editor.node(editor, nextTdPath);\n    if (nextTd) {\n      Transforms.select(\n        editor,\n        selectAll\n          ? Editor.range(editor, nextTd[1])\n          : [\"down\", \"right\"].includes(direct)\n          ? Editor.start(editor, nextTd[1])\n          : Editor.end(editor, nextTd[1])\n      );\n      TdLogic.setTdIsEditing(editor, nextTd[1]);\n    }\n  },\n  setTdIsEditing(editor: EditorType, tdPath: Path) {\n    TdLogic.deselectAllTd(editor);\n\n    Transforms.setNodes(\n      editor,\n      {\n        tdIsEditing: true,\n        start: true,\n      },\n      { at: tdPath }\n    );\n  },\n  clearTd(editor: EditorType) {\n    // 清空带有selected属性的td\n    Editor.withoutNormalizing(editor, () => {\n      const selectedTds = TableLogic.getSelectedTds(editor);\n      for (const [n, p] of selectedTds) {\n        const isEmptyCell =\n          n.children.length === 1 &&\n          Editor.string(editor, p, { voids: true }) === \"\";\n\n        if (isEmptyCell) continue;\n\n        const emptyTd = _.assign({}, n, {\n          children: [{ type: CET.DIV, children: [{ text: \"\" }] }],\n        });\n\n        // 如果td不为空则执行\n        Transforms.removeNodes(editor, { at: p });\n        Transforms.insertNodes(editor, _.cloneDeep(emptyTd), { at: p });\n      }\n      TdLogic.deselectAllTd(editor);\n    });\n  },\n};\n","/* eslint-disable eqeqeq */\nimport _ from \"lodash\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport {\n  Node,\n  NodeEntry,\n  Element,\n  Text,\n  Range,\n  Transforms,\n  Editor,\n  Path,\n  Point,\n  Descendant,\n} from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useReadOnly,\n  useSlateStatic,\n} from \"slate-react\";\nimport {\n  CET,\n  CustomElement,\n  EditorContainerClassName,\n  EditorType,\n  Marks,\n} from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\nimport { EditorContext } from \"../RichEditor\";\nimport { customTdShape, TdLogic, tdMinHeight, tdMinWidth } from \"./Td\";\nimport {\n  getStrPathSetOfSelectedTds,\n  getEditingTdsPath,\n  setStrPathSetOfSelectedTds,\n  setEditingTdsPath,\n  setCopyedCells,\n  setCopyedMaxRowAndCol,\n  getCopyedCells,\n  getCopyedMaxRowAndCol,\n  getCopyedContent,\n} from \"../common/globalStore\";\nimport { message } from \"antd\";\nimport { useEffect } from \"react\";\ndeclare module \"react\" {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLAttributes<T> {\n    border?: any;\n  }\n}\n\ntype refShape = {\n  isBeginSelectTd: boolean;\n  mouseDownStartPoint: any;\n  preMouseOnTdPath: Path | null; //  鼠标移动时，记录上一次所处的td\n  lastSelectedPaths: Path[];\n  initX: number;\n  initY: number;\n  prePath: Path | null;\n};\n\nexport const Table: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const ref = useRef<refShape>({\n    isBeginSelectTd: false,\n    mouseDownStartPoint: null,\n    initX: 0,\n    initY: 0,\n    lastSelectedPaths: [],\n    preMouseOnTdPath: null,\n    prePath: null,\n  });\n\n  const { savedMarks, setSavedMarks } = useContext(EditorContext);\n\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  // 每次渲染时，判断自己当前的容器宽度是否和之前保存的宽度一致，如果不一致，则计算内部所有td的新的宽度\n  const reCalcTdWidth = useCallback(() => {\n    const selfDom = attributes.ref.current;\n    if (!selfDom) return;\n    const tableDom = selfDom;\n    const nowWrapperWidth = selfDom?.offsetWidth - 2;\n    const preWrapperWidth = element.wrapperWidthWhenCreated;\n    if (!tableDom || nowWrapperWidth == null || preWrapperWidth == null) return;\n    if (preWrapperWidth != nowWrapperWidth) {\n      const tableNode = ReactEditor.toSlateNode(editor, selfDom);\n      if (!tableNode) return;\n      const tablePath = ReactEditor.findPath(editor, tableNode);\n      if (!tablePath) return;\n      const trs = Array.from(tableDom.querySelectorAll(\":scope>tbody>tr\"));\n      trs.forEach((tr: any, rowIndex) => {\n        const tds = Array.from(tr.querySelectorAll(\":scope>td\"));\n        tds.forEach((td: any, cellIndex) => {\n          const tdNode = ReactEditor.toSlateNode(editor, td);\n          if (!Element.isElement(tdNode)) return;\n          const width =\n            ((tdNode.width || tdMinWidth) / preWrapperWidth) * nowWrapperWidth;\n          Transforms.setNodes(\n            editor,\n            { width },\n            { at: [...tablePath, 0, rowIndex, cellIndex] }\n          );\n        });\n      });\n      Transforms.setNodes(\n        editor,\n        { wrapperWidthWhenCreated: nowWrapperWidth },\n        { at: tablePath }\n      );\n    }\n  }, [attributes.ref, editor, element.wrapperWidthWhenCreated]);\n\n  useEffect(() => {\n    var ro = new ResizeObserver((entries) => {\n      window.requestAnimationFrame(() => {\n        if (!Array.isArray(entries) || !entries.length) {\n          return;\n        }\n        // your code\n        reCalcTdWidth();\n      });\n    });\n    const container = document.querySelector(`.${EditorContainerClassName}`);\n    container && ro.observe(container);\n\n    return () => {\n      container && ro.unobserve(container);\n    };\n  }, [reCalcTdWidth]);\n\n  useEffect(() => {\n    // reCalcTdWidth();\n    // 每次渲染时，判断自己的位置和之前的位置相比是否变化，如果变化，需要重新计算自己内部td的状态\n    const path = ReactEditor.findPath(editor, element);\n    if (\n      ref.current.prePath != null &&\n      !Path.equals(path, ref.current.prePath)\n    ) {\n      TableLogic.resetSelectedTds(editor);\n    }\n    ref.current.prePath = path;\n  });\n\n  // 找到需要取消选择和新选择的td的完整的path\n  const findPath = (nowSelectedTds: Path[], preSelectedTds: Path[]) => {\n    const nowSelectedTdsPathSet = new Set(\n      nowSelectedTds.map((o) => o.slice(o.length - 2).join(\",\"))\n    );\n\n    const preSelectedTdsPathSet = new Set(\n      preSelectedTds.map((o) => o.slice(o.length - 2).join(\",\"))\n    );\n\n    const deselectedPath = preSelectedTds.filter((path) => {\n      return !nowSelectedTdsPathSet.has(path.slice(path.length - 2).join(\",\"));\n    });\n\n    const newSelectedPath = nowSelectedTds.filter((path) => {\n      return !preSelectedTdsPathSet.has(path.slice(path.length - 2).join(\",\"));\n    });\n\n    return { deselectedPath, newSelectedPath };\n  };\n\n  const selectTd = _.throttle((pa: Point, pb: Point) => {\n    const commonNode = Node.common(editor, pa.path, pb.path);\n    if (!commonNode) return;\n    const pbTd = Editor.above(editor, {\n      at: pb,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (!pbTd) return;\n\n    const preMouseOnTdPath = ref.current.preMouseOnTdPath;\n    if (preMouseOnTdPath && Path.equals(preMouseOnTdPath, pbTd[1])) return;\n    ref.current.preMouseOnTdPath = pbTd[1];\n\n    const paTd = Editor.above(editor, {\n      at: pa,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n    if (!paTd) return;\n\n    // 取消选择上一次选中的td\n    const deselectTds = () => {\n      ref.current.lastSelectedPaths.forEach((p) => {\n        Transforms.unsetNodes(editor, [\"selected\", \"start\"], {\n          at: p,\n        });\n      });\n      ref.current.lastSelectedPaths = [];\n    };\n\n    ref.current.lastSelectedPaths.forEach((p) => {\n      const td = Editor.node(editor, p);\n      if (td && Element.isElement(td[0]) && td[0].start == true) {\n        Transforms.unsetNodes(editor, [\"start\"], {\n          at: p,\n        });\n      }\n    });\n\n    // 取消单个单元格选中 2021-10-05\n    // if (Path.equals(paTd[1], pbTd[1])) {\n    //   deselectTds();\n    //   // 说明选区在一个td里\n    //   Transforms.setNodes(\n    //     editor,\n    //     { selected: true, start: true },\n    //     { at: paTd[1] }\n    //   );\n    //   ref.current.lastSelectedPaths = [paTd[1]];\n    //   return;\n    // }\n\n    if (\n      !Element.isElement(commonNode[0]) ||\n      (commonNode[0].type != CET.TBODY && commonNode[0].type != CET.TR)\n    ) {\n      deselectTds();\n      return;\n    }\n\n    // 找到两个点同一层级的td\n    const tda = Editor.above(editor, {\n      at: pa,\n      mode: \"highest\",\n      match(n, p) {\n        return TableLogic.isTd(n) && p.length > commonNode[1].length;\n      },\n    });\n    if (!tda) return;\n    Transforms.setNodes(\n      editor,\n      { start: true, selected: true },\n      { at: tda[1] }\n    );\n    const tdb = Editor.above(editor, {\n      at: pb,\n      mode: \"highest\",\n      match(n, p) {\n        return TableLogic.isTd(n) && p.length > commonNode[1].length;\n      },\n    });\n    if (!tdb) return;\n    Transforms.setNodes(\n      editor,\n      { start: true, selected: true },\n      { at: tdb[1] }\n    );\n\n    const tbody = Editor.above(editor, {\n      at: tda[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody || !Element.isElement(tbody[0])) return;\n\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n\n    if (selectedTds == null) return;\n    const nowTdsPath = Array.from(selectedTds.keys()).map((o) => [\n      ...tbody[1],\n      o.originRow,\n      o.originCol,\n    ]);\n\n    const { deselectedPath, newSelectedPath } = findPath(\n      nowTdsPath,\n      ref.current.lastSelectedPaths\n    );\n\n    for (const path of newSelectedPath) {\n      Transforms.setNodes(editor, { selected: true }, { at: path });\n    }\n\n    for (const path of deselectedPath) {\n      Transforms.unsetNodes(editor, [\"selected\", \"start\"], { at: path });\n    }\n\n    ref.current.lastSelectedPaths = nowTdsPath;\n\n    Transforms.deselect(editor);\n  }, 20);\n\n  const handleTableMouseDown = (e: any) => {\n    // 防止事件冒泡到父元素的td（用于之前表格嵌套表格的逻辑，现在已经取消）\n    // e.stopPropagation();\n    try {\n      TdLogic.deselectAllTd(editor);\n\n      const slateNode = ReactEditor.toSlateNode(editor, e.target);\n      const slateNodePath = ReactEditor.findPath(editor, slateNode);\n      ref.current.initX = e.clientX;\n      ref.current.initY = e.clientY;\n\n      ref.current.preMouseOnTdPath = null;\n      ref.current.lastSelectedPaths = [];\n\n      const tdDom = e.nativeEvent.path.find((e: any) => {\n        return e.tagName == \"TD\";\n      });\n      if (!tdDom) return;\n\n      const tdPath = ReactEditor.findPath(\n        editor,\n        ReactEditor.toSlateNode(editor, tdDom)\n      );\n      TdLogic.setTdIsEditing(editor, tdPath);\n\n      if (\n        !readOnly &&\n        ![\"resizer\", \"columnSelector\"].includes(e.target.className)\n      ) {\n        ref.current.isBeginSelectTd = true;\n        ref.current.preMouseOnTdPath = ref.current.mouseDownStartPoint =\n          slateNodePath;\n        ref.current.lastSelectedPaths = TableLogic.getSelectedTdsPath(editor);\n\n        const mousemoveFunc = (e: any) => {\n          try {\n            // 如果只是在同一个单元格内移动，那么不取消默认行为（也就是允许有选区）\n            if ([\"resizer\", \"columnSelector\"].includes(e.target.className)) {\n              utils.removeAllRange();\n              e.preventDefault();\n            } else {\n              // 如果移动到其他单元格，则取消\n              const parent = utils.findParent(e.target, tdDom);\n              if (parent != tdDom) {\n                utils.removeAllRange();\n                e.preventDefault();\n              }\n            }\n\n            // 如果移动距离不超过1，那么不进入逻辑\n            const editorDom = ReactEditor.toDOMNode(editor, editor);\n            if (\n              ref.current.isBeginSelectTd &&\n              editorDom.contains(e.target) &&\n              (Math.abs(e.clientX - ref.current.initX) > 1 ||\n                Math.abs(e.clientY - ref.current.initY) > 1)\n            ) {\n              const slateNode = ReactEditor.toSlateNode(editor, e.target);\n              const path = ReactEditor.findPath(editor, slateNode);\n              selectTd(\n                Editor.point(editor, ref.current.mouseDownStartPoint),\n                Editor.point(editor, path)\n              );\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        };\n        const mouseupFunc = (e: any) => {\n          ref.current.isBeginSelectTd = false;\n          window.removeEventListener(\"mousemove\", mousemoveFunc);\n          window.removeEventListener(\"mouseup\", mouseupFunc);\n        };\n\n        window.addEventListener(\"mousemove\", mousemoveFunc);\n        window.addEventListener(\"mouseup\", mouseupFunc);\n      }\n    } catch (error) {}\n  };\n\n  const handleTableMouseUp = () => {\n    if (savedMarks) {\n      const copyMarks: any = {};\n      const hasSelectTd = TableLogic.getSelectedTdsSize(editor);\n      for (const key of Object.values(Marks)) {\n        copyMarks[key] = savedMarks[key];\n      }\n      if (hasSelectTd > 0) {\n        const selectedTdsPath = TableLogic.getSelectedTdsPath(editor);\n        for (const path of selectedTdsPath) {\n          Transforms.setNodes(editor, copyMarks, {\n            at: path,\n          });\n        }\n        setSavedMarks(null);\n        return;\n      }\n    }\n  };\n\n  const ui = (\n    <table\n      {...attributes}\n      style={{\n        display: \"block\",\n        tableLayout: \"auto\",\n        wordBreak: \"break-all\",\n        overflowX: \"auto\",\n        overflowY: \"hidden\",\n        borderCollapse: \"collapse\",\n        position: \"relative\",\n        ...(element.tdAutoWidth\n          ? {\n              width: \"100%\",\n            }\n          : {}),\n      }}\n      onMouseDown={handleTableMouseDown}\n      onMouseUp={handleTableMouseUp}\n    >\n      {children}\n    </table>\n  );\n  return ui;\n};\n\nconst getEditingOrSelectedTdBelongTable = (editor: Editor) => {\n  const td = TableLogic.getFirstSelectedTd(editor);\n  let table;\n  if (td) {\n    table = Editor.above(editor, {\n      mode: \"lowest\",\n      at: td[1],\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n  } else if (editor.selection) {\n    table = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n  }\n  return table;\n};\n\nexport const TableLogic = {\n  model: [\n    {\n      type: CET.TABLE,\n      children: [\n        {\n          type: CET.TBODY,\n          children: new Array(100).fill(0).map((item, fatherIndex) => {\n            return {\n              type: CET.TR,\n              children: new Array(10).fill(0).map((item, index) => {\n                return {\n                  type: CET.TD,\n                  width: 100,\n                  height: 50,\n                  children: [\n                    {\n                      type: CET.DIV,\n                      children: [{ text: `string${fatherIndex}-${index}` }],\n                    },\n                  ],\n                };\n              }),\n            };\n          }),\n        },\n      ],\n    },\n    {\n      type: CET.DIV,\n      children: [{ text: \"1\" }],\n    },\n  ],\n  isSelectedTd(n: Node) {\n    return TableLogic.isTd(n) && n.selected == true;\n  },\n  isTable(node: Node): node is Element {\n    return Element.isElement(node) && CET.TABLE == node.type;\n  },\n  isTd(node: Node): node is Element {\n    return Element.isElement(node) && [CET.TD].includes(node.type);\n  },\n  // 判断当前selection是否在表格内\n  isInTable(editor: EditorType) {\n    if (!editor.selection) return false;\n\n    const {\n      focus: { path: fPath },\n      anchor: { path: aPath },\n    } = editor.selection;\n\n    let rel = Editor.above(editor, {\n      at: fPath,\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n\n    if (rel) return true;\n\n    rel = Editor.above(editor, {\n      at: aPath,\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n\n    if (rel) return true;\n\n    return false;\n  },\n  isInTd(editor: EditorType) {\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      return utils.getFirstAboveElementType(editor) == CET.TD;\n    }\n    return false;\n  },\n  normalizeTable(editor: EditorType, nodeEntry: NodeEntry) {\n    const [node, path] = nodeEntry;\n\n    if (Element.isElement(node) && [CET.TABLE].includes(node.type)) {\n      // 如果table的子元素里含有其他非tbody的标签，删除\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (child.type != CET.TBODY) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n    }\n\n    // tbody校验规则\n    if (Element.isElement(node) && [CET.TBODY].includes(node.type)) {\n      // 如果tbody的父元素不是table，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && parent.type == CET.TABLE)) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (child.type != CET.TR) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n    }\n\n    // tr校验规则\n    if (Element.isElement(node) && CET.TR == node.type) {\n      // 如果父元素不为tbody，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && [CET.TBODY].includes(parent.type))) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (node.shouldEmpty) continue;\n        if (child.type != CET.TD) {\n          Transforms.removeNodes(editor, { at: childP });\n          return;\n        }\n      }\n      if (node.children.length === 0) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: [...path, 0] });\n        Transforms.setNodes(editor, { shouldEmpty: true }, { at: path });\n        return true;\n      }\n      if (node.children.length == 1 && Node.child(node, 0).type != CET.TD) {\n        Transforms.setNodes(editor, { shouldEmpty: true }, { at: path });\n        return true;\n      } else {\n        if (node.children.length > 1) {\n          for (const [child, childP] of Node.children(editor, path, {\n            reverse: true,\n          })) {\n            if (Text.isText(child)) {\n              Transforms.removeNodes(editor, { at: childP });\n              return true;\n            }\n          }\n        }\n\n        Transforms.setNodes(editor, { shouldEmpty: false }, { at: path });\n        return true;\n      }\n    }\n    // td校验\n    if (Element.isElement(node) && CET.TD == node.type) {\n      // 如果父元素不是tr，则删除\n      const [parent] = utils.getParent(editor, path);\n      if (!(Element.isElement(parent) && [CET.TR].includes(parent.type))) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n      // 如果没有子元素，那么默认添加一个\n      if (\n        node.children.length == 1 &&\n        Text.isText(Node.child(node, 0)) &&\n        Editor.string(editor, path, { voids: true }) == \"\"\n      ) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"\" }],\n          },\n          {\n            at: [...path, 0],\n          }\n        );\n        return true;\n      }\n    }\n  },\n  tabEvent(editor: EditorType) {\n    const td = TableLogic.getEditingTd(editor);\n    if (!td) return;\n\n    TdLogic.findTargetTd(editor, td, \"right\", true);\n  },\n  shiftTabEvent(editor: EditorType) {\n    const td = TableLogic.getEditingTd(editor);\n    if (!td) return;\n\n    Transforms.deselect(editor);\n    TdLogic.findTargetTd(editor, td, \"left\", true);\n  },\n  deleteRow(editor: EditorType) {\n    // 删除选区对应的列\n    let deleteVArea: number[] = [Infinity, -Infinity];\n    const selectedTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    if (!selectedTd) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    if (!tdMap) return;\n    const selectedTds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || []\n    );\n    if (selectedTds.length == 0) return;\n\n    selectedTds.forEach((td) => {\n      deleteVArea[0] = Math.min(deleteVArea[0], td.row);\n      deleteVArea[1] = Math.max(deleteVArea[1], td.row + td.rowSpan);\n    });\n\n    // 说明是整个表格所有行被删除\n    if (deleteVArea[1] - deleteVArea[0] == tdMap.length) {\n      // 直接删除表格\n      Transforms.removeNodes(editor, {\n        at: Path.parent(tbody[1]),\n      });\n      return;\n    }\n\n    const removePath = [];\n    for (let row = deleteVArea[0]; row < deleteVArea[1]; row++) {\n      removePath.unshift([...tbody[1], row]);\n      for (let col = 0; col < tdMap[row].length; col++) {\n        const td = tdMap[row][col];\n        td.rowSpan--;\n        const tdPath = [...tbody[1], td.originRow, td.originCol];\n        // 如果rowSpan被减去到0，说明这个cell在要删除的行里\n        if (td.rowSpan != 0) {\n          Transforms.setNodes(\n            editor,\n            {\n              rowSpan: td.rowSpan,\n            },\n            {\n              at: tdPath,\n            }\n          );\n        }\n        col += td.colSpan - 1;\n      }\n    }\n\n    // 再次遍历，找到那些起始点身处删除范围内，且rowSpan>0的\n    for (let row = deleteVArea[0]; row < deleteVArea[1]; row++) {\n      for (let col = 0; col < tdMap[row].length; col++) {\n        const td = tdMap[row][col];\n        if (\n          td.rowSpan > 0 &&\n          td.row >= deleteVArea[0] &&\n          td.row == row &&\n          td.col == col\n        ) {\n          const targetRow = deleteVArea[1];\n          const leftCol = tdMap[targetRow][td.col - 1];\n          if (leftCol) {\n            Transforms.moveNodes(editor, {\n              at: [...tbody[1], td.originRow, td.originCol],\n              to: [...tbody[1], targetRow, leftCol.originCol + 1],\n            });\n          } else {\n            Transforms.moveNodes(editor, {\n              at: [...tbody[1], td.originRow, td.originCol],\n              to: [...tbody[1], targetRow, 0],\n            });\n          }\n        }\n        col += td.colSpan - 1;\n      }\n    }\n\n    // 从最低点开始删除\n    removePath.forEach((path) => {\n      Transforms.removeNodes(editor, { at: path });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  deleteColumn(editor: EditorType) {\n    // 删除选区对应的列\n    let deleteHArea: number[] = [Infinity, -Infinity];\n    const selectedTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    if (!selectedTd) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    if (!tdMap) return;\n    const selectedTds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || []\n    );\n    if (selectedTds.length == 0) return;\n\n    selectedTds.forEach((td) => {\n      deleteHArea[0] = Math.min(deleteHArea[0], td.col);\n      deleteHArea[1] = Math.max(deleteHArea[1], td.col + td.colSpan);\n    });\n\n    // 说明是整个表格所有列被删除\n    if (deleteHArea[1] - deleteHArea[0] == tdMap[0].length) {\n      // 直接删除表格\n      Transforms.removeNodes(editor, {\n        at: Path.parent(tbody[1]),\n      });\n      return;\n    }\n\n    const removePath = [];\n    for (let col = deleteHArea[0]; col < deleteHArea[1]; col++) {\n      for (let row = 0; row < tdMap.length; row++) {\n        const td = tdMap[row][col];\n        td.colSpan--;\n        const tdPath = [...tbody[1], td.originRow, td.originCol];\n        if (td.colSpan == 0) {\n          removePath.push(tdPath);\n        } else {\n          Transforms.setNodes(\n            editor,\n            {\n              colSpan: td.colSpan,\n            },\n            {\n              at: tdPath,\n            }\n          );\n        }\n        row += td.rowSpan - 1;\n      }\n    }\n\n    // 从最低点开始删除\n    removePath.sort((a, b) => {\n      const arow = a[a.length - 2];\n      const brow = b[b.length - 2];\n      const acol = a[a.length - 1];\n      const bcol = b[b.length - 1];\n      return arow > brow ? -1 : arow == brow ? bcol - acol : 1;\n    });\n    removePath.forEach((path) => {\n      Transforms.removeNodes(editor, { at: path });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertColumn(\n    editor: EditorType,\n    type: \"before\" | \"after\",\n    count: number = 1\n  ) {\n    const nowTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    if (!nowTd) return;\n    const nowTr = Editor.parent(editor, nowTd[1]);\n    if (!nowTr) return;\n    const tbody = Editor.parent(editor, nowTr[1]);\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(tbody[0])\n    )\n      return;\n\n    // const editorDom = ReactEditor.toDOMNode(editor, editor);\n\n    const getInsertCells = (): CustomElement[] => {\n      return _.cloneDeep(\n        new Array(count).fill(0).map(() => {\n          return _.cloneDeep({\n            type: CET.TD,\n            // width: editorDom.offsetWidth / 10,\n            height: tdMinHeight,\n            children: [\n              {\n                type: CET.DIV,\n                children: [{ text: \"\" }],\n              },\n            ],\n          } as CustomElement);\n        })\n      );\n    };\n\n    // 首先找到第一插入点\n    const [nowTdRow, nowTdCol] = nowTd[1].slice(nowTd[1].length - 2);\n    let insertCol;\n    if (selectedTds && selectedTds.size > 0) {\n      insertCol = type == \"after\" ? -Infinity : Infinity;\n      for (const tdInTdMap of selectedTds.keys()) {\n        insertCol =\n          type == \"after\"\n            ? Math.max(insertCol, tdInTdMap.col + tdInTdMap.colSpan)\n            : Math.min(insertCol, tdInTdMap.col);\n      }\n    } else {\n      insertCol = -1;\n      for (let i = 0; i < tdMap[nowTdRow].length; i++) {\n        const td = tdMap[nowTdRow][i];\n        // 找到当前td在tdMap中的位置\n        if (td.originCol == nowTdCol && td.originRow == nowTdRow) {\n          insertCol = td.col + (type == \"after\" ? td.colSpan : 0);\n          break;\n        }\n      }\n    }\n    if (insertCol == null || !Number.isFinite(insertCol)) return;\n    // 从上到下遍历整个表格当前列\n    for (let row = 0; row < tdMap.length; row++) {\n      const downTd = tdMap[row][insertCol] as customTdShape;\n      // 如果不存在，那么说明是插在最后\n      if (!downTd) {\n        Transforms.insertNodes(editor, getInsertCells(), {\n          at: [\n            ...tbody[1],\n            row,\n            tbody[0]?.children?.[row]?.children?.length || 0,\n          ],\n        });\n        continue;\n      }\n      const downTdOriginPos = [...tbody[1], downTd.originRow, downTd.originCol];\n      if (downTd.col == insertCol) {\n        Transforms.insertNodes(editor, getInsertCells(), {\n          at: [...tbody[1], row, downTd.originCol],\n        });\n      } else {\n        Transforms.setNodes(\n          editor,\n          {\n            colSpan: downTd.colSpan + 1,\n          },\n          {\n            at: downTdOriginPos,\n          }\n        );\n        row += downTd.rowSpan - 1;\n      }\n    }\n    TableLogic.resetSelectedTds(editor);\n  },\n  insertRow(editor: EditorType, type: \"after\" | \"before\", count: number = 1) {\n    const nowTd =\n      TableLogic.getFirstSelectedTd(editor) || TableLogic.getEditingTd(editor);\n    // 如果没有选中的td，那么就从光标位置找\n    if (!nowTd) return;\n    const nowTr = Editor.parent(editor, nowTd[1]);\n    if (!nowTr) return;\n    const tbody = Editor.parent(editor, nowTr[1]);\n    if (!tbody) return;\n    const { tdMap } = TdLogic.getTdMap(tbody);\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(nowTd[0]) ||\n      !Element.isElement(tbody[0])\n    )\n      return;\n\n    // const editorDom = ReactEditor.toDOMNode(editor, editor);\n\n    const insertNode = {\n      type: CET.TD,\n      // width: editorDom.offsetWidth / 10,\n      height: tdMinHeight,\n      children: [\n        {\n          type: CET.DIV,\n          children: [{ text: \"\" }],\n        },\n      ],\n    };\n\n    // 首先找到第一插入点\n    const [nowTdRow, nowTdCol] = nowTd[1].slice(nowTd[1].length - 2);\n    let insertRow;\n    if (selectedTds && selectedTds.size > 0) {\n      insertRow = type == \"after\" ? -Infinity : Infinity;\n      for (const tdInTdMap of selectedTds.keys()) {\n        insertRow =\n          type == \"after\"\n            ? Math.max(insertRow, tdInTdMap.row + tdInTdMap.rowSpan)\n            : Math.min(insertRow, tdInTdMap.row);\n      }\n    } else {\n      insertRow = -1;\n      for (let i = 0; i < tdMap[nowTdRow].length; i++) {\n        const td = tdMap[nowTdRow][i];\n        // 找到当前td在tdMap中的位置\n        if (td.originCol == nowTdCol && td.originRow == nowTdRow) {\n          insertRow = td.row + (type == \"after\" ? td.rowSpan : 0);\n          break;\n        }\n      }\n    }\n    if (insertRow == -1 || !Number.isFinite(insertRow)) return;\n\n    const getInsertRow = (tdCount: number) => {\n      return new Array(count).fill(0).map(() => {\n        return _.cloneDeep({\n          type: CET.TR,\n          children: new Array(tdCount).fill(0).map(() => {\n            return _.cloneDeep(insertNode);\n          }),\n        });\n      });\n    };\n\n    // 最后一行的插入\n    if (tdMap[insertRow] == null) {\n      Transforms.insertNodes(editor, getInsertRow(tdMap[0].length), {\n        at: [...tbody[1], insertRow],\n      });\n      return;\n    }\n\n    // 找到tdMap中的当前行\n    let tdCount = 0;\n    for (let i = 0; i < tdMap[insertRow].length; i++) {\n      const td = tdMap[insertRow][i] as customTdShape;\n      if (td.row == insertRow) {\n        tdCount++;\n      } else {\n        Transforms.setNodes(\n          editor,\n          {\n            rowSpan: td.rowSpan + 1,\n          },\n          {\n            at: [...tbody[1], td.originRow, td.originCol],\n          }\n        );\n        i += td.colSpan - 1;\n      }\n    }\n\n    Transforms.insertNodes(editor, getInsertRow(tdCount), {\n      at: [...tbody[1], insertRow],\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  splitTd(editor: EditorType) {\n    let selectedTds = TableLogic.getSelectedTds(\n      editor\n    ) as NodeEntry<CustomElement>[];\n    if (selectedTds.length === 0)\n      selectedTds = [\n        TableLogic.getEditingTd(editor),\n      ] as NodeEntry<CustomElement>[];\n    if (!selectedTds) return;\n\n    // 对选中的td进行过滤，排除那些只有一个单元格的\n    selectedTds = selectedTds.filter((td) => {\n      return (\n        Element.isElement(td[0]) &&\n        ((td[0].colSpan || 1) > 1 || (td[0].rowSpan || 1) > 1)\n      );\n    });\n    // 然后逆序处理tds\n    selectedTds.sort((td1, td2) => {\n      return Path.compare(td2[1], td1[1]);\n    });\n\n    Editor.withoutNormalizing(editor, () => {\n      TdLogic.deselectAllTd(editor);\n      let tbody = null;\n      for (const [td, tdPath] of selectedTds) {\n        if (!Element.isElement(td)) continue;\n        Transforms.setNodes(editor, { colSpan: 1, rowSpan: 1 }, { at: tdPath });\n        Transforms.unsetNodes(editor, [\"selected\", \"start\", \"tdIsEditing\"], {\n          at: tdPath,\n        });\n\n        if (!tbody) {\n          tbody = Editor.above(editor, {\n            at: tdPath,\n            mode: \"lowest\",\n            match(n) {\n              return Element.isElement(n) && n.type == CET.TBODY;\n            },\n          });\n          if (!tbody) continue;\n        }\n\n        const belongTr = Editor.parent(editor, tdPath),\n          tdCol = tdPath[tdPath.length - 1],\n          tdRow = tdPath[tdPath.length - 2],\n          tdColSpan = td.colSpan || 1,\n          tdRowSpan = td.rowSpan || 1;\n        let leftSumColSpan = 0;\n        for (let i = 0; i < tdCol; i++) {\n          leftSumColSpan =\n            leftSumColSpan + (belongTr[0]?.children?.[i]?.colSpan || 1);\n        }\n\n        // 找到当前tr应该插入新td的位置\n        const findInsertCol = (tr: NodeEntry) => {\n          let sumColSpan = 0;\n          for (let i = 0; i < tr[0].children.length; i++) {\n            sumColSpan = sumColSpan + (tr[0].children[i].colSpan || 1);\n            if (sumColSpan == leftSumColSpan) return i + 1;\n          }\n          return 0;\n        };\n\n        for (let row = tdRow, count = 0; count < tdRowSpan; count++, row++) {\n          const isInNowTr = row == tdRow;\n          const insertCol = findInsertCol(\n            Editor.node(editor, [...tbody[1], row])\n          );\n\n          // 插入几个td\n          const insertTdCount = tdColSpan - (isInNowTr ? 1 : 0);\n          Transforms.insertNodes(\n            editor,\n            new Array(insertTdCount).fill(0).map(() => {\n              return _.cloneDeep({\n                type: CET.TD,\n                children: [\n                  {\n                    type: CET.DIV,\n                    children: [{ text: \"\" }],\n                  },\n                ],\n              });\n            }),\n            {\n              at: [...tbody[1], row, insertCol + (isInNowTr ? 1 : 0)],\n            }\n          );\n        }\n      }\n    });\n  },\n  mergeTd(editor: EditorType) {\n    const isOnlyOne = TableLogic.getSelectedTdsSize(editor) == 1;\n\n    const selectedTd = TableLogic.getFirstSelectedTd(editor);\n    if (!selectedTd || isOnlyOne == null) return;\n\n    const tbody = Editor.above(editor, {\n      at: selectedTd[1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type == CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n\n    const selectedTds = TdLogic.getSelectedTdInTdMap(tbody);\n    if (!selectedTds) return;\n    const tbodyPath = tbody[1];\n    const tds = Array.from(selectedTds?.keys());\n\n    tds.sort((a, b) => {\n      if (a.row > b.row) {\n        return 1;\n      }\n      if (a.row == b.row) {\n        return a.col - b.col;\n      }\n      return -1;\n    });\n\n    let firstTd = tds[0];\n    let maxColSpan = 0,\n      maxRowSpan = 0;\n    tds.forEach((td) => {\n      maxColSpan = Math.max(maxColSpan, td.colSpan + td.col - firstTd.col);\n      maxRowSpan = Math.max(maxRowSpan, td.rowSpan + td.row - firstTd.row);\n    });\n\n    const newTdPath = [...tbodyPath, firstTd.originRow, firstTd.originCol];\n    Transforms.setNodes(\n      editor,\n      {\n        colSpan: maxColSpan,\n        rowSpan: maxRowSpan,\n      },\n      { at: newTdPath }\n    );\n\n    const toBeDeletedTdsPath: Path[] = [];\n    const toBeAddedChildren: Descendant[] = [];\n    tds.forEach((td, i) => {\n      const tdPath = [...tbodyPath, td.originRow, td.originCol];\n      toBeDeletedTdsPath.unshift(tdPath);\n      if (Editor.string(editor, tdPath, { voids: true }) === \"\") return;\n      toBeAddedChildren.push(...td.children);\n    });\n    // 需要把区域内的td全部删掉，然后再插入一个克隆版本的新TD\n    const firstTdClone = _.cloneDeep(\n      _.merge({}, Editor.node(editor, newTdPath)[0], {\n        toBeDeleted: null,\n        children: toBeAddedChildren,\n      })\n    );\n\n    Editor.withoutNormalizing(editor, () => {\n      toBeDeletedTdsPath.forEach((path) => {\n        Transforms.removeNodes(editor, {\n          at: path,\n        });\n      });\n      Transforms.insertNodes(editor, firstTdClone, { at: newTdPath });\n    });\n\n    TableLogic.resetSelectedTds(editor);\n  },\n  deleteTable(editor: EditorType) {\n    const table = getEditingOrSelectedTdBelongTable(editor);\n    if (!table) return;\n    Transforms.removeNodes(editor, { at: table[1] });\n    TableLogic.resetSelectedTds(editor);\n  },\n  copyTable(editor: EditorType) {\n    const table = getEditingOrSelectedTdBelongTable(editor);\n    if (!table) return;\n\n    TdLogic.deselectAllTd(editor);\n\n    const copyedTable = _.cloneDeep(Editor.node(editor, table[1])?.[0]);\n    if (!copyedTable) return;\n\n    Transforms.insertNodes(editor, copyedTable, {\n      at: Path.next(table[1]),\n    });\n  },\n  getSelectedTdsPath(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const pathArr = [];\n    for (const tdStrPath of selectedTds) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      pathArr.push(path);\n    }\n    return pathArr;\n  },\n  getSelectedTds(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const tdArr = [];\n    for (const tdStrPath of selectedTds) {\n      const path: Path = tdStrPath.split(\",\").map((o) => +o);\n      const td = Editor.node(editor, path);\n      tdArr.push(td);\n    }\n    return tdArr;\n  },\n  getFirstSelectedTd(editor: EditorType) {\n    const selectedTds = getStrPathSetOfSelectedTds(editor);\n    const arr = Array.from(selectedTds).sort((a, b) =>\n      a > b ? 1 : a === b ? 0 : -1\n    );\n    if (arr.length == 0) return null;\n\n    const path: Path = arr[0].split(\",\").map((o) => +o);\n    const td = Editor.node(editor, path);\n    return td;\n  },\n  // 获取当前光标所处的td\n  getEditingTd(editor: EditorType) {\n    const [match] = Editor.nodes(editor, {\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n      mode: \"lowest\",\n    });\n    return match;\n  },\n  getEditingTdsPath(editor: EditorType): Set<string> {\n    return getEditingTdsPath(editor);\n  },\n  getSelectedTdsSize(editor: EditorType) {\n    return getStrPathSetOfSelectedTds(editor).size;\n  },\n  resetSelectedTds(editor: EditorType) {\n    const tdsPath = Array.from(\n      Editor.nodes(editor, {\n        at: [],\n        match(n) {\n          return TableLogic.isSelectedTd(n);\n        },\n      })\n    ).map((o) => o[1].join(\",\"));\n\n    setStrPathSetOfSelectedTds(new Set(tdsPath));\n\n    const editingTdsPath = Array.from(\n      Editor.nodes(editor, {\n        at: [],\n        match(n) {\n          return TableLogic.isTd(n) && n.start == true;\n        },\n      })\n    ).map((o) => o[1].join(\",\"));\n\n    setEditingTdsPath(new Set(editingTdsPath));\n  },\n  copyCells(editor: EditorType) {\n    const selectedTds = TableLogic.getSelectedTds(editor);\n    setCopyedCells(\n      selectedTds.sort((a, b) => {\n        const [arow, acol] = a[1].slice(a[1].length - 2);\n        const [brow, bcol] = b[1].slice(b[1].length - 2);\n        return arow > brow ? 1 : arow === brow ? acol - bcol : -1;\n      })\n    );\n    const tbody = Editor.above(editor, {\n      at: selectedTds[0][1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    const tds = Array.from(\n      TdLogic.getSelectedTdInTdMap(tbody)?.keys() || ([] as customTdShape[])\n    );\n    const { startPoins } = TdLogic.getTdMap(tbody);\n    let areaWidth = 0,\n      areaHeight = 0;\n    tds.forEach((td) => {\n      const { row, col } = td;\n      areaWidth = Math.max(\n        col + (td.colSpan || 1) - startPoins[0].col,\n        areaWidth\n      );\n      areaHeight = Math.max(\n        row + (td.rowSpan || 1) - startPoins[0].row,\n        areaHeight\n      );\n    });\n    setCopyedMaxRowAndCol({\n      copyedAreaWidth: areaWidth,\n      copyedAreaHeight: areaHeight,\n    });\n  },\n  isSelectTableAllTd(editor: EditorType) {\n    const tds = TableLogic.getSelectedTds(editor);\n    if (tds.length <= 0) return false;\n\n    const td = tds[0];\n    const [table] = Editor.nodes(editor, {\n      at: td[1],\n      match(n) {\n        return TableLogic.isTable(n);\n      },\n    });\n    if (!table) return false;\n\n    const tdLength = Array.from(Node.descendants(table[0])).filter((node) => {\n      return node[0].type === CET.TD;\n    }).length;\n\n    return tdLength === tds.length;\n  },\n  pasteCells(editor: EditorType) {\n    const copyedContent = getCopyedContent();\n    const copyedCells = getCopyedCells();\n    if (copyedContent && !copyedCells) {\n      // 将复制的内容全部加入到选择的td中\n      const selectedTdsPath = Array.from(TableLogic.getSelectedTdsPath(editor));\n      TdLogic.clearTd(editor);\n      for (const path of selectedTdsPath) {\n        Transforms.insertNodes(\n          editor,\n          _.cloneDeep(utils.filterCopyedContent(copyedContent)),\n          {\n            at: [...path, 0],\n          }\n        );\n        Transforms.removeNodes(editor, {\n          at: [...path, Array.from(Node.children(editor, path)).length - 1],\n        });\n      }\n      return;\n    }\n    // 检查复制的单元格区域能否完全覆盖目标区域\n    if (!copyedCells) return;\n    const { copyedAreaWidth: areaWidth, copyedAreaHeight: areaHeight } =\n      getCopyedMaxRowAndCol();\n    const selectedTds = Array.from(TableLogic.getSelectedTds(editor));\n    const tbody = Editor.above(editor, {\n      at: selectedTds[0][1],\n      mode: \"lowest\",\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TBODY;\n      },\n    });\n    if (!tbody) return;\n    // 如果复制的单元格只有一个，那么将选中的单元格的内容全部替换成复制的单元格内容\n    if (copyedCells.length == 1) {\n      const copyedTd = copyedCells[copyedCells.length - 1];\n      if (!copyedTd) return;\n      selectedTds.forEach((td) => {\n        let childLength = td[0].children.length;\n        Transforms.insertNodes(editor, _.cloneDeep(copyedTd[0].children), {\n          at: [...td[1], 0],\n        });\n        for (const [, childP] of Node.children(editor, td[1], {\n          reverse: true,\n        })) {\n          if (childLength-- == 0) break;\n          Transforms.removeNodes(editor, {\n            at: childP,\n          });\n        }\n      });\n      return;\n    }\n    const { tdMap, startPoins } = TdLogic.getTdMap(tbody);\n    const startPoint = startPoins[0];\n    if (\n      startPoint.row + areaHeight > tdMap.length ||\n      startPoint.col + areaWidth > tdMap[0].length\n    ) {\n      message.error(\"无法完整覆盖目标区域\");\n      return false;\n    }\n    const waitToDeleteTdsPath = [];\n    // 验证覆盖区域是否合法\n    for (\n      let row = startPoint.row;\n      row < tdMap.length && row < startPoint.row + areaHeight;\n      row++\n    ) {\n      for (\n        let col = startPoint.col;\n        col < tdMap[0].length && col < startPoint.col + areaWidth;\n        col++\n      ) {\n        const td = tdMap[row][col];\n        waitToDeleteTdsPath.unshift([td.originRow, td.originCol]);\n        if (\n          td.col < startPoint.col ||\n          td.col + td.colSpan > startPoint.col + areaWidth ||\n          td.row < startPoint.row ||\n          td.row + td.rowSpan > startPoint.row + areaHeight\n        ) {\n          message.error(\"无法完整覆盖目标区域\");\n          return false;\n        }\n      }\n    }\n\n    // 缓存之前复制的td\n    _.uniqWith(waitToDeleteTdsPath, (a, b) => {\n      return a.join(\",\") === b.join(\",\");\n    }).forEach((path) => {\n      Transforms.removeNodes(editor, { at: [...tbody[1], ...path] });\n    });\n\n    let minRow = copyedCells.slice().reduce((p, c) => {\n      return Math.min(p, c[1][c[1].length - 2]);\n    }, Infinity);\n\n    for (\n      let row = startPoint.row, nowCopyedCellsRow = minRow;\n      row < startPoint.row + areaHeight;\n      row++, nowCopyedCellsRow++\n    ) {\n      const td = tdMap[row][startPoint.col];\n      const insertTds: any[] = [];\n      copyedCells.forEach((td) => {\n        const path = td[1];\n        if (path[path.length - 2] === nowCopyedCellsRow) {\n          insertTds.push({\n            ...td[0],\n            selected: false,\n            start: false,\n          });\n        }\n      });\n      insertTds.length > 0 &&\n        Transforms.insertNodes(editor, _.cloneDeep(insertTds), {\n          at: [...tbody[1], row, td.originCol],\n        });\n    }\n\n    TdLogic.deselectAllTd(editor);\n    TableLogic.resetSelectedTds(editor);\n  },\n};\n","/* eslint-disable eqeqeq */\nimport {\n  Transforms,\n  Range,\n  Text,\n  Element,\n  Editor,\n  Node,\n  NodeEntry,\n  Path,\n  Descendant,\n} from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { CET, EditorType, Marks } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\n\nexport const ListLogic = {\n  toggleList(editor: EditorType, type: CET.NORMAL_LIST | CET.NUMBER_LIST) {\n    // 判断当前是不是列表形态\n    const [text] = Editor.nodes(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return Text.isText(n) || Editor.isInline(editor, n);\n      },\n    });\n    if (!text) return;\n    const textWrapper = Editor.parent(editor, text[1]);\n    if (!textWrapper) return;\n    const twParent = Editor.parent(editor, textWrapper[1]);\n    const li = ListLogic.isListItem(twParent[0]) && twParent;\n    const liParent = li && utils.getParent(editor, li[1]);\n\n    const isSameTypeToggle =\n      li &&\n      liParent &&\n      Element.isElement(liParent[0]) &&\n      liParent?.[0].type == type;\n    // 是否改变列表类型\n    const isChangeListType = li && !isSameTypeToggle;\n    // 是否删除列表\n    const isCancelList = li && isSameTypeToggle;\n    // 是否设置为列表\n    const isSetToList = !li;\n\n    const cancelList = () => {\n      Transforms.unwrapNodes(editor, {\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n    };\n\n    const changeListType = () => {\n      Editor.withoutNormalizing(editor, () => {\n        const parents = new Set<string>();\n        const selectedListItems = Editor.nodes(editor, {\n          mode: \"lowest\",\n          match(n) {\n            return ListLogic.isListItem(n);\n          },\n        });\n        for (const [, path] of selectedListItems) {\n          const parent = utils.getParent(editor, path);\n          parent[0] != null && parents.add(parent[1].join(\"-\"));\n        }\n        parents.forEach((value) => {\n          const p = value.split(\"-\").map((o) => +o);\n          Transforms.setNodes(\n            editor,\n            {\n              type,\n            },\n            {\n              at: p,\n              hanging: true,\n            }\n          );\n        });\n      });\n    };\n\n    const setList = () => {\n      Editor.withoutNormalizing(editor, () => {\n        const elementsInRange = Array.from(\n          Editor.nodes(editor, {\n            reverse: true,\n            mode: \"lowest\",\n            match(n) {\n              return utils.isTextWrapper(n);\n            },\n          })\n        );\n\n        for (const [, path] of elementsInRange) {\n          if (path.length == 0) continue;\n          const [parent] = utils.getParent(editor, path);\n          if (ListLogic.isListItem(parent)) continue;\n          Transforms.wrapNodes(\n            editor,\n            {\n              type: CET.LIST_ITEM,\n              children: [],\n            },\n            { at: path }\n          );\n          if (!ListLogic.isOrderList(parent)) {\n            Transforms.wrapNodes(\n              editor,\n              {\n                type,\n                children: [],\n              },\n              { at: path }\n            );\n          }\n        }\n      });\n    };\n\n    if (isCancelList) {\n      cancelList();\n    } else if (isChangeListType) {\n      changeListType();\n    } else if (isSetToList) {\n      setList();\n    }\n  },\n  isInLi(editor: EditorType) {\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      return utils.getFirstAboveElementType(editor) == CET.LIST_ITEM;\n    }\n    if (!editor.selection) return false;\n\n    const {\n      focus: { path: fPath },\n      anchor: { path: aPath },\n    } = editor.selection;\n\n    let rel = Editor.above(editor, {\n      at: fPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    rel = Editor.above(editor, {\n      at: aPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    return false;\n  },\n  isInList(editor: EditorType) {\n    if (!editor.selection) return false;\n\n    const {\n      focus: { path: fPath },\n      anchor: { path: aPath },\n    } = editor.selection;\n\n    let rel = Editor.above(editor, {\n      at: fPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    rel = Editor.above(editor, {\n      at: aPath,\n      match(n) {\n        return ListLogic.isListItem(n);\n      },\n    });\n\n    if (rel) return true;\n\n    return false;\n  },\n  isListItem(node: Node): node is Element {\n    return Element.isElement(node) && [CET.LIST_ITEM].includes(node.type);\n  },\n  isOrderList(node: Node | null | undefined): node is Element {\n    return (\n      Element.isElement(node) &&\n      [CET.NUMBER_LIST, CET.NORMAL_LIST].includes(node.type)\n    );\n  },\n  normalizeList(editor: EditorType, nodeEntry: NodeEntry) {\n    const [node, path] = nodeEntry;\n\n    if (ListLogic.isListItem(node)) {\n      // 如果有多个textWrapper，那么从第二个开始就包裹成li\n      if (node.children.length > 1) {\n        Editor.withoutNormalizing(editor, () => {\n          const nextPath = [...path, 1];\n          const texts = Array.from(\n            Editor.nodes(editor, {\n              at: nextPath,\n              match(n) {\n                return Text.isText(n) || Editor.isInline(editor, n);\n              },\n            })\n          );\n\n          Transforms.wrapNodes(\n            editor,\n            {\n              type: CET.LIST_ITEM,\n              children: [],\n            },\n            {\n              at: nextPath,\n            }\n          );\n\n          Transforms.removeNodes(editor, {\n            at: [...nextPath, 0],\n          });\n          Transforms.insertNodes(\n            editor,\n            {\n              type: CET.DIV,\n              children: texts.map((t) => t[0]) as Descendant[],\n            },\n            {\n              at: [...nextPath, 0],\n            }\n          );\n          Transforms.liftNodes(editor, { at: nextPath });\n          Transforms.select(editor, Editor.start(editor, Path.next(path)));\n        });\n        return true;\n      }\n\n      // 如果父元素不是list，那么unwrap li 组件\n      if (!ListLogic.isOrderList(Editor.parent(editor, path)?.[0])) {\n        Editor.withoutNormalizing(editor, () => {\n          Transforms.unwrapNodes(editor, { at: path });\n          Transforms.select(editor, Editor.start(editor, path));\n        });\n        return true;\n      }\n\n      // li里只允许有textWrapper包裹的inline元素\n      for (const [child, childP] of Node.children(editor, nodeEntry[1], {\n        reverse: true,\n      })) {\n        if (ListLogic.isOrderList(child)) {\n          Transforms.liftNodes(editor, { at: childP });\n          return true;\n        }\n        if (!utils.isTextWrapper(child)) {\n          Editor.withoutNormalizing(editor, () => {\n            const texts = Array.from(\n              Editor.nodes(editor, {\n                at: Editor.range(editor, childP),\n                match(n) {\n                  return Text.isText(n) || Editor.isInline(editor, n);\n                },\n              })\n            );\n            Transforms.wrapNodes(\n              editor,\n              {\n                type: CET.DIV,\n                children: [],\n              },\n              {\n                at: childP,\n              }\n            );\n            Transforms.removeNodes(editor, {\n              at: [...childP, 0],\n            });\n            Transforms.insertNodes(\n              editor,\n              texts.map((t) => t[0]),\n              { at: [...childP, 0] }\n            );\n          });\n          return true;\n        }\n      }\n\n      // 如果所有的text都是一样的Color，那么设置li的color也为该color\n      const colors = new Set();\n      for (const [child] of Node.texts(node)) {\n        colors.add(child[Marks.Color]);\n      }\n      if (colors.size == 1) {\n        const onlyColor = Array.from(colors).pop();\n        onlyColor &&\n          Transforms.setNodes(editor, { [Marks.Color]: onlyColor }, { at: path });\n        return;\n      }\n    }\n\n    if (ListLogic.isOrderList(node)) {\n      // 如果自己跟前一个节点都是列表节点，那么将前一个改成和自己一样\n      const prePath = utils.getPath(path, \"pre\");\n      const [preNode] = utils.getNodeByPath(editor, prePath);\n\n      if (ListLogic.isOrderList(preNode) && preNode.type != node.type) {\n        Transforms.setNodes(editor, { type: node.type }, { at: prePath });\n        return true;\n      }\n\n      // 合并前一个相同的列表元素\n      if (ListLogic.isOrderList(preNode) && preNode.type == node.type) {\n        Transforms.mergeNodes(editor, { at: path });\n        return true;\n      }\n\n      const nextPath = utils.getPath(path, \"next\");\n      const [nextNode] = utils.getNodeByPath(editor, nextPath);\n\n      // 如果自己跟后一个节点都是列表节点，那么将自己的类型改成和它一样\n      if (ListLogic.isOrderList(nextNode) && nextNode.type != node.type) {\n        Transforms.setNodes(editor, { type: nextNode.type }, { at: nextPath });\n        return true;\n      }\n\n      // 合并后一个相同的列表元素\n      if (ListLogic.isOrderList(nextNode) && nextNode.type == node.type) {\n        Transforms.mergeNodes(editor, { at: nextPath });\n        return true;\n      }\n\n      // 如果只有一个列表子节点，那么将自己变成和子节点一样的类型\n      if (node.children.length == 1) {\n        const [onlyChild] = Node.first(node, [0]);\n        if (ListLogic.isOrderList(onlyChild) && onlyChild.type != node.type) {\n          Transforms.setNodes(editor, { type: onlyChild.type }, { at: path });\n          return true;\n        }\n      }\n\n      for (const [child, childP] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        // 如果不为li元素，则提升\n        if (!ListLogic.isListItem(child) && !ListLogic.isOrderList(child)) {\n          Transforms.liftNodes(editor, { at: childP });\n          return true;\n        }\n      }\n\n      // 如果没有符合条件的子元素，那么删除此列表元素\n      let childCount = 0; // li,ul,ol数量\n      for (const [child] of Node.children(editor, path, {\n        reverse: true,\n      })) {\n        if (ListLogic.isOrderList(child) || ListLogic.isListItem(child)) {\n          childCount++;\n        }\n      }\n      if (childCount == 0) {\n        Transforms.removeNodes(editor, { at: path });\n        return true;\n      }\n    }\n    return false;\n  },\n  tabEvent(editor: EditorType) {\n    Editor.withoutNormalizing(editor, () => {\n      const selectedListItems = Editor.nodes(editor, {\n        universal: true,\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n\n      for (const [n, p] of selectedListItems) {\n        ListLogic.indentLi(editor, [n, p]);\n      }\n    });\n  },\n  indentLi(editor: EditorType, liEntry: NodeEntry) {\n    Editor.withoutNormalizing(editor, () => {\n      const [li] = liEntry;\n      const p = ReactEditor.findPath(editor, li);\n\n      const nextNode = utils.getNodeByPath(editor, utils.getPath(p, \"next\"));\n      const parent = utils.getParent(editor, p);\n      if (nextNode.length > 0 && ListLogic.isOrderList(nextNode?.[0])) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: nextNode[0].type,\n            children: [],\n          },\n          { at: p }\n        );\n      } else if (parent.length > 0 && ListLogic.isOrderList(parent?.[0])) {\n        Transforms.wrapNodes(\n          editor,\n          {\n            type: parent[0].type,\n            children: [],\n          },\n          { at: p }\n        );\n      }\n    });\n  },\n  shiftTabEvent(editor: EditorType) {\n    Editor.withoutNormalizing(editor, () => {\n      const selectedListItems = Editor.nodes(editor, {\n        universal: true,\n        reverse: true,\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n\n      for (const [n, p] of selectedListItems) {\n        ListLogic.liftLi(editor, [n, p]);\n      }\n    });\n  },\n  liftLi(editor: EditorType, liEntry: NodeEntry) {\n    const [, liPath] = liEntry;\n    const [parent, pp] = utils.getParent(editor, liPath);\n    const [parentParent] = parent && utils.getParent(editor, pp);\n\n    if (ListLogic.isOrderList(parentParent)) {\n      Transforms.liftNodes(editor, {\n        at: liPath,\n      });\n    }\n  },\n};\n","/* eslint-disable eqeqeq */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Checkbox } from \"antd\";\nimport { Editor, Element, Node, NodeEntry, Text, Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport { CET, EditorType } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\n\nexport const TodoListComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n\n  const renderFather = () => {\n    const attrs = {\n      ...attributes,\n      style: {\n        ...utils.getTextAlignStyle(element.textAlign),\n      },\n    };\n    switch (element.childrenWrapper || \"div\") {\n      case \"div\":\n        return <div {...attrs}>{renderChild()}</div>;\n      case \"h1\":\n        return <h1 {...attrs}>{renderChild()}</h1>;\n      case \"h2\":\n        return <h2 {...attrs}>{renderChild()}</h2>;\n      case \"h3\":\n        return <h3 {...attrs}>{renderChild()}</h3>;\n      case \"h4\":\n        return <h4 {...attrs}>{renderChild()}</h4>;\n    }\n  };\n\n  const renderChild = () => {\n    return (\n      <>\n        <span contentEditable={false} style={{ marginRight: 4 }}>\n          <Checkbox\n            checked={element.checked}\n            onChange={(e) => {\n              Transforms.setNodes(\n                editor,\n                {\n                  checked: e.target.checked,\n                },\n                {\n                  at: ReactEditor.findPath(editor, element),\n                }\n              );\n            }}\n            disabled={readOnly}\n          ></Checkbox>\n        </span>\n        <span>{children}</span>\n      </>\n    );\n  };\n\n  return renderFather();\n};\n\nexport const ToDoListLogic = {\n  isTodoList(node: Node) {\n    return Element.isElement(node) && node.type === CET.TODOLIST;\n  },\n  isInToDoList(editor: EditorType) {\n    return ToDoListLogic.getToDoList(editor) != null;\n  },\n  getToDoList(editor: EditorType) {\n    return Editor.above(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type === CET.TODOLIST;\n      },\n    });\n  },\n  normalizeToDoList(editor: EditorType, nodeEntry: NodeEntry): boolean {\n    if (Element.isElement(nodeEntry[0]) && nodeEntry[0].type === CET.TODOLIST) {\n      for (const [child, childP] of Node.descendants(nodeEntry[0], {\n        reverse: true,\n      })) {\n        if (!(Text.isText(child) || Editor.isInline(editor, child))) {\n          Editor.withoutNormalizing(editor, () => {\n            const texts = Array.from(\n              Editor.nodes(editor, {\n                at: Editor.range(editor, childP),\n                match(n) {\n                  return Text.isText(n) || Editor.isInline(editor, n);\n                },\n              })\n            );\n            Transforms.removeNodes(editor, {\n              at: [...nodeEntry[1], ...childP],\n            });\n            Transforms.insertNodes(\n              editor,\n              texts.map((t) => t[0]),\n              {\n                at: Editor.end(editor, nodeEntry[1]),\n              }\n            );\n          });\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * 避免在todoList里按home键时，光标消失的问题\n   * @param e\n   * @param editor\n   */\n  handleKeyDown(e: KeyboardEvent, editor: EditorType) {\n    const isInToDoList = ToDoListLogic.getToDoList(editor);\n    if (isInToDoList && e.key === \"Home\" && e.shiftKey == false) {\n      e.preventDefault();\n      Transforms.select(editor, Editor.start(editor, isInToDoList[1]));\n    }\n  },\n};\n","import { Tooltip, Button } from \"antd\";\nimport { CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\n\nexport const StaticButton: React.FC<{\n  title: string;\n  mousedownFunc: (e: any) => void;\n  disabled?: boolean;\n  cypressId?: CypressFlagValues;\n}> = (props) => {\n  return (\n    <Tooltip\n      title={props.title}\n      mouseEnterDelay={0}\n      mouseLeaveDelay={0}\n      getPopupContainer={(e) => {\n        return utils.findParentByClassName(e, \"cyEditor\") || document.body;\n      }}\n    >\n      <Button\n        className=\"cyEditor__toolbar__button\"\n        type={\"text\"}\n        disabled={props.disabled}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          props.mousedownFunc(e);\n        }}\n      >\n        <span {...utils.insertCypressId(props, \"cypressId\")}>\n          {props.children}\n        </span>\n      </Button>\n    </Tooltip>\n  );\n};\n","import Icon from \"@ant-design/icons\";\nimport { Transforms, Editor } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CypressFlagValues, EditorType, Marks } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { ListLogic } from \"../../ListComp\";\nimport { TableLogic } from \"../../Table\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { StaticButton } from \"../common/StaticButton\";\n\nexport const cleanFormat = (editor: EditorType) => {\n  const tds = TableLogic.getSelectedTds(editor);\n  if (tds.length > 0) {\n    for (const td of tds) {\n      Transforms.unsetNodes(editor, Object.values(Marks), { at: td[1] });\n    }\n    return;\n  }\n\n  for (const mark of Object.values(Marks)) {\n    Editor.removeMark(editor, mark);\n  }\n  const all = Editor.nodes(editor, {\n    match(n) {\n      return (\n        ListLogic.isListItem(n) ||\n        TableLogic.isTd(n) ||\n        ToDoListLogic.isTodoList(n) ||\n        utils.isTextWrapper(n)\n      );\n    },\n  });\n  for (const el of all) {\n    Transforms.unsetNodes(editor, Object.values(Marks), { at: el[1] });\n  }\n\n  Transforms.deselect(editor);\n};\n\nexport const CleanFormatButton: React.FC<{}> = () => {\n  const editor = useSlateStatic();\n  return (\n    <StaticButton\n      title=\"清除格式\"\n      mousedownFunc={() => {\n        cleanFormat(editor);\n      }}\n      cypressId={CypressFlagValues.CLEAN_FORMAT}\n    >\n      <Icon\n        component={() => (\n          <svg\n            viewBox=\"0 0 1084 1024\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            p-id=\"853\"\n            width=\"14\"\n            height=\"14\"\n          >\n            <defs>\n              <style type=\"text/css\"></style>\n            </defs>\n            <path\n              d=\"M719.329882 422.249412l-255.578353 255.578353 234.315295 234.315294 255.518117-255.638588-234.315294-234.255059zM59.151059 315.813647l298.164706-298.164706a60.235294 60.235294 0 0 1 85.172706 0l596.329411 596.329412a60.235294 60.235294 0 0 1 0 85.172706l-298.164706 298.164706a60.235294 60.235294 0 0 1-85.232941 0l-596.329411-596.329412a60.235294 60.235294 0 0 1 0-85.172706z\"\n              fill=\"#333333\"\n              p-id=\"854\"\n            ></path>\n          </svg>\n        )}\n      ></Icon>\n    </StaticButton>\n  );\n};\n","export const ToolBarConfig = {\n    calcStatusDelay:50\n}","import { FormatPainterOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nimport { useContext, useState, useRef, useEffect, useMemo } from \"react\";\nimport { Editor, Element, Range } from \"slate\";\nimport { useSlate } from \"slate-react\";\nimport { CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { EditorContext } from \"../../../RichEditor\";\nimport { TableLogic } from \"../../Table\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ToolBarConfig } from \"../common/config\";\nimport { StaticButton } from \"../common/StaticButton\";\n\nvar isMounted = false;\n\nexport const CopyFormatButton: React.FC<{}> = (props) => {\n  const editor = useSlate();\n  const { setSavedMarks } = useContext(EditorContext);\n  const [disabled, setDisabled] = useState(false);\n  const ref = useRef<any>({\n    isDisabled: _.debounce(() => {\n      const hasSelectSingleTd = TableLogic.getSelectedTdsSize(editor) === 1;\n      const isSelectionExpanded =\n        editor.selection != null && Range.isExpanded(editor.selection);\n      // 允许格式刷的条件：只选择了单个单元格或者有文字选择区域\n      isMounted && setDisabled(!(hasSelectSingleTd || isSelectionExpanded));\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    ref.current.isDisabled();\n  });\n\n  const copyMark = () => {\n    try {\n      const isNotOnlyOne = TableLogic.getSelectedTdsSize(editor) > 1;\n      const td = TableLogic.getFirstSelectedTd(editor);\n      if (td && !isNotOnlyOne && Element.isElement(td[0])) {\n        setSavedMarks(td[0] || null);\n        return;\n      }\n      if (!editor.selection) return null;\n      const marks = Editor.marks(editor);\n      const textWrapper = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n) || ToDoListLogic.isTodoList(n);\n        },\n      });\n      if (textWrapper) setSavedMarks({ ...marks, ...textWrapper[0] } || null);\n      else setSavedMarks(marks || null);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n  return useMemo(() => {\n    return (\n      <StaticButton\n        title=\"格式刷\"\n        disabled={disabled}\n        mousedownFunc={() => {\n          copyMark();\n        }}\n        cypressId={CypressFlagValues.COPY_FORMAT}\n      >\n        <FormatPainterOutlined />\n      </StaticButton>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disabled]);\n};\n","import { Tooltip, Select } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { CypressFlagValues, EditorType } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { ToolBarConfig } from \"./config\";\n\nvar isMounted = false;\n\nexport const ValueSelector = (props: {\n  options: (string | number)[];\n  optionLabelRender?: (value: string | number) => any;\n  title: string;\n  getValue: (editor: EditorType) => any;\n  afterSelect?: (value: string | number) => void;\n  cypressId?: CypressFlagValues;\n}) => {\n  const editor = useSlate();\n  const [visible, setVisible] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const toolDom = useRef<any>();\n  const ref = useRef<any>({\n    getValue: _.debounce(() => {\n      isMounted && setValue(props.getValue(editor));\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    ref.current.getValue();\n  });\n  return useMemo(() => {\n    return (\n      <Tooltip\n        title={props.title}\n        zIndex={99}\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        getPopupContainer={(e) => {\n          return utils.findParentByClassName(e, \"cyEditor\") || document.body;\n        }}\n      >\n        <div\n          ref={toolDom}\n          style={{\n            width: 100,\n            position: \"relative\",\n          }}\n          className=\"cyEditor__toolbar__button\"\n          onMouseLeave={() => {\n            setVisible(false);\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              zIndex: 1,\n              cursor: \"pointer\",\n            }}\n            onMouseDown={(e) => {\n              e.preventDefault();\n              setVisible(!visible);\n            }}\n            {...utils.insertCypressId(props, \"cypressId\")}\n          ></div>\n          <Select\n            placeholder={props.title}\n            value={value}\n            bordered={false}\n            style={{ width: \"100%\" }}\n            open={visible}\n            dropdownClassName=\"cyEditor__toolbar__dropdown\"\n            getPopupContainer={(triggerNode) =>\n              triggerNode.parentElement || document.body\n            }\n            onSelect={(value) => {\n              ReactEditor.focus(editor);\n              props?.afterSelect?.(value);\n              setVisible(false);\n            }}\n            dropdownMatchSelectWidth={false}\n          >\n            {props.options.map((value) => {\n              return (\n                <Select.Option value={String(value)} key={value}>\n                  {props?.optionLabelRender?.(value) || value}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </div>\n      </Tooltip>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible, value]);\n};\n","import { Editor, Element, Transforms } from \"slate\";\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\nimport {\n  CypressFlagValues,\n  Marks,\n  TextAlignEnum,\n} from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ValueSelector } from \"../common/ValueSelector\";\n\nexport const TextAlignButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ValueSelector\n      getValue={(editor) => {\n        const td = TableLogic.getFirstSelectedTd(editor);\n        if (td && Element.isElement(td[0])) {\n          return td[0][Marks.TextAlign] || \"左对齐\";\n        }\n\n        const [node] = Editor.nodes(editor, {\n          match(n) {\n            return utils.isTextWrapper(n) || ToDoListLogic.isTodoList(n);\n          },\n        });\n        if (!node) return \"左对齐\";\n        const textAlign = Element.isElement(node[0]) && node[0].textAlign;\n        return textAlign === false || textAlign == null\n          ? TextAlignEnum.LEFT\n          : textAlign;\n      }}\n      options={[\n        TextAlignEnum.LEFT,\n        TextAlignEnum.RIGHT,\n        TextAlignEnum.X_CENTER,\n      ]}\n      optionLabelRender={(value) => {\n        if (value === TextAlignEnum.LEFT) return \"左对齐\";\n        if (value === TextAlignEnum.RIGHT) return \"右对齐\";\n        if (value === TextAlignEnum.X_CENTER) return \"水平居中\";\n        if (value === TextAlignEnum.Y_CENTER) return \"垂直居中\";\n        if (value === TextAlignEnum.XY_CENTER) return \"水平垂直居中\";\n        return `${value}`;\n      }}\n      title=\"对齐方式\"\n      cypressId={CypressFlagValues.SET_FONT_ALIGN}\n      afterSelect={(value) => {\n        ReactEditor.focus(editor);\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              { textAlign: value },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Transforms.setNodes(\n          editor,\n          { textAlign: value },\n          {\n            mode: \"lowest\",\n            match(n) {\n              return utils.isTextWrapper(n) || ToDoListLogic.isTodoList(n);\n            },\n          }\n        );\n      }}\n    ></ValueSelector>\n  );\n};\n","import { Transforms, Editor, Element } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CypressFlagValues, EditorType, Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ValueSelector } from \"../common/ValueSelector\";\n\nconst getMarkValue = (editor: EditorType, mark: Marks) => {\n  try {\n    const td = TableLogic.getFirstSelectedTd(editor);\n    if (td && Element.isElement(td[0])) {\n      return td[0][mark];\n    }\n    if (!editor.selection) return null;\n    const marks = Editor.marks(editor);\n    return marks?.[mark];\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nexport const FontSizeButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ValueSelector\n      getValue={(editor) => {\n        return String(getMarkValue(editor, Marks.FontSize) || 14);\n      }}\n      options={[12, 13, 14, 15, 16, 19, 22, 24, 29, 32, 40, 48]}\n      optionLabelRender={(value) => {\n        return `${value}px`;\n      }}\n      title=\"字体大小\"\n      cypressId={CypressFlagValues.SET_FONT_SIZE}\n      afterSelect={(value) => {\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              {\n                [Marks.FontSize]: Number(value),\n              },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Editor.addMark(editor, Marks.FontSize, Number(value));\n      }}\n    ></ValueSelector>\n  );\n};\n","import { Editor, Element, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { EditorType, CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ValueSelector } from \"../common/ValueSelector\";\n\nexport const FontTypeButton = () => {\n  const editor = useSlateStatic();\n\n  const setTextWrapper = (type: CET) => {\n    const tds = TableLogic.getSelectedTds(editor);\n    if (tds.length > 0) {\n      tds.forEach((td) => {\n        Transforms.setNodes(\n          editor,\n          {\n            type,\n          },\n          {\n            at: td[1],\n            match(n) {\n              return utils.isTextWrapper(n);\n            },\n          }\n        );\n      });\n    } else {\n      Transforms.setNodes(\n        editor,\n        { type: type },\n        {\n          hanging: true,\n          mode: \"lowest\",\n          match(n) {\n            return utils.isTextWrapper(n);\n          },\n        }\n      );\n\n      const todos = Array.from(\n        Editor.nodes(editor, { match: (n) => ToDoListLogic.isTodoList(n) })\n      );\n      if (todos) {\n        todos.forEach((todo) => {\n          Transforms.setNodes(\n            editor,\n            { childrenWrapper: type },\n            {\n              at: todo[1],\n            }\n          );\n        });\n      }\n    }\n  };\n\n  return (\n    <ValueSelector\n      getValue={(editor: EditorType) => {\n        const [node] = Editor.nodes(editor, {\n          match(n) {\n            return utils.isTextWrapper(n) || ToDoListLogic.isTodoList(n);\n          },\n        });\n        if (!node) return \"正文\";\n        const type =\n          Element.isElement(node[0]) &&\n          (node[0].type === CET.TODOLIST\n            ? node[0].childrenWrapper || \"正文\"\n            : node[0].type);\n        return type === \"div\" || type === false\n          ? \"正文\"\n          : String(type).toUpperCase();\n      }}\n      options={[\"H1\", \"H2\", \"H3\", \"H4\", \"正文\"]}\n      optionLabelRender={(value) => {\n        return <span>{value}</span>;\n      }}\n      title=\"字体样式\"\n      cypressId={CypressFlagValues.WRAP_FONT_COMP}\n      afterSelect={(value) => {\n        if (value === \"H1\") setTextWrapper(CET.H1);\n        if (value === \"H2\") setTextWrapper(CET.H2);\n        if (value === \"H3\") setTextWrapper(CET.H3);\n        if (value === \"H4\") setTextWrapper(CET.H4);\n        if (value === \"正文\") setTextWrapper(CET.DIV);\n      }}\n    ></ValueSelector>\n  );\n};\n","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport { useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\n\nexport const ColorPickerCore: React.FC<{\n  value: string;\n  onChange?: (color?: string) => void;\n}> = (props) => {\n  const [color, setColor] = useState<{ hex: any }>({\n    hex: props.value,\n  });\n\n  return (\n    <div\n      style={{\n        padding: 8,\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        backgroundColor: \"white\",\n        flexDirection: \"column\",\n      }}\n      className=\"cyEditor__toolbar__colorPanelWrapper\"\n    >\n      <CompactPicker\n        color={color.hex}\n        colors={[]}\n        onChange={(color) => {\n          setColor(color);\n          props?.onChange?.(color.hex);\n        }}\n      ></CompactPicker>\n      <Button\n        icon={<DeleteOutlined></DeleteOutlined>}\n        size=\"small\"\n        onClick={() => {\n          props?.onChange?.(\"unset\");\n          setColor({ hex: \"\" });\n        }}\n      >\n        重置\n      </Button>\n    </div>\n  );\n};\n","import { Tooltip, Dropdown, Button } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Editor, Element } from \"slate\";\nimport { useSlate } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ColorPickerCore } from \"./ColorPickerCore\";\nimport { ToolBarConfig } from \"./config\";\n\nvar isMounted = false;\n\nexport const ColorPicker: React.FC<{\n  title: string;\n  onChange?: (color?: string) => void;\n  icon?: any;\n  mark: Marks;\n}> = (props) => {\n  const editor = useSlate();\n  const [color, setColor] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const ref = useRef<any>({\n    _getColor: _.debounce(() => {\n      isMounted && setColor(getColor());\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  const getColor = () => {\n    const td = TableLogic.getFirstSelectedTd(editor);\n    if (td) {\n      return Element.isElement(td[0]) && (td[0][props.mark] || \"unset\");\n    }\n\n    if (!editor.selection) return \"unset\";\n    if (!props.mark) return \"unset\";\n    const marks = Editor.marks(editor);\n    return (\n      (marks && marks?.[props?.mark]) ||\n      window.getComputedStyle(document.body).color\n    );\n  };\n\n  useEffect(() => {\n    ref.current._getColor();\n  });\n\n  return useMemo(() => {\n    return (\n      <Tooltip\n        title={props.title}\n        zIndex={99}\n        mouseLeaveDelay={0}\n        mouseEnterDelay={0}\n        getPopupContainer={(e) => {\n          return utils.findParentByClassName(e, \"cyEditor\") || document.body;\n        }}\n      >\n        <div\n          onMouseLeave={() => {\n            setVisible(false);\n          }}\n        >\n          <Dropdown\n            placement=\"bottomCenter\"\n            overlayStyle={{ zIndex: 999 }}\n            visible={visible}\n            overlay={() => {\n              return (\n                <ColorPickerCore\n                  value={color}\n                  onChange={(color) => {\n                    props?.onChange?.(color);\n                    setVisible(false);\n                  }}\n                ></ColorPickerCore>\n              );\n            }}\n            trigger={[\"click\"]}\n            getPopupContainer={(triggerNode) =>\n              triggerNode.parentElement || document.body\n            }\n          >\n            <Button\n              type=\"text\"\n              style={{ color }}\n              onMouseDown={(e) => {\n                e.preventDefault();\n                setVisible(true);\n              }}\n            >\n              {props.icon}\n            </Button>\n          </Dropdown>\n        </div>\n      </Tooltip>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [color, visible]);\n};\n","import { FontColorsOutlined } from \"@ant-design/icons\";\nimport { Transforms, Editor } from \"slate\";\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ColorPicker } from \"../common/ColorPicker\";\n\nexport const FontColorButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ColorPicker\n      title=\"字体颜色\"\n      onChange={(color) => {\n        ReactEditor.focus(editor);\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              {\n                [Marks.Color]: color,\n              },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Editor.addMark(editor, Marks.Color, color);\n      }}\n      mark={Marks.Color}\n      icon={<FontColorsOutlined />}\n    ></ColorPicker>\n  );\n};\n","import { BgColorsOutlined } from \"@ant-design/icons\";\nimport { Transforms, Editor } from \"slate\";\nimport { ReactEditor, useSlateStatic } from \"slate-react\";\nimport { Marks } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ColorPicker } from \"../common/ColorPicker\";\n\nexport const FontBGColorButton = () => {\n  const editor = useSlateStatic();\n  return (\n    <ColorPicker\n      title=\"背景色\"\n      onChange={(color) => {\n        ReactEditor.focus(editor);\n        const tds = TableLogic.getSelectedTds(editor);\n        if (tds.length > 0) {\n          for (const td of tds) {\n            Transforms.setNodes(\n              editor,\n              {\n                [Marks.BGColor]: color,\n              },\n              {\n                at: td[1],\n              }\n            );\n          }\n          return;\n        }\n        if (!editor.selection) return;\n        Editor.addMark(editor, Marks.BGColor, color);\n      }}\n      mark={Marks.BGColor}\n      icon={<BgColorsOutlined />}\n    ></ColorPicker>\n  );\n};\n","import { Button, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Transforms, Editor, Element } from \"slate\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { CypressFlagValues, EditorType, Marks } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ToolBarConfig } from \"./config\";\n\nconst isMarkActive = (editor: EditorType, mark: Marks) => {\n  try {\n    const td = TableLogic.getFirstSelectedTd(editor);\n    if (td && Element.isElement(td[0])) {\n      return td[0][mark];\n    }\n\n    if (!editor.selection) return null;\n    const marks = Editor.marks(editor);\n    return marks?.[mark] === true ? true : false;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nvar isMounted = false;\n\nexport const MarkButton: React.FC<{\n  title: string;\n  mark?: Marks;\n  cypressId?: CypressFlagValues;\n}> = (props) => {\n  const editor = useSlate();\n  const [type, setType] = useState(\"text\");\n  const ref = useRef<any>({\n    getType: _.debounce(() => {\n      isMounted &&\n        setType(\n          props.mark && isMarkActive(editor, props.mark) ? \"link\" : \"text\"\n        );\n    }, ToolBarConfig.calcStatusDelay),\n  });\n\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    ref.current.getType();\n  });\n\n  const toggleMark = (mark: Marks) => {\n    // 针对选中表格的情况\n    const tds = TableLogic.getSelectedTds(editor);\n\n    if (tds.length > 0) {\n      ReactEditor.focus(editor);\n      const firstTd = tds[0][0];\n      if (!Element.isElement(firstTd)) return;\n      tds.forEach((td) => {\n        if (!Element.isElement(td[0])) return;\n        if (firstTd[mark]) {\n          Transforms.unsetNodes(editor, [mark], { at: td[1] });\n        } else {\n          Transforms.setNodes(editor, { [mark]: true }, { at: td[1] });\n        }\n      });\n      return;\n    }\n\n    if (!editor.selection) return;\n\n    const marks = Editor.marks(editor);\n\n    if (marks?.[mark]) {\n      Editor.removeMark(editor, mark);\n    } else {\n      Editor.addMark(editor, mark, true);\n    }\n  };\n\n  return useMemo(() => {\n    return (\n      <Tooltip\n        title={props.title}\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        getPopupContainer={(e) => {\n          return utils.findParentByClassName(e, \"cyEditor\") || document.body;\n        }}\n      >\n        <Button\n          className=\"cyEditor__toolbar__button\"\n          type={type as any}\n          onMouseDown={(e) => {\n            e.preventDefault();\n            props.mark && toggleMark(props.mark);\n          }}\n        >\n          <span {...utils.insertCypressId(props, \"cypressId\")}>\n            {props.children}\n          </span>\n        </Button>\n      </Tooltip>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type]);\n};\n","import { BoldOutlined } from \"@ant-design/icons\";\nimport { CypressFlagValues, Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const FontWeightButton = () => {\n  return (\n    <MarkButton\n      title=\"加粗\"\n      mark={Marks.BOLD}\n      cypressId={CypressFlagValues.SET_BOLD}\n    >\n      <BoldOutlined />\n    </MarkButton>\n  );\n};\n","import { ItalicOutlined } from \"@ant-design/icons\";\nimport { CypressFlagValues, Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const FontStyleButton = () => {\n  return (\n    <MarkButton\n      title=\"斜体\"\n      mark={Marks.ITALIC}\n      cypressId={CypressFlagValues.SET_ITALIC}\n    >\n      <ItalicOutlined />\n    </MarkButton>\n  );\n};\n","import { UnderlineOutlined } from \"@ant-design/icons\";\nimport { CypressFlagValues, Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const UnderLineButton = () => {\n  return (\n    <MarkButton\n      title=\"下划线\"\n      mark={Marks.Underline}\n      cypressId={CypressFlagValues.SET_UNDERLINE}\n    >\n      <UnderlineOutlined />\n    </MarkButton>\n  );\n};\n","import { StrikethroughOutlined } from \"@ant-design/icons\";\nimport { CypressFlagValues, Marks } from \"../../../common/Defines\";\nimport { MarkButton } from \"../common/MarkButton\";\n\nexport const LineThroughButton = () => {\n  return (\n    <MarkButton\n      title=\"删除线\"\n      mark={Marks.LineThrough}\n      cypressId={CypressFlagValues.SET_LINETHROUGH}\n    >\n      <StrikethroughOutlined />\n    </MarkButton>\n  );\n};\n","import { Button, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useSlate } from \"slate-react\";\nimport { CypressFlagValues, EditorType } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { ToolBarConfig } from \"./config\";\n\nvar isMounted = false;\n\nexport const ReactButton: React.FC<{\n  title: string | React.ReactNode;\n  mousedownFunc: (e: any) => void;\n  disabledCondition?: (editor: EditorType) => boolean;\n  cypressId?: CypressFlagValues;\n}> = (props) => {\n  const editor = useSlate();\n  const { mousedownFunc, title, disabledCondition = () => false } = props;\n  const [disabled, setDisabled] = useState(false);\n  const ref = useRef({\n    _isDisabled: _.debounce(() => {\n      isMounted && setDisabled(disabledCondition(editor));\n    }, ToolBarConfig.calcStatusDelay),\n  });\n  const buttonRef = useRef(null);\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ref.current._isDisabled = (() => {}) as any;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    ref.current._isDisabled();\n  });\n  return (\n    <div ref={buttonRef}>\n      <Tooltip\n        title={title}\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        getPopupContainer={(e) => {\n          return utils.findParentByClassName(e, \"cyEditor\") || document.body;\n        }}\n      >\n        <Button\n          className=\"cyEditor__toolbar__button\"\n          type={\"text\"}\n          disabled={disabled}\n          onMouseDown={(e) => {\n            e.preventDefault();\n            mousedownFunc(e);\n          }}\n          {...utils.insertCypressId(props, \"cypressId\")}\n        >\n          {props.children}\n        </Button>\n      </Tooltip>\n    </div>\n  );\n};\n","import { CheckSquareOutlined } from \"@ant-design/icons\";\nimport { Editor, Text, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { ListLogic } from \"../../ListComp\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const ToDoListButton = () => {\n  const editor = useSlateStatic();\n\n  const insertToDoList = () => {\n    const todos = Array.from(\n      Editor.nodes(editor, {\n        match: (n) => ToDoListLogic.isTodoList(n),\n        reverse: true,\n      })\n    );\n    // 如果当前选取里有todo组件，那么取消所有的todo\n    if (todos.length > 0) {\n      todos.forEach((todo) => {\n        Editor.withoutNormalizing(editor, () => {\n          Transforms.unwrapNodes(editor, {\n            at: todo[1],\n          });\n          Transforms.wrapNodes(\n            editor,\n            { type: CET.DIV, children: [] },\n            {\n              at: todo[1],\n              mode: \"lowest\",\n              match(n) {\n                return Text.isText(n);\n              },\n            }\n          );\n        });\n      });\n    } else {\n      // 将所有选区的内容变成todo\n      Editor.withoutNormalizing(editor, () => {\n        const textWrappers = Array.from(\n          Editor.nodes(editor, {\n            mode: \"lowest\",\n            match: (n) => utils.isTextWrapper(n),\n            reverse: true,\n          })\n        );\n        if (textWrappers.length > 0) {\n          textWrappers.forEach((textWrapper) => {\n            Transforms.wrapNodes(\n              editor,\n              {\n                type: CET.TODOLIST,\n                childrenWrapper: \"div\",\n                children: [],\n              },\n              {\n                at: textWrapper[1],\n              }\n            );\n            Transforms.unwrapNodes(editor, {\n              at: [...textWrapper[1], 0],\n            });\n            if (utils.isElementEmpty(editor, textWrapper)) {\n              Transforms.insertText(editor, \"todo...\", {\n                at: Editor.end(editor, [...textWrapper[1]]),\n              });\n            }\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"待办列表\"\n      mousedownFunc={() => {\n        insertToDoList();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null || ListLogic.isInLi(editor);\n      }}\n      cypressId={CypressFlagValues.TODO_LIST}\n    >\n      <CheckSquareOutlined />\n    </ReactButton>\n  );\n};\n","import { OrderedListOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { ListLogic } from \"../../ListComp\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const OrderListButton = () => {\n  const editor = useSlateStatic();\n\n  const setNumberList = () => {\n    ListLogic.toggleList(editor, CET.NUMBER_LIST);\n  };\n\n  return (\n    <ReactButton\n      title=\"有序列表\"\n      mousedownFunc={() => {\n        setNumberList();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null || ToDoListLogic.isInToDoList(editor);\n      }}\n      cypressId={CypressFlagValues.ORDER_LIST}\n    >\n      <OrderedListOutlined />\n    </ReactButton>\n  );\n};\n","import { UnorderedListOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, CypressFlagValues } from \"../../../common/Defines\";\nimport { ListLogic } from \"../../ListComp\";\nimport { ToDoListLogic } from \"../../TodoListComp\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const NormalListButton = () => {\n  const editor = useSlateStatic();\n\n  const setNormalList = () => {\n    ListLogic.toggleList(editor, CET.NORMAL_LIST);\n  };\n\n  return (\n    <ReactButton\n      title=\"无序列表\"\n      mousedownFunc={() => {\n        setNormalList();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null || ToDoListLogic.isInToDoList(editor);\n      }}\n      cypressId={CypressFlagValues.NORMALIZE_LIST}\n    >\n      <UnorderedListOutlined />\n    </ReactButton>\n  );\n};\n","import { LinkOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const SetLinkButton = () => {\n  const editor = useSlateStatic();\n\n  const setLink = () => {\n    const [isLinkActive] = Editor.nodes(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type === CET.LINK;\n      },\n    });\n    if (!isLinkActive) {\n      Transforms.wrapNodes(\n        editor,\n        {\n          type: CET.LINK,\n          url: \"http://www.baidu.com\",\n          children: [],\n        },\n        {\n          split: true,\n        }\n      );\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"设置链接\"\n      mousedownFunc={() => {\n        setLink();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <LinkOutlined />\n    </ReactButton>\n  );\n};\n","import { PictureOutlined } from \"@ant-design/icons\";\nimport { message } from \"antd\";\nimport { InputHTMLAttributes } from \"react\";\nimport { useRef } from \"react\";\nimport { Element, Range, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, EditorType } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\nimport axios from \"axios\";\n\nconst acceptImgTypes = [\n  \"image/apng\",\n  \"image/avif\",\n  \"image/gif\",\n  \"image/jpeg\",\n  \"image/png\",\n  \"image/svg+xml\",\n  \"image/webp\",\n];\n\nconst maxSize = 1024 * 1024 * 5; // 5M\n\nconst valideImg: (param: FileList | File[] | null) => {\n  legalFiles: File[];\n  illegalFiles: File[];\n} = (files) => {\n  const legalFiles: File[] = [];\n  const illegalFiles: File[] = [];\n  // all img types https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n  Array.isArray(files) &&\n    Array.from(files).forEach((file) => {\n      if (!acceptImgTypes.includes(file.type) || file.size > maxSize) {\n        illegalFiles.push(file);\n      } else {\n        legalFiles.push(file);\n      }\n    });\n  return {\n    legalFiles,\n    illegalFiles,\n  };\n};\n\nfunction sleep() {\n  return new Promise<void>((rel) => {\n    setTimeout(() => {\n      rel();\n    }, 2000);\n  });\n}\n\nconst uploadImg = async (file: File): Promise<string> => {\n  try {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:3001/uploadFile\",\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\n      },\n    });\n    return `http://localhost:3001/${res?.data?.[0]?.filename}`;\n  } catch (error) {\n    await sleep();\n    return URL.createObjectURL(file);\n  }\n};\n\nconst insertImgToEditor = (\n  editor: EditorType,\n  url: string,\n  id: number,\n  callback: Function\n) => {\n  if (editor.selection && Range.isExpanded(editor.selection)) {\n    Transforms.collapse(editor, { edge: \"end\" });\n  }\n  Transforms.insertNodes(editor, {\n    type: CET.IMG,\n    url,\n    id,\n    children: [\n      {\n        text: \"\",\n      },\n    ],\n  });\n  Transforms.move(editor);\n  callback(id);\n};\n\nexport const insertImg = (editor: EditorType, files: FileList | File[]) => {\n  files = Array.from(files);\n  const { illegalFiles, legalFiles } = valideImg(files);\n  if (illegalFiles.length > 0) {\n    message.error(\n      illegalFiles.map((file) => file.name).join(\"，\") +\n        `，文件格式非法（或超过最大限制${maxSize / 1024 / 1024}M）`\n    );\n  }\n\n  for (const file of legalFiles) {\n    insertImgToEditor(\n      editor,\n      URL.createObjectURL(file),\n      new Date().getTime(),\n      async (id: number) => {\n        const url = await uploadImg(file);\n        Transforms.setNodes(\n          editor,\n          {\n            id: null,\n            url,\n          },\n          {\n            at: [],\n            match(n) {\n              return Element.isElement(n) && n.id === id;\n            },\n          }\n        );\n      }\n    );\n  }\n};\n\nexport const InsertImgButton = () => {\n  const editor = useSlateStatic();\n  const fileRef = useRef<any>();\n\n  const chooseImg = () => {\n    if (fileRef.current) {\n      fileRef.current.click();\n      return;\n    }\n  };\n\n  const afterChooseImg: InputHTMLAttributes<HTMLInputElement>[\"onChange\"] = (\n    e\n  ) => {\n    const files = e.target.files;\n    if (!files) return;\n\n    insertImg(editor, files);\n  };\n\n  return (\n    <ReactButton\n      title={\n        <span className=\"customToolBarTitle\">\n          插入图片\n          <br />\n          <span className=\"customToolBarTitle_subTitle\">\n            支持格式：{acceptImgTypes.join(\"，\").replace(/image\\//gi, \".\")}\n          </span>\n        </span>\n      }\n      mousedownFunc={() => {\n        chooseImg();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <input\n        ref={fileRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        hidden\n        onChange={afterChooseImg}\n      ></input>\n      <PictureOutlined />\n    </ReactButton>\n  );\n};\n","import { PaperClipOutlined } from \"@ant-design/icons\";\nimport { message } from \"antd\";\nimport { InputHTMLAttributes } from \"react\";\nimport { useRef } from \"react\";\nimport { Element, Range, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET, EditorType } from \"../../../common/Defines\";\nimport { ReactButton } from \"../common/ReactButton\";\nimport axios from \"axios\";\n\nconst acceptFileTypes = [\n  \".doc\",\n  \".docx\",\n  \".xlsx\",\n  \".xls\",\n  \".csv\",\n  \".pdf\",\n  \".txt\",\n  \".zip\",\n  \".7z\",\n  \".ppt\",\n  \".pptx\",\n];\n\nconst maxSize = 1024 * 1024 * 10; // 10M\n\nconst valideFile: (param: FileList | File[] | null) => {\n  legalFiles: File[];\n  illegalFiles: File[];\n} = (files) => {\n  const legalFiles: File[] = [];\n  const illegalFiles: File[] = [];\n\n  Array.isArray(files) &&\n    Array.from(files).forEach((file) => {\n      const type = file.name.match(/\\.\\w+$/g)?.[0];\n      if (!type || !acceptFileTypes.includes(type) || file.size > maxSize) {\n        illegalFiles.push(file);\n      } else {\n        legalFiles.push(file);\n      }\n    });\n\n  return {\n    legalFiles,\n    illegalFiles,\n  };\n};\n\nfunction sleep() {\n  return new Promise<void>((rel) => {\n    setTimeout(() => {\n      rel();\n    }, 2000);\n  });\n}\n\nconst uploadFile = async (file: File): Promise<string> => {\n  try {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:3001/uploadFile\",\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\n      },\n    });\n    return `http://localhost:3001/${res?.data?.[0]?.filename}`;\n  } catch (error) {\n    await sleep();\n    return URL.createObjectURL(file);\n  }\n};\n\nconst insertFileToEditor = (\n  editor: EditorType,\n  url: string,\n  fileName: string,\n  id: number,\n  callback: Function\n) => {\n  if (editor.selection && Range.isExpanded(editor.selection)) {\n    Transforms.collapse(editor, { edge: \"end\" });\n  }\n  Transforms.insertNodes(editor, {\n    type: CET.FILE,\n    url,\n    fileName,\n    id,\n    children: [\n      {\n        text: \"\",\n      },\n    ],\n  });\n  Transforms.move(editor);\n  callback(id);\n};\n\nexport const insertFile = (editor: EditorType, files: FileList | File[]) => {\n  files = Array.from(files);\n  const { illegalFiles, legalFiles } = valideFile(files);\n  if (illegalFiles.length > 0) {\n    message.error(\n      illegalFiles.map((file) => file.name).join(\"，\") +\n        `，文件格式非法（或超过最大限制${maxSize / 1024 / 1024}M）`\n    );\n  }\n\n  for (const file of legalFiles) {\n    insertFileToEditor(\n      editor,\n      URL.createObjectURL(file),\n      file.name,\n      new Date().getTime(),\n      async (id: number) => {\n        const url = await uploadFile(file);\n        Transforms.setNodes(\n          editor,\n          {\n            id: null,\n            url,\n          },\n          {\n            at: [],\n            match(n) {\n              return Element.isElement(n) && n.id === id;\n            },\n          }\n        );\n      }\n    );\n  }\n};\n\nexport const InsertFileButton = () => {\n  const editor = useSlateStatic();\n  const fileRef = useRef<any>();\n\n  const chooseFile = () => {\n    if (fileRef.current) {\n      fileRef.current.click();\n      return;\n    }\n  };\n\n  const afterChooseFile: InputHTMLAttributes<HTMLInputElement>[\"onChange\"] = (\n    e\n  ) => {\n    const files = e.target.files;\n    if (!files) return;\n\n    insertFile(editor, files);\n  };\n\n  return (\n    <ReactButton\n      title={\n        <span className=\"customToolBarTitle\">\n          插入附件\n          <br />\n          <span className=\"customToolBarTitle_subTitle\">\n            支持格式：{acceptFileTypes.join(\"，\")}\n          </span>\n        </span>\n      }\n      mousedownFunc={() => {\n        chooseFile();\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <input\n        ref={fileRef}\n        type=\"file\"\n        multiple\n        hidden\n        onChange={afterChooseFile}\n      ></input>\n      <PaperClipOutlined />\n    </ReactButton>\n  );\n};\n","import { TableOutlined } from \"@ant-design/icons\";\nimport { Button, Dropdown, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Editor, Transforms } from \"slate\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { tdMinHeight } from \"../../Td\";\nimport { ToolBarConfig } from \"../common/config\";\n\nexport const InsertTableButton: React.FC<{\n  onChange?: (color?: string) => void;\n}> = (props) => {\n  const editor = useSlate();\n  const [visible, setVisible] = useState(false);\n  const [counts, setCounts] = useState<string>(\"\");\n  const tableDom = useRef<any>();\n  const [disabled] = useState(false);\n  const ref = useRef({\n    _isDisabled: _.debounce(() => {\n      // 应该是任何时候都能添加表格，只是最终行为可能不同。\n      // 当前行为：表格只能添加到路径为[]的后面，也就是处于整个文档的第一层，在作为根节点的一个直接子元素。\n      // setDisabled(\n      //   editor.selection == null ||\n      //     TableLogic.isInTable(editor) ||\n      //     ListLogic.isInList(editor)\n      // );\n    }, ToolBarConfig.calcStatusDelay),\n  });\n  useEffect(() => {\n    ref.current._isDisabled();\n  });\n\n  const rowCount = 10,\n    cellCount = 10;\n\n  const tdMouseEnter = (e: any) => {\n    const table: any = tableDom.current;\n    const td = e.target;\n    const tr = e.target.parentNode;\n    if (!table || !td || !tr) return;\n\n    Array.from(table.querySelectorAll(\"td\")).forEach((td: any) => {\n      td.style.backgroundColor = \"unset\";\n    });\n    const trs = Array.from(table.querySelectorAll(\"tr\"));\n\n    for (let i = 0; i <= tr.rowIndex; i++) {\n      const nowTr: any = trs[i];\n      const tds: any = Array.from(nowTr.querySelectorAll(\"td\"));\n      for (let j = 0; j <= td.cellIndex; j++) {\n        const nowTd = tds[j];\n        nowTd.style.backgroundColor = \"rgba(180,215,255,.7)\";\n      }\n    }\n\n    setCounts(`${td.cellIndex + 1}x${tr.rowIndex + 1}`);\n  };\n\n  const addTable = () => {\n    const cellCount = Number(counts.split(\"x\")[0]);\n    const rowCount = Number(counts.split(\"x\")[1]);\n    if (!Number.isInteger(cellCount) || !Number.isInteger(rowCount)) return;\n\n    ReactEditor.focus(editor);\n\n    if (!editor.selection) return;\n\n    const [tw] = Editor.nodes(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return utils.isTextWrapper(n);\n      },\n    });\n    if (!tw) return;\n    const twDom = ReactEditor.toDOMNode(editor, tw[0]);\n    const parent: any = twDom.offsetParent;\n    if (!parent) return;\n    const tableWrapperWidth = twDom.offsetWidth - 2;\n\n    Transforms.collapse(editor);\n\n    const tPath = editor.selection.anchor.path;\n\n    Transforms.insertNodes(\n      editor,\n      {\n        type: CET.TABLE,\n        wrapperWidthWhenCreated: tableWrapperWidth,\n        children: [\n          {\n            type: CET.TBODY,\n            children: new Array(rowCount).fill(\"0\").map(() => {\n              return {\n                type: CET.TR,\n                children: new Array(cellCount).fill(\"0\").map(() => {\n                  return {\n                    type: CET.TD,\n                    width: tableWrapperWidth / cellCount,\n                    height: tdMinHeight,\n                    children: [\n                      {\n                        type: CET.DIV,\n                        children: [{ text: \"\" }],\n                      },\n                    ],\n                  };\n                }),\n              };\n            }),\n          },\n        ],\n      },\n      {\n        at: [tPath[0] + 1],\n      }\n    );\n\n    Transforms.deselect(editor);\n    setVisible(false);\n  };\n\n  return useMemo(() => {\n    return (\n      <div\n        onMouseLeave={() => {\n          setVisible(false);\n        }}\n      >\n        <Dropdown\n          placement=\"bottomCenter\"\n          overlayStyle={{ zIndex: 999 }}\n          visible={visible}\n          overlay={() => {\n            return (\n              <div\n                className=\"cyEditor__toolbar__tablePanelWrapper\"\n                style={{\n                  width: 200,\n                  padding: 8,\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  backgroundColor: \"white\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {visible ? (\n                  <table border=\"1\" ref={tableDom}>\n                    <tbody>\n                      {new Array(rowCount).fill(0).map((item, index) => {\n                        return (\n                          <tr key={index}>\n                            {new Array(cellCount).fill(0).map((item, index) => {\n                              return (\n                                <td\n                                  key={index}\n                                  onMouseEnter={tdMouseEnter}\n                                  onClick={addTable}\n                                ></td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                ) : null}\n                <div style={{ textAlign: \"right\" }}>{counts}</div>\n              </div>\n            );\n          }}\n          trigger={[\"click\"]}\n          getPopupContainer={(triggerNode) =>\n            triggerNode.parentElement || document.body\n          }\n        >\n          <Tooltip\n            title=\"表格\"\n            zIndex={99}\n            mouseLeaveDelay={0}\n            mouseEnterDelay={0}\n          >\n            <Button\n              type=\"text\"\n              onMouseDown={(e) => {\n                e.preventDefault();\n                setVisible(true);\n              }}\n              disabled={disabled}\n            >\n              <TableOutlined />\n            </Button>\n          </Tooltip>\n        </Dropdown>\n      </div>\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible, disabled, counts]);\n};\n","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const DeleteTableButton = () => {\n  const editor = useSlateStatic();\n\n  const deleteTable = () => {\n    TableLogic.deleteTable(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"删除表格\"\n      mousedownFunc={() => {\n        deleteTable();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <DeleteOutlined />\n    </ReactButton>\n  );\n};\n","import { CopyOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const CopyTableButton = () => {\n  const editor = useSlateStatic();\n\n  return (\n    <ReactButton\n      title=\"复制表格\"\n      mousedownFunc={() => {\n        TableLogic.copyTable(editor);\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <CopyOutlined />\n    </ReactButton>\n  );\n};\n","import { DeleteColumnOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const DeleteColumnButton = () => {\n  const editor = useSlateStatic();\n\n  const deleteColumn = () => {\n    TableLogic.deleteColumn(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"删除列\"\n      mousedownFunc={() => {\n        deleteColumn();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <DeleteColumnOutlined />\n    </ReactButton>\n  );\n};\n","import { DeleteRowOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const DeleteRowButton = () => {\n  const editor = useSlateStatic();\n\n  const deleteRow = () => {\n    TableLogic.deleteRow(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"删除行\"\n      mousedownFunc={() => {\n        deleteRow();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <DeleteRowOutlined />\n    </ReactButton>\n  );\n};\n","import { VerticalAlignBottomOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, Path, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertTextAfterVoid = () => {\n  const editor = useSlateStatic();\n\n  const insertDivAfterTable = () => {\n    if (editor.selection) {\n      const [topBlock] = Editor.nodes(editor, {\n        mode: \"highest\",\n        match(n) {\n          return (\n            !Editor.isEditor(n) &&\n            (Editor.isBlock(editor, n) || Editor.isVoid(editor, n))\n          );\n        },\n      });\n      if (topBlock) {\n        Transforms.insertNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"some text...\" }],\n          },\n          { at: Path.next(topBlock[1]) }\n        );\n      }\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"后插入文本\"\n      mousedownFunc={() => {\n        insertDivAfterTable();\n      }}\n      disabledCondition={(editor) => {\n        const isInTable = TableLogic.isInTable(editor);\n        const [isInCode] = Editor.nodes(editor, {\n          mode: \"highest\",\n          match(n) {\n            return Element.isElement(n) && CET.CODE === n.type;\n          },\n        });\n        return !(isInCode || isInTable);\n      }}\n    >\n      <VerticalAlignBottomOutlined />\n    </ReactButton>\n  );\n};\n","import { VerticalAlignTopOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../../common/Defines\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertTextBeforeVoid = () => {\n  const editor = useSlateStatic();\n\n  const insertDivBeforeTable = () => {\n    if (editor.selection) {\n      const [topBlock] = Editor.nodes(editor, {\n        mode: \"highest\",\n        match(n) {\n          return (\n            !Editor.isEditor(n) &&\n            (Editor.isBlock(editor, n) || Editor.isVoid(editor, n))\n          );\n        },\n      });\n      if (topBlock) {\n        Transforms.insertNodes(\n          editor,\n          {\n            type: CET.DIV,\n            children: [{ text: \"some text...\" }],\n          },\n          { at: topBlock[1] }\n        );\n      }\n    }\n  };\n\n  return (\n    <ReactButton\n      title=\"前插入文本\"\n      mousedownFunc={() => {\n        insertDivBeforeTable();\n      }}\n      disabledCondition={(editor) => {\n        const isInTable = TableLogic.isInTable(editor);\n        const [isInCode] = Editor.nodes(editor, {\n          mode: \"highest\",\n          match(n) {\n            return Element.isElement(n) && CET.CODE === n.type;\n          },\n        });\n        return !(isInCode || isInTable);\n      }}\n    >\n      <VerticalAlignTopOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowLeftOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertColumnBeforeCell = () => {\n  const editor = useSlateStatic();\n\n  const insertColumnBefore = () => {\n    TableLogic.insertColumn(editor, \"before\");\n  };\n\n  return (\n    <ReactButton\n      title=\"左插入列\"\n      mousedownFunc={() => {\n        insertColumnBefore();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowLeftOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowRightOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertColumnAfterCell = () => {\n  const editor = useSlateStatic();\n\n  const insertColumnAfter = () => {\n    TableLogic.insertColumn(editor, \"after\");\n  };\n\n  return (\n    <ReactButton\n      title=\"右插入列\"\n      mousedownFunc={() => {\n        insertColumnAfter();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowRightOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowAboveOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertRowBeforeButton = () => {\n  const editor = useSlateStatic();\n\n  const insertRowBefore = () => {\n    TableLogic.insertRow(editor, \"before\");\n  };\n\n  return (\n    <ReactButton\n      title=\"上插入行\"\n      mousedownFunc={() => {\n        insertRowBefore();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowAboveOutlined />\n    </ReactButton>\n  );\n};\n","import { InsertRowBelowOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const InsertRowAfterButton = () => {\n  const editor = useSlateStatic();\n\n  const insertRowAfter = () => {\n    TableLogic.insertRow(editor, \"after\");\n  };\n\n  return (\n    <ReactButton\n      title=\"下插入行\"\n      mousedownFunc={() => {\n        insertRowAfter();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <InsertRowBelowOutlined />\n    </ReactButton>\n  );\n};\n","import { MergeCellsOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const MergeCellButton = () => {\n  const editor = useSlateStatic();\n\n  const mergeTd = () => {\n    TableLogic.mergeTd(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"合并单元格\"\n      mousedownFunc={() => {\n        mergeTd();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <MergeCellsOutlined />\n    </ReactButton>\n  );\n};\n","import { SplitCellsOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const SplitCellButton = () => {\n  const editor = useSlateStatic();\n\n  const splitTd = () => {\n    TableLogic.splitTd(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"拆分单元格\"\n      mousedownFunc={() => {\n        splitTd();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <SplitCellsOutlined />\n    </ReactButton>\n  );\n};\n","import { ClearOutlined } from \"@ant-design/icons\";\nimport { useSlateStatic } from \"slate-react\";\nimport { utils } from \"../../../common/utils\";\nimport { TdLogic } from \"../../Td\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const ClearCellButton = () => {\n  const editor = useSlateStatic();\n\n  const clearTd = () => {\n    TdLogic.clearTd(editor);\n  };\n\n  return (\n    <ReactButton\n      title=\"清空单元格\"\n      mousedownFunc={() => {\n        clearTd();\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n    >\n      <ClearOutlined />\n    </ReactButton>\n  );\n};\n","import { SelectOutlined } from \"@ant-design/icons\";\nimport { Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CypressFlagValues } from \"../../../common/Defines\";\nimport { utils } from \"../../../common/utils\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const SelectCellButton = () => {\n  const editor = useSlateStatic();\n\n  return (\n    <ReactButton\n      title={\n        <span className=\"customToolBarTitle\">\n          选中单元格\n          <br />\n          <span className=\"customToolBarTitle_subTitle\">或者鼠标移动到单元格的边缘出现十字标时，进行双击</span>\n        </span>\n      }\n      mousedownFunc={() => {\n        const td = TableLogic.getEditingTd(editor);\n        if (!td) return;\n        Transforms.setNodes(\n          editor,\n          {\n            start: true,\n            selected: true,\n          },\n          {\n            at: td[1],\n          }\n        );\n        Transforms.deselect(editor);\n      }}\n      disabledCondition={utils.hasNotSelectedAnyTd}\n      cypressId={CypressFlagValues.SELECTE_TD}\n    >\n      <SelectOutlined />\n    </ReactButton>\n  );\n};\n","import { ColumnWidthOutlined } from \"@ant-design/icons\";\nimport { Editor, Element, NodeEntry, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { TableLogic } from \"../../Table\";\nimport { ReactButton } from \"../common/ReactButton\";\n\nexport const TableAutoWidthButton = () => {\n  const editor = useSlateStatic();\n\n  return (\n    <ReactButton\n      title={\n        <span className=\"customToolBarTitle\">\n          表格(应用/取消)自适应\n          <br />\n          <span className=\"customToolBarTitle_subTitle\">\n            自适应模式：表格单元格最小宽度为100px，当所有单元格最小宽度加起来超过表格所处文档宽度，那么会出现滚动条。\n          </span>\n        </span>\n      }\n      mousedownFunc={() => {\n        const isInTable =\n          TableLogic.isInTable(editor) || TableLogic.getFirstSelectedTd(editor);\n        if (isInTable) {\n          var table: NodeEntry = null as any;\n          if (editor.selection) {\n            table = Array.from(\n              Editor.nodes(editor, {\n                mode: \"highest\",\n                match: (n) => TableLogic.isTable(n),\n              })\n            )?.[0];\n          } else {\n            const td = TableLogic.getFirstSelectedTd(editor);\n            if (td) {\n              table =\n                Editor.above(editor, {\n                  match: (n) => TableLogic.isTable(n),\n                  at: td[1],\n                }) || (null as any);\n            }\n          }\n          if (!table) return;\n          const isAutoWidth =\n            Element.isElement(table[0]) && table[0].tdAutoWidth;\n          Editor.withoutNormalizing(editor, () => {\n            Transforms.setNodes(\n              editor,\n              {\n                tdAutoWidth: !isAutoWidth,\n              },\n              {\n                at: table[1],\n              }\n            );\n            Transforms.setNodes(\n              editor,\n              {\n                tdAutoWidth: !isAutoWidth,\n              },\n              {\n                at: table[1],\n                mode: \"lowest\",\n                match: (n) => TableLogic.isTd(n),\n              }\n            );\n          });\n        }\n      }}\n      disabledCondition={(editor) => {\n        return (\n          !TableLogic.isInTable(editor) &&\n          TableLogic.getSelectedTdsSize(editor) === 0\n        );\n      }}\n    >\n      <ColumnWidthOutlined />\n    </ReactButton>\n  );\n};\n","import { CodeOutlined } from \"@ant-design/icons\";\nimport { Editor, Path, Transforms } from \"slate\";\nimport { useSlateStatic } from \"slate-react\";\nimport { CET } from \"../../components/RichEditor/common/Defines\";\nimport { ReactButton } from \"../../components/RichEditor/comps/TooBar/common/ReactButton\";\n\nexport const Button = () => {\n  const editor = useSlateStatic();\n  return (\n    <ReactButton\n      title=\"插入代码块\"\n      mousedownFunc={() => {\n        if (!editor.selection) return;\n        const [topBlock] = Editor.nodes(editor, {\n          mode: \"highest\",\n          match(n) {\n            return !Editor.isEditor(n);\n          },\n        });\n        if (topBlock) {\n          Transforms.insertNodes(\n            editor,\n            {\n              type: CET.CODE,\n              defaultMode: \"javascript\",\n              children: [{ text: \"\" }],\n            },\n            { at: Path.next(topBlock[1]) }\n          );\n        }\n      }}\n      disabledCondition={(editor) => {\n        return editor.selection == null;\n      }}\n    >\n      <CodeOutlined />\n    </ReactButton>\n  );\n};\n","/* eslint-disable no-eval */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable eqeqeq */\nimport { Col, Row, Divider } from \"antd\";\nimport { useSlateStatic } from \"slate-react\";\nimport _ from \"lodash\";\nimport { EyeInvisibleOutlined, EyeOutlined, SaveOutlined } from \"@ant-design/icons\";\nimport \"./ToolBar.css\";\nimport React, { ReactElement, useContext } from \"react\";\nimport { EditorContext } from \"../../RichEditor\";\nimport { CleanFormatButton } from \"./funcButtons/CleanFormatButton\";\nimport { CopyFormatButton } from \"./funcButtons/CopyFormatButton\";\nimport { TextAlignButton } from \"./funcButtons/TextAlignButton\";\nimport { FontSizeButton } from \"./funcButtons/FontSizeButton\";\nimport { FontTypeButton } from \"./funcButtons/FontTypeButton\";\nimport { FontColorButton } from \"./funcButtons/FontColorButton\";\nimport { FontBGColorButton } from \"./funcButtons/FontBGColorButton\";\nimport { FontWeightButton } from \"./funcButtons/FontWeightButton\";\nimport { FontStyleButton } from \"./funcButtons/FontStyleButton\";\nimport { UnderLineButton } from \"./funcButtons/UnderLineButton\";\nimport { LineThroughButton } from \"./funcButtons/LineThroughButton\";\nimport { ToDoListButton } from \"./funcButtons/ToDoListButton\";\nimport { OrderListButton } from \"./funcButtons/OrderListButton\";\nimport { NormalListButton } from \"./funcButtons/NormalListButton\";\nimport { SetLinkButton } from \"./funcButtons/SetLinkButton\";\nimport { InsertImgButton } from \"./funcButtons/InsertImgButton\";\nimport { InsertFileButton } from \"./funcButtons/InsertFileButton\";\nimport { InsertTableButton } from \"./funcButtons/InsertTableButton\";\nimport { DeleteTableButton } from \"./funcButtons/DeleteTableButton\";\nimport { CopyTableButton } from \"./funcButtons/CopyTableButton\";\nimport { DeleteColumnButton } from \"./funcButtons/DeleteColumnButton\";\nimport { DeleteRowButton } from \"./funcButtons/DeleteRowButton\";\nimport { InsertTextAfterVoid } from \"./funcButtons/InsertTextAfterVoid\";\nimport { InsertTextBeforeVoid } from \"./funcButtons/InsertTextBeforeVoid\";\nimport { InsertColumnBeforeCell } from \"./funcButtons/InsertColumnBeforeCell\";\nimport { InsertColumnAfterCell } from \"./funcButtons/InsertColumnAfterCell\";\nimport { InsertRowBeforeButton } from \"./funcButtons/InsertRowBeforeButton\";\nimport { InsertRowAfterButton } from \"./funcButtons/InsertRowAfterButton\";\nimport { MergeCellButton } from \"./funcButtons/MergeCellButton\";\nimport { SplitCellButton } from \"./funcButtons/SplitCellButton\";\nimport { ClearCellButton } from \"./funcButtons/ClearCellButton\";\nimport { SelectCellButton } from \"./funcButtons/SelectCellButton\";\nimport { TableAutoWidthButton } from \"./funcButtons/TableAutoWidth\";\nimport { ToolBars } from \"../../common/Defines\";\nimport { StaticButton } from \"./common/StaticButton\";\nimport { Button as InsertCodeButton } from \"../../../../externalComps/Code/button\";\n\nconst ReadOnlyButton: React.FC<{}> = (props) => {\n  const { readOnly, setReadOnly } = useContext(EditorContext);\n  const title = readOnly ? \"切换到编辑模式\" : \"切换到只读模式\";\n  return (\n    <StaticButton\n      title={title}\n      mousedownFunc={() => {\n        setReadOnly(!readOnly);\n      }}\n    >\n      {readOnly ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n    </StaticButton>\n  );\n};\n\nexport const ToolBar: React.FC<{\n  moreButtons?: React.FC[];\n  buttons: (ToolBars | \"divide\")[];\n}> = (props) => {\n  const editor = useSlateStatic();\n\n  const diverComp = (\n    <Divider\n      style={{ height: 20, backgroundColor: \"rgb(0 0 0 / 10%)\" }}\n      type=\"vertical\"\n    />\n  );\n\n  const ButtonMapper = (() => {\n    const obj: {\n      [key in ToolBars | \"divide\"]?: ReactElement;\n    } = {};\n    obj[ToolBars.FontTypeButton] = <FontTypeButton />;\n    obj[ToolBars.FontSizeButton] = <FontSizeButton />;\n    obj[ToolBars.TextAlignButton] = <TextAlignButton />;\n    obj[ToolBars.CopyFormatButton] = <CopyFormatButton />;\n    obj[ToolBars.CleanFormatButton] = <CleanFormatButton />;\n    obj[ToolBars.FontColorButton] = <FontColorButton />;\n    obj[ToolBars.FontBGColorButton] = <FontBGColorButton />;\n    obj[ToolBars.FontWeightButton] = <FontWeightButton />;\n    obj[ToolBars.FontStyleButton] = <FontStyleButton />;\n    obj[ToolBars.UnderLineButton] = <UnderLineButton />;\n    obj[ToolBars.LineThroughButton] = <LineThroughButton />;\n    obj[ToolBars.ToDoListButton] = <ToDoListButton />;\n    obj[ToolBars.OrderListButton] = <OrderListButton />;\n    obj[ToolBars.NormalListButton] = <NormalListButton />;\n    obj[ToolBars.InsertTextAfterVoid] = <InsertTextAfterVoid />;\n    obj[ToolBars.InsertTextBeforeVoid] = <InsertTextBeforeVoid />;\n    obj[ToolBars.SetLinkButton] = <SetLinkButton />;\n    obj[ToolBars.InsertImgButton] = <InsertImgButton />;\n    obj[ToolBars.InsertFileButton] = <InsertFileButton />;\n    obj[ToolBars.InsertTableButton] = <InsertTableButton />;\n    obj[ToolBars.TableAutoWidthButton] = <TableAutoWidthButton />;\n    obj[ToolBars.DeleteTableButton] = <DeleteTableButton />;\n    obj[ToolBars.CopyTableButton] = <CopyTableButton />;\n    obj[ToolBars.SelectCellButton] = <SelectCellButton />;\n    obj[ToolBars.DeleteColumnButton] = <DeleteColumnButton />;\n    obj[ToolBars.DeleteRowButton] = <DeleteRowButton />;\n    obj[ToolBars.InsertColumnBeforeCell] = <InsertColumnBeforeCell />;\n    obj[ToolBars.InsertColumnAfterCell] = <InsertColumnAfterCell />;\n    obj[ToolBars.InsertRowBeforeButton] = <InsertRowBeforeButton />;\n    obj[ToolBars.InsertRowAfterButton] = <InsertRowAfterButton />;\n    obj[ToolBars.MergeCellButton] = <MergeCellButton />;\n    obj[ToolBars.SplitCellButton] = <SplitCellButton />;\n    obj[ToolBars.ClearCellButton] = <ClearCellButton />;\n    obj[ToolBars.ReadOnlyButton] = <ReadOnlyButton />;\n    obj[ToolBars.InsertCodeButton] = <InsertCodeButton />;\n    obj.divide = diverComp;\n    return obj;\n  })();\n\n  return (\n    <div\n      className=\"cyEditor__toolBar\"\n      style={{ position: \"relative\", marginBottom: 4 }}\n    >\n      <Row align=\"middle\">\n        {props.buttons.map((button, index) => {\n          return <Col key={index}>{ButtonMapper[button]}</Col>;\n        })}\n        {/* <Col>\n          <StaticButton\n            title=\"输出内容\"\n            mousedownFunc={() => {\n              console.log(JSON.stringify(editor.children));\n              window.localStorage.setItem(\n                \"savedContent\",\n                JSON.stringify(editor.children)\n              );\n            }}\n          >\n            <SaveOutlined />\n          </StaticButton>\n        </Col> */}\n        {/* <Col>\n          <StaticButton\n            title=\"输出内容HTML\"\n            mousedownFunc={(e) => {\n              // const editorDom = e.nativeEvent.path.find((o: any) => o.className == \"cyEditor\");\n              // if(!editorDom) return;\n              // const content = editorDom.querySelector(':scope>.cyEditor__content');\n              // console.log(content.innerHTML);\n              console.log(slateToHtml(editor));\n            }}\n          >\n            slateToHtml\n          </StaticButton>\n        </Col>\n        <Col>\n          <StaticButton\n            title=\"输入内容\"\n            mousedownFunc={(e) => {\n              // const editorDom = e.nativeEvent.path.find((o: any) => o.className == \"cyEditor\");\n              // if(!editorDom) return;\n              // const content = editorDom.querySelector(':scope>.cyEditor__content');\n              // console.log(content.innerHTML);\n              const content = htmlToSlate(\n                `<table><tbody><tr><td>123</td></tr></tbody></table>`\n              );\n              Transforms.insertNodes(editor, content);\n            }}\n          >\n            htmlToSlate\n          </StaticButton>\n        </Col> */}\n        {/* {(props.moreButtons || []).map((Button, i) => {\n          return (\n            <Col key={i}>\n              <Button></Button>\n            </Col>\n          );\n        })} */}\n      </Row>\n    </div>\n  );\n};\n","import { jsx } from \"slate-hyperscript\";\nimport { CET, Marks } from \"./Defines\";\n\nconst deserialize = (el: any): any => {\n  if (el.nodeType === 3) {\n    return el.textContent;\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  const nodeStyle: Partial<\n    {\n      [key in Marks]: any;\n    } & {\n      width: number;\n      height: number;\n    }\n  > = {};\n  el.style?.cssText\n    ?.split(\";\")\n    // eslint-disable-next-line array-callback-return\n    .forEach((style: string) => {\n      const [key, value] = style.split(\":\");\n      if (!key) return null;\n      const changeKey = key\n        .trim()\n        .replace(/^([a-z]+)-([a-z])([a-z]+)$/gi, ($0, $1, $2, $3) => {\n          return $1 + $2.toUpperCase() + $3;\n        });\n      const changeValue = value.trim();\n      if (changeKey === \"textDecoration\") {\n        if (changeValue.includes(\"underline\")) {\n          nodeStyle[Marks.Underline] = true;\n        }\n        if (changeValue.includes(\"line-through\")) {\n          nodeStyle[Marks.LineThrough] = true;\n        }\n      } else if (changeValue === \"bold\") {\n        nodeStyle[Marks.BOLD] = true;\n      } else if (changeValue === \"italic\") {\n        nodeStyle[Marks.ITALIC] = true;\n      } else if (Object.values(Marks).includes(changeKey as Marks)) {\n        nodeStyle[changeKey as Marks] = changeValue;\n      }\n\n      if (changeKey === \"width\") {\n        nodeStyle.width = parseInt(changeValue);\n      }\n      if (changeKey === \"height\") {\n        nodeStyle.height = parseInt(changeValue);\n      }\n    });\n\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{ text: \"\" }];\n  }\n  switch (el.nodeName) {\n    case \"BR\":\n      return \"\\n\";\n    case \"BODY\":\n      return jsx(\"fragment\", {}, children);\n    case \"P\":\n    case \"DIV\": {\n      const isTextWrapper = (Array.from(el?.childNodes) || []).every(\n        (node: any) => node.nodeType === 3\n      );\n      return jsx(\n        \"element\",\n        { type: isTextWrapper ? CET.DIV : CET.Block, ...nodeStyle },\n        children\n      );\n    }\n    case \"H1\":\n      return jsx(\"element\", { type: CET.H1, ...nodeStyle }, children);\n    case \"H2\":\n      return jsx(\"element\", { type: CET.H2, ...nodeStyle }, children);\n    case \"H3\":\n      return jsx(\"element\", { type: CET.H3, ...nodeStyle }, children);\n    case \"H4\":\n      return jsx(\"element\", { type: CET.H4, ...nodeStyle }, children);\n    case \"A\":\n      return jsx(\n        \"element\",\n        { type: CET.LINK, url: el.getAttribute(\"href\"), ...nodeStyle },\n        children\n      );\n    case \"IMG\":\n      return jsx(\n        \"element\",\n        { type: CET.IMG, url: el.getAttribute(\"src\"), ...nodeStyle },\n        children\n      );\n    case \"UL\":\n      return jsx(\"element\", { type: CET.NORMAL_LIST, ...nodeStyle }, children);\n    case \"OL\":\n      return jsx(\"element\", { type: CET.NUMBER_LIST, ...nodeStyle }, children);\n    case \"LI\":\n      return jsx(\"element\", { type: CET.LIST_ITEM, ...nodeStyle }, children);\n    case \"TABLE\":\n      return jsx(\"element\", { type: CET.TABLE, ...nodeStyle }, children);\n    case \"TBODY\":\n      return jsx(\"element\", { type: CET.TBODY, ...nodeStyle }, children);\n    case \"TR\":\n      return jsx(\"element\", { type: CET.TR, ...nodeStyle }, children);\n    case \"TD\":\n      return jsx(\n        \"element\",\n        {\n          type: CET.TD,\n          ...nodeStyle,\n          rowSpan: el.getAttribute(\"rowspan\") || 1,\n          colSpan: el.getAttribute(\"colspan\") || 1,\n        },\n        children\n      );\n    default:\n      return el.textContent;\n  }\n};\n\nexport const htmlToSlate = (html: string): any => {\n  // 去掉标签之间的空格和回车等其他符号\n  const document = new DOMParser().parseFromString(html, \"text/html\");\n  return deserialize(document.body);\n};\n","import _ from \"lodash\";\nimport {\n  Editor,\n  Range,\n  Element,\n  Text,\n  Transforms,\n  NodeEntry,\n  Path,\n} from \"slate\";\nimport { CET, CustomElement, EditorType, InLineTypes } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\nimport { ListLogic } from \"../comps/ListComp\";\nimport { TableLogic } from \"../comps/Table\";\nimport { htmlToSlate } from \"../common/htmlToSlate\";\nimport { HistoryEditor } from \"slate-history\";\nimport { insertImg } from \"../comps/TooBar/funcButtons/InsertImgButton\";\nimport { insertFile } from \"../comps/TooBar/funcButtons/InsertFileButton\";\nimport {\n  setCopyedCells,\n  setCopyedMaxRowAndCol,\n  setCopyedContent,\n  getCopyedCells,\n} from \"../common/globalStore\";\nimport { ToDoListLogic } from \"../comps/TodoListComp\";\nimport { TdLogic } from \"../comps/Td\";\n\nexport const withCyWrap = (editor: EditorType) => {\n  const {\n    deleteForward,\n    deleteBackward,\n    insertText,\n    getFragment,\n    insertFragment,\n    insertData,\n    insertBreak,\n    isInline,\n    isVoid,\n    normalizeNode,\n    apply,\n    deleteFragment,\n    undo,\n  } = editor;\n\n  editor.undo = () => {\n    TdLogic.deselectAllTd(editor); // 为了避免区域选择出问题\n    undo();\n  };\n\n  editor.apply = (e) => {\n    try {\n      if (e.type === \"set_node\") {\n        const node = Editor.node(editor, e.path);\n        const isImg =\n          node && Element.isElement(node[0]) && node[0].type === CET.IMG;\n        const isFile =\n          node && Element.isElement(node[0]) && node[0].type === CET.FILE;\n        const isTd = node && TableLogic.isTd(node[0]);\n        const isTable = node && TableLogic.isTable(node[0]);\n        const properties = e.newProperties as Partial<CustomElement>;\n        const oldProperties = e.properties as Partial<CustomElement>;\n        if (\n          (isTd &&\n            (properties.selected ||\n              properties.width ||\n              properties.start ||\n              properties.tdIsEditing ||\n              oldProperties.start ||\n              oldProperties.selected ||\n              oldProperties.width ||\n              oldProperties.tdIsEditing)) ||\n          (isTable &&\n            (properties.wrapperWidthWhenCreated ||\n              oldProperties.wrapperWidthWhenCreated)) ||\n          isImg ||\n          isFile\n        ) {\n          HistoryEditor.withoutSaving(editor, () => {\n            apply(e);\n          });\n          return;\n        }\n      }\n      apply(e);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n  const myInsertBreak = _.throttle(() => {\n    if (!editor.selection) return;\n    const todoList = ToDoListLogic.getToDoList(editor);\n    if (todoList) {\n      if (\n        todoList &&\n        Editor.string(editor, todoList[1], { voids: true }) === \"\"\n      ) {\n        Transforms.setNodes(editor, { type: CET.DIV }, { at: todoList[1] });\n        return;\n      }\n      insertBreak();\n      return;\n    }\n    if (Range.isExpanded(editor.selection)) {\n      utils.removeRangeElement(editor);\n    } else {\n      const textWrapper = utils.getParent(editor, editor.selection.anchor.path);\n      if (!textWrapper[0]) return;\n      const twParent = Editor.parent(editor, textWrapper[1]);\n\n      const li = ListLogic.isListItem(twParent[0]) && twParent;\n      if (li && Editor.string(editor, li[1], { voids: true }) === \"\") {\n        Transforms.liftNodes(editor, { at: li[1] });\n        return;\n      }\n    }\n    insertBreak();\n  }, 50);\n\n  editor.insertBreak = () => {\n    myInsertBreak();\n  };\n\n  editor.deleteFragment = () => {\n    const [hasTable] = Editor.nodes(editor, {\n      match: (n) => TableLogic.isTable(n),\n      mode: \"highest\",\n    });\n    if (hasTable) utils.removeRangeElement(editor);\n    else deleteFragment();\n  };\n\n  editor.deleteForward = (unit) => {\n    if (!editor.selection) return;\n\n    const afterPos = Editor.after(editor, editor.selection.anchor);\n\n    const nextTd = Editor.above(editor, {\n      at: afterPos,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    const nowTd = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    // 退格后是否即将进入其他td，包括从一个td到另一个td，以及非td元素进入td\n    const isGoingToOtherTd =\n      (nextTd != null && nowTd != null && !Path.equals(nowTd[1], nextTd[1])) ||\n      (nextTd != null && nowTd == null);\n\n    const dealList = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      normalizeList();\n\n      const isInList = ListLogic.isInList(editor);\n\n      if (isInList && isGoingToOtherTd) return true;\n    };\n    const dealTextWrapper = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      const isInTextWrapper = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n\n      if (isInTextWrapper && utils.isElementEmpty(editor, isInTextWrapper)) {\n        if (isGoingToOtherTd) {\n          Transforms.removeNodes(editor, {\n            hanging: true,\n          });\n          Transforms.move(editor);\n          setTimeout(() => {\n            Transforms.move(editor, { reverse: true });\n          }, 0);\n        } else deleteForward(unit);\n        return true;\n      }\n\n      if (isGoingToOtherTd) return true;\n    };\n    const dealToDoList = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const isInTodoList = ToDoListLogic.getToDoList(editor);\n      if (isInTodoList) {\n        if (isGoingToOtherTd) return true;\n        deleteForward(unit);\n        return true;\n      }\n    };\n    const dealTable = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const isInTable = TableLogic.isInTable(editor);\n\n      if (isInTable && nowTd != null) {\n        return Editor.isEnd(editor, editor.selection.anchor, nowTd[1]);\n      }\n    };\n\n    // 函数如果不需要默认的退格行为，则返回true\n    const rel = [dealList, dealToDoList, dealTable, dealTextWrapper].some(\n      (func) => {\n        return func(editor);\n      }\n    );\n\n    if (rel) return;\n\n    deleteForward(unit);\n  };\n\n  editor.deleteBackward = (unit) => {\n    if (!editor.selection) return;\n\n    const isInTable = TableLogic.isInTable(editor);\n\n    const beforePos = Editor.before(editor, editor.selection.anchor);\n\n    const preTd = Editor.above(editor, {\n      at: beforePos,\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    const nowTd = Editor.above(editor, {\n      mode: \"lowest\",\n      match(n) {\n        return TableLogic.isTd(n);\n      },\n    });\n\n    // 退格后是否即将进入其他td，包括从一个td到另一个td，以及非td元素进入td\n    const isGoingToOtherTd =\n      (preTd != null && nowTd != null && !Path.equals(nowTd[1], preTd[1])) ||\n      (preTd != null && nowTd == null);\n\n    const dealList = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      const isInList = ListLogic.isInList(editor);\n      if (!isInList) return;\n\n      normalizeList();\n\n      const li = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return ListLogic.isListItem(n);\n        },\n      });\n      if (!li) return;\n\n      const isLiEmpty = utils.isElementEmpty(editor, li);\n\n      const list = Editor.parent(editor, li[1]);\n      const isOnlyChild = list[0].children.length === 1; // list是否只有一个li\n      const isInLiFirstPos = Editor.isStart(\n        editor,\n        editor.selection.anchor,\n        li[1]\n      ); // 光标是否在li的起始位置\n\n      if (isInLiFirstPos) {\n        if (isLiEmpty && isOnlyChild) {\n          Transforms.removeNodes(editor, {\n            at: li[1],\n          });\n          // 当list中只有一个空的li元素时，如果此时进行退格，那么就是删掉list元素，此时光标会后移\n          // 如果光标后移的位置就是表格，那么出出现bug，也就是光标位于表格的前面的hanging里，如果此时再接着输入文字，可能会出错\n          // 解决方案就是先move一下，再move回来，这里两次move必须在不同的任务队列里\n          Transforms.move(editor);\n          setTimeout(() => {\n            Transforms.move(editor, { reverse: true });\n            isGoingToOtherTd && Transforms.move(editor);\n          }, 10);\n          return true;\n        }\n\n        if (isLiEmpty && !isOnlyChild) {\n          Transforms.removeNodes(editor, {\n            at: li[1],\n          });\n          return true;\n        }\n\n        if (!isLiEmpty && isOnlyChild) {\n          !isGoingToOtherTd && deleteBackward(unit);\n          return true;\n        }\n\n        if (!isLiEmpty && !isOnlyChild) {\n          !isGoingToOtherTd && deleteBackward(unit);\n          return true;\n        }\n        return true;\n      }\n    };\n    const dealTable = (editor: EditorType) => {\n      if (!editor.selection) return;\n      if (isInTable && nowTd != null) {\n        return Editor.isStart(editor, editor.selection.anchor, nowTd[1]);\n      }\n    };\n    const dealTextWrapper = (editor: EditorType) => {\n      if (!editor.selection) return;\n\n      const isInTextWrapper = Editor.above(editor, {\n        mode: \"lowest\",\n        match(n) {\n          return utils.isTextWrapper(n);\n        },\n      });\n\n      if (isInTextWrapper && utils.isElementEmpty(editor, isInTextWrapper)) {\n        if (isGoingToOtherTd) {\n          Transforms.removeNodes(editor, {\n            hanging: true,\n          });\n          Transforms.move(editor);\n          setTimeout(() => {\n            Transforms.move(editor, { reverse: true });\n          }, 0);\n        } else deleteBackward(unit);\n        return true;\n      }\n\n      if (isGoingToOtherTd) return true;\n    };\n    const dealToDoList = (editor: EditorType) => {\n      if (!editor.selection) return;\n      const isInTodoList = ToDoListLogic.getToDoList(editor);\n      if (isInTodoList) {\n        const isInFirstPos = Editor.isStart(\n          editor,\n          editor.selection.anchor,\n          isInTodoList[1]\n        );\n        if (isInFirstPos) {\n          if (isGoingToOtherTd) {\n            Transforms.removeNodes(editor, { at: isInTodoList[1] });\n            Transforms.move(editor);\n          } else {\n            // 如果光标是文档的第一个位置，那么取消todoList组件的wrap，改为textWrapper\n            if (Editor.before(editor, editor.selection) == null) {\n              Editor.withoutNormalizing(editor, () => {\n                Transforms.wrapNodes(\n                  editor,\n                  {\n                    type: CET.DIV,\n                    children: [],\n                  },\n                  {\n                    at: isInTodoList[1],\n                  }\n                );\n                Transforms.unwrapNodes(editor, {\n                  at: [...isInTodoList[1], 0],\n                });\n              });\n            } else deleteBackward(unit);\n          }\n          return true;\n        }\n      }\n    };\n\n    // 函数如果不需要默认的退格行为，则返回true\n    const rel = [dealList, dealToDoList, dealTable, dealTextWrapper].some(\n      (func) => {\n        return func(editor);\n      }\n    );\n\n    if (rel) return;\n\n    deleteBackward(unit);\n  };\n\n  editor.insertText = (e) => {\n    if (editor.selection && Range.isExpanded(editor.selection)) {\n      utils.removeRangeElement(editor);\n    }\n    insertText(e);\n  };\n\n  // 在本编辑器复制的时候触发\n  // dataTransfer 说明：https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransfer\n  /**\n   * 当document的range存在时，按ctrl+c复制时触发\n   * 逻辑：当有文字选区要复制时，首先将复制的表格单元格给取消掉。\n   * @returns\n   */\n  editor.getFragment = () => {\n    setCopyedCells(null);\n    setCopyedMaxRowAndCol({ copyedAreaHeight: 0, copyedAreaWidth: 0 });\n    setCopyedContent(getFragment());\n    return getFragment();\n  };\n\n  /**\n   * 在粘贴的时候触发，只可能发生在editor被focus的时，也就是不可能会有单元格被选中的时候\n   * 两种情况，\n   * 一种是刚复制了单元格，然后粘贴到document的range里。如果刚复制单元格，在RichEditor.tsx中的onDOMBeforeInput中做了特殊处理\n   * 一种是没复制单元格，粘贴上一次复制的range。\n   * 此方法的上游触发方式为：ReactEditor.insertData\n   * @param fragment\n   */\n  editor.insertFragment = (fragment) => {\n    utils.removeRangeElement(editor);\n\n    const copyedCells = getCopyedCells() || [];\n    const copyedCellsContent = utils.filterCopyedContent(\n      copyedCells.map((cell) => cell[0])\n    );\n    const isCopyedSelectTdContent = copyedCells.length > 0;\n    const isGoingToPastInTable = TableLogic.isInTable(editor);\n    const copyedContent =\n      copyedCells.length > 0 ? copyedCellsContent : fragment; // 如果有选中的单元格被复制，那么优先复制该内容\n\n    if (isGoingToPastInTable) {\n      copyedContent &&\n        insertFragment(_.cloneDeep(utils.filterCopyedContent(copyedContent)));\n    } else {\n      // 粘贴多个单元格内容到表格外\n      if (isCopyedSelectTdContent) {\n        // 还要考虑是否全选了表格 【进行中》。。】\n        insertFragment(_.cloneDeep(copyedContent));\n      } else {\n        copyedContent &&\n          insertFragment(_.cloneDeep(utils.filterCopyedContent(copyedContent)));\n      }\n    }\n  };\n\n  // 粘贴的时候首先触发的方法，在这里可以将传入的内容进行个性化处理，然后生成新的dataTransfer传递给slate\n  editor.insertData = (e) => {\n    // console.log(\"insertdata\");\n    // 解码application/x-slate-fragment内容\n    // console.log(\n    //   utils.decodeContentToSlateData(e.getData(\"application/x-slate-fragment\"))\n    // );\n    // newTransfer.setData(\"text/plain\", \"plan text\");\n    // const tds = getCopyedCells();\n    // if (tds) {\n    //   const [table] = Editor.nodes(editor, {\n    //     at: tds[0][1],\n    //     mode: \"lowest\",\n    //     match(n) {\n    //       return TableLogic.isTable(n);\n    //     },\n    //   });\n    //   if (table) {\n    //     const newTransfer = new DataTransfer();\n    //     newTransfer.setData(\n    //       \"application/x-slate-fragment\",\n    //       // 编码内容\n    //       utils.encodeSlateContent([table[0] as Descendant])\n    //     );\n    //     insertData(newTransfer);\n    //     return;\n    //   }\n    // } else\n    if (e.types.includes(\"application/x-slate-fragment\")) {\n      insertData(e);\n    } else if (e.types.includes(\"text/plain\")) {\n      const newTransfer = new DataTransfer();\n      const content = htmlToSlate(e.getData(\"text/plain\"));\n      newTransfer.setData(\n        \"application/x-slate-fragment\",\n        // 编码内容\n        utils.encodeSlateContent(content)\n      );\n      insertData(newTransfer);\n    } else if (e.types.includes(\"Files\")) {\n      const files = e.files;\n      insertImg(editor, files);\n      insertFile(editor, files);\n    }\n  };\n\n  const normalizeList = _.debounce(() => {\n    const afterList = Editor.next(editor, {\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    if (afterList) editor.normalizeNode(afterList);\n    const beforeList = Editor.previous(editor, {\n      match(n) {\n        return ListLogic.isOrderList(n);\n      },\n    });\n    if (beforeList) editor.normalizeNode(beforeList);\n  }, 0);\n\n  editor.isInline = (node) => {\n    if ([CET.IMG, CET.FILE, CET.LINK, CET.CHECKBOX].includes(node.type)) {\n      return true;\n    }\n    return isInline(node);\n  };\n  editor.isVoid = (node) => {\n    if ([CET.IMG, CET.FILE, CET.CHECKBOX].includes(node.type)) {\n      return true;\n    }\n    return isVoid(node);\n  };\n\n  const normalizeEditor = (nodeEntry: NodeEntry) => {\n    const [node, path] = nodeEntry;\n\n    // 文档的最后一个元素总是一个空的textWrapper\n    const editorLastNode = utils.getNodeByPath(editor, [\n      editor.children.length - 1,\n    ]);\n    const preLastNode = utils.getNodeByPath(editor, [\n      editor.children.length - 2,\n    ]);\n    const isLastNodeNotEmpty = !(\n      utils.isTextWrapper(editorLastNode[0]) &&\n      utils.isElementEmpty(editor, editorLastNode as NodeEntry)\n    );\n    if (isLastNodeNotEmpty) {\n      Transforms.insertNodes(\n        editor,\n        {\n          type: CET.DIV,\n          children: [{ text: \"\" }],\n        },\n        {\n          at: [editor.children.length],\n        }\n      );\n      return true;\n    }\n    const isPreLastNodeEmpty =\n      utils.isTextWrapper(preLastNode[0]) &&\n      utils.isElementEmpty(editor, preLastNode as NodeEntry);\n    // 如果文档的倒数第二个元素也是空的，那么删除\n    if (isPreLastNodeEmpty) {\n      Transforms.removeNodes(editor, { at: preLastNode[1] });\n      return true;\n    }\n\n    if (editor.children.length === 0) {\n      // 如果没有子元素，那么强行添加一个\n      Transforms.insertNodes(editor, {\n        type: CET.DIV,\n        children: [{ text: \"\" }],\n      });\n      return;\n    }\n\n    // 如果一个块级元素出现在textWrapper里，那么直接删除\n    // if (Element.isElement(node) && Editor.isBlock(editor, node)) {\n    //   const [parent] = utils.getParent(editor, path);\n    //   if (utils.isTextWrapper(parent)) {\n    //     Transforms.removeNodes(editor, { at: path });\n    //     return;\n    //   }\n    // }\n\n    // inline元素和void元素的前后都必须有文本节点\n    if (Element.isElement(node) && InLineTypes.includes(node.type)) {\n      const prePath = utils.getPath(path, \"pre\");\n      const [preNode] = utils.getNodeByPath(editor, prePath);\n      if (preNode && !Text.isText(preNode)) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: prePath });\n        return;\n      }\n\n      const nextPath = utils.getPath(path, \"next\");\n      const [nextNode] = utils.getNodeByPath(editor, nextPath);\n      if (!Text.isText(nextNode)) {\n        Transforms.insertNodes(editor, { text: \"\" }, { at: nextPath });\n        return;\n      }\n    }\n\n    if (Element.isElement(node) && node.type === CET.LINK) {\n      if (Editor.string(editor, path, { voids: true }) === \"\") {\n        Transforms.removeNodes(editor, { at: path });\n        return;\n      }\n    }\n\n    if (TableLogic.normalizeTable(editor, nodeEntry)) return;\n    if (ListLogic.normalizeList(editor, nodeEntry)) return;\n    if (ToDoListLogic.normalizeToDoList(editor, nodeEntry)) return;\n\n    normalizeNode(nodeEntry);\n  };\n\n  editor.normalizeNode = normalizeEditor;\n\n  return editor;\n};\n","/* eslint-disable eqeqeq */\nimport { Range } from \"slate\";\nimport { EditorType } from \"../../common/Defines\";\nimport { handleSelectedTd } from \"./handleSelectedTd\";\nimport { handleRangeCollapsed } from \"./handleRangeCollapsed\";\nimport { handleRangeExpand } from \"./handleRangeExpand\";\nimport { getStrPathSetOfSelectedTds } from \"../../common/globalStore\";\n\nexport const HandleKeyDownEvent = (e: any, editor: EditorType) => {\n  const selectedTds = getStrPathSetOfSelectedTds(editor);\n\n  if (selectedTds.size > 0) {\n    handleSelectedTd(e, editor);\n    return;\n  }\n\n  const { selection } = editor;\n  if (!selection) return;\n\n  if (Range.isExpanded(selection)) {\n    return handleRangeExpand(e, editor);\n  }\n\n  if (Range.isCollapsed(selection)) {\n    return handleRangeCollapsed(e, editor);\n  }\n};\n","import { EditorType } from \"../../common/Defines\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { TdLogic } from \"../../comps/Td\";\n// import { TableLogic } from \"../../comps/Table\";\n// import { setCopyedContent } from \"../../common/globalStore\";\n\nexport const handleSelectedTd = (e: any, editor: EditorType) => {\n  switch (e.key) {\n    case \"Delete\":\n    case \"Backspace\": {\n      TdLogic.clearTd(editor);\n      break;\n    }\n    // case \"Tab\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, e.shiftKey ? \"left\" : \"right\");\n    //   break;\n    // }\n    case \"Escape\": {\n      e.preventDefault();\n      TdLogic.deselectAllTd(editor);\n      break;\n    }\n    // 直接全选选中的td的内容，进入编辑状态\n    // case \" \":\n    // case \"Enter\":\n    //   {\n    //     e.preventDefault();\n    //     if (isNotOnlyOneTd) break;\n    //     const td = getFirstTd();\n    //     td && TdLogic.editTd(editor, td);\n    //   }\n    //   break;\n    // case \"ArrowUp\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"up\");\n    //   break;\n    // }\n    // case \"ArrowDown\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"down\");\n    //   break;\n    // }\n    // case \"ArrowLeft\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"left\");\n    //   break;\n    // }\n    // case \"ArrowRight\": {\n    //   e.preventDefault();\n    //   if (isNotOnlyOneTd) break;\n    //   const td = getFirstTd();\n    //   td && TdLogic.findTargetTd(editor, td, \"right\");\n    //   break;\n    // }\n  }\n\n  // if (!e.ctrlKey && (e.key.length === 1 || e.key === \"Process\")) {\n  //   if (isNotOnlyOneTd) return;\n  //   const td = getFirstTd();\n  //   TdLogic.clearTd(editor);\n  //   td && TdLogic.editTd(editor, td);\n  //   return;\n  // }\n\n  // 选中单元格进行复制\n  if (e.ctrlKey && e.key === \"c\") {\n    TableLogic.copyCells(editor);\n    return;\n  }\n\n  // // 粘贴单元格\n  if (e.ctrlKey && e.key === \"v\") {\n    TableLogic.pasteCells(editor);\n    return;\n  }\n\n  return;\n};\n","import { Editor } from \"slate\";\nimport { EditorType } from \"../../common/Defines\";\nimport { utils } from \"../../common/utils\";\nimport { ListLogic } from \"../../comps/ListComp\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { ToDoListLogic } from \"../../comps/TodoListComp\";\n\nexport const handleRangeExpand = (e: any, editor: EditorType): void => {\n  const { selection } = editor;\n  if (!selection) return;\n\n  switch (e.key) {\n    case \"Home\": {\n      ToDoListLogic.handleKeyDown(e, editor);\n      return;\n    }\n    case \"Tab\": {\n      e.preventDefault();\n\n      const isInLi = ListLogic.isInLi(editor);\n\n      if (isInLi) {\n        for (const [, p] of Editor.nodes(editor, {\n          at: selection,\n          reverse: true,\n          universal: true,\n          match(n) {\n            return utils.isTextWrapper(n);\n          },\n        })) {\n          const [parent, pp] = utils.getParent(editor, p);\n          if (!parent) continue;\n          if (ListLogic.isListItem(parent)) {\n            !e.shiftKey\n              ? ListLogic.indentLi(editor, [parent, pp])\n              : ListLogic.liftLi(editor, [parent, pp]);\n          }\n        }\n        break;\n      } else {\n        const isInTable = TableLogic.isInTable(editor);\n        if (isInTable) {\n          !e.shiftKey\n            ? TableLogic.tabEvent(editor)\n            : TableLogic.shiftTabEvent(editor);\n        }\n      }\n    }\n  }\n};\n","/* eslint-disable eqeqeq */\nimport { Transforms, Editor, Path, Element, NodeEntry } from \"slate\";\nimport { CET, EditorType } from \"../../common/Defines\";\nimport { utils } from \"../../common/utils\";\nimport { ListLogic } from \"../../comps/ListComp\";\nimport { TableLogic } from \"../../comps/Table\";\nimport { TdLogic } from \"../../comps/Td\";\nimport { ToDoListLogic } from \"../../comps/TodoListComp\";\n\nexport const handleRangeCollapsed = (e: any, editor: EditorType): void => {\n  const { selection } = editor;\n  if (!selection) return;\n\n  // 以下是没有选区的情况下的事件\n  const elementType = utils.getFirstAboveElementType(editor);\n\n  const getEditingTd = () => {\n    return TableLogic.getEditingTd(editor);\n  };\n  const getTable = (td: NodeEntry) => {\n    return td && Editor.above(editor, {\n      at: td[1],\n      match: (n) => TableLogic.isTable(n),\n    });\n  };\n\n  // 如果默认事件没有被组件拦截掉，那么在这里重新定义拦截逻辑\n  switch (e.key) {\n    case \"Tab\": {\n      e.preventDefault();\n      if (CET.LIST_ITEM === elementType) {\n        e.shiftKey\n          ? ListLogic.shiftTabEvent(editor)\n          : ListLogic.tabEvent(editor);\n        break;\n      }\n      if (CET.TD === elementType) {\n        e.shiftKey\n          ? TableLogic.shiftTabEvent(editor)\n          : TableLogic.tabEvent(editor);\n        break;\n      }\n      // 如果是在其他元素上\n      !e.shiftKey && Transforms.insertText(editor, \"    \");\n      break;\n    }\n    case \"ArrowUp\": {\n      const td = getEditingTd();\n      if (td) {\n        const [text] = Editor.nodes(editor, {\n          at: td[1],\n          mode: \"lowest\",\n          match(n) {\n            return Editor.isBlock(editor, n);\n          },\n        });\n        // 判断是否是第一行的td\n        const isInFirstRow = td[1][td[1].length - 2] === 0;\n        const isInFirstText = Path.isDescendant(selection.anchor.path, text[1]);\n        if (isInFirstText) {\n          if (isInFirstRow) {\n            const [table] = Editor.nodes(editor, {\n              at: td[1],\n              match(n) {\n                return TableLogic.isTable(n);\n              },\n            });\n            if (table) {\n              const prePos = Editor.before(editor, table[1]);\n              e.preventDefault();\n              prePos && Transforms.select(editor, prePos);\n            }\n            return;\n          }\n          TdLogic.findTargetTd(editor, td, \"up\");\n          e.preventDefault();\n          return;\n        }\n        return;\n      }\n      return;\n    }\n    case \"ArrowDown\": {\n      const td = getEditingTd();\n      if (td) {\n        const [text] = Editor.nodes(editor, {\n          at: td[1],\n          mode: \"lowest\",\n          reverse: true,\n          match(n) {\n            return Editor.isBlock(editor, n);\n          },\n        });\n        const [tbody] = Editor.nodes(editor, {\n          at: td[1],\n          match(n) {\n            return Element.isElement(n) && n.type === CET.TBODY;\n          },\n        });\n        if (!tbody) return;\n        const isInLastText = Path.isDescendant(selection.anchor.path, text[1]);\n        const isInLastRow =\n          td[1][td[1].length - 2] === tbody[0].children.length - 1;\n        if (isInLastText) {\n          if (isInLastRow) {\n            const [table] = Editor.nodes(editor, {\n              at: td[1],\n              match(n) {\n                return TableLogic.isTable(n);\n              },\n            });\n            if (table) {\n              const nextPos = Editor.after(editor, table[1]);\n              e.preventDefault();\n              nextPos && Transforms.select(editor, nextPos);\n            }\n            return;\n          }\n          TdLogic.findTargetTd(editor, td, \"down\");\n          e.preventDefault();\n          return;\n        }\n        return;\n      }\n      return;\n    }\n    case \"ArrowLeft\": {\n      const td = getEditingTd();\n      const table = getTable(td);\n      if (table && Editor.isStart(editor, selection.anchor, table[1])) {\n        TdLogic.deselectAllTd(editor);\n        return;\n      }\n      if (td && Editor.isStart(editor, selection.anchor, td[1])) {\n        TdLogic.findTargetTd(editor, td, \"left\");\n        e.preventDefault();\n        return;\n      }\n      return;\n    }\n    case \"ArrowRight\": {\n      const td = getEditingTd();\n      const table = getTable(td);\n      if (table && Editor.isEnd(editor, selection.anchor, table[1])) {\n        TdLogic.deselectAllTd(editor);\n        return;\n      }\n      if (td && Editor.isEnd(editor, selection.anchor, td[1])) {\n        TdLogic.findTargetTd(editor, td, \"right\");\n        e.preventDefault();\n        return;\n      }\n      return;\n    }\n    case \"Home\": {\n      ToDoListLogic.handleKeyDown(e, editor);\n      return;\n    }\n  }\n  return;\n};\n","/* eslint-disable eqeqeq */\nimport {\n  BorderlessTableOutlined,\n  BorderOuterOutlined,\n  DeleteOutlined,\n  FullscreenOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Tooltip } from \"antd\";\nimport { Resizable } from \"re-resizable\";\nimport { useRef, useState } from \"react\";\nimport { Transforms } from \"slate\";\nimport {\n  useSelected,\n  ReactEditor,\n  RenderElementProps,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nimport { useCallback } from \"react\";\nimport { utils } from \"../common/utils\";\n\nexport const ImgComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n  const editor = useSlateStatic();\n  const [state, setState] = useState({\n    size: {\n      width: element.width || 100,\n      height: element.height || 100,\n    },\n    showTool: false,\n  });\n  const viewerIns = useRef<InstanceType<typeof Viewer>>();\n\n  const enableResize = () => {\n    return ReactEditor.isReadOnly(editor)\n      ? {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }\n      : {\n          top: true,\n          right: true,\n          bottom: true,\n          left: true,\n          topRight: true,\n          bottomRight: true,\n          bottomLeft: true,\n          topLeft: true,\n        };\n  };\n\n  const onResizeStop: ConstructorParameters<\n    typeof Resizable\n  >[0][\"onResizeStop\"] = (e, direction, ref, d) => {\n    const newWidth = state.size.width + d.width;\n    const newHeight = state.size.height + d.height;\n    setState((t) => ({\n      ...t,\n      size: {\n        width: newWidth,\n        height: newHeight,\n      },\n    }));\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        width: newWidth,\n        height: newHeight,\n      },\n      { at: path }\n    );\n  };\n\n  const registeImgViewer = useCallback(\n    (el) => {\n      if (el && !viewerIns.current && readOnly) {\n        viewerIns.current = new Viewer(el, {});\n      }\n    },\n    [readOnly]\n  );\n\n  const showBigImg = () => {\n    const domNode = ReactEditor.toDOMNode(editor, element);\n    const imgNode = domNode.querySelector(\"img\");\n    if (imgNode) {\n      const v = new Viewer(imgNode, {\n        hidden() {\n          v.destroy();\n        },\n      });\n      v.show();\n    }\n  };\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.8,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"black\",\n        zIndex: 9,\n      }}\n    >\n      uploading...\n    </div>\n  );\n\n  const addBorder = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(editor, { border: true }, { at: path });\n  };\n\n  const removeBorder = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.unsetNodes(editor, \"border\", { at: path });\n  };\n\n  const deleteImg = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.delete(editor, { at: path, voids: true, reverse: true });\n    ReactEditor.focus(editor);\n  };\n  const imgFuncs = [\n    {\n      title: \"边框\",\n      icon: <BorderOuterOutlined />,\n      method: addBorder,\n    },\n    {\n      title: \"取消边框\",\n      icon: <BorderlessTableOutlined />,\n      method: removeBorder,\n    },\n    {\n      title: \"查看大图\",\n      icon: <FullscreenOutlined />,\n      method: showBigImg,\n    },\n    {\n      title: \"删除\",\n      icon: <DeleteOutlined />,\n      method: deleteImg,\n    },\n  ];\n\n  /**\n   * 当点击图片的时候，显示工具条，并且如果在当前文档视口内点击任何非本图片的区域后，将会隐藏工具条\n   */\n  const handleImgClick = () => {\n    setState((t) => ({ ...t, showTool: true }));\n    const thisDom = attributes.ref.current;\n    const bindEvnet = (e: any) => {\n      const parent = utils.findParent(e.target, thisDom);\n      if (parent != thisDom) {\n        setState((t) => ({ ...t, showTool: false }));\n        window.removeEventListener(\"click\", bindEvnet);\n      }\n    };\n    window.addEventListener(\"click\", bindEvnet);\n  };\n\n  return (\n    <div\n      {...attributes}\n      contentEditable={false}\n      style={{\n        position: \"relative\",\n        display: \"inline-block\",\n        margin: 5,\n        verticalAlign: \"bottom\",\n        boxShadow: selected ? \"0 0 0 3px rgba(180,215,255,.7)\" : \"none\",\n        border: element.border ? \"1px solid #e5e5e5\" : \"none\",\n      }}\n      onClick={handleImgClick}\n    >\n      <Resizable\n        enable={enableResize()}\n        style={{ display: \"inline-block\" }}\n        size={state.size}\n        onResizeStop={onResizeStop}\n      >\n        {element.id ? mask : null}\n        <Popover\n          content={\n            <Row gutter={8}>\n              {imgFuncs.map((func) => {\n                return (\n                  <Col key={func.title}>\n                    <Tooltip title={func.title}>\n                      <Button\n                        onClick={func.method}\n                        type=\"text\"\n                        icon={func.icon}\n                      ></Button>\n                    </Tooltip>\n                  </Col>\n                );\n              })}\n            </Row>\n          }\n          // trigger={readOnly ? [] : \"click\"}\n          placement=\"bottomLeft\"\n          visible={readOnly ? false : state.showTool}\n        >\n          <img\n            ref={registeImgViewer}\n            width=\"100%\"\n            height=\"100%\"\n            alt=\"\"\n            src={element.url}\n          ></img>\n        </Popover>\n        {children}\n      </Resizable>\n    </div>\n  );\n};\n","/* eslint-disable eqeqeq */\nimport {\n  DeleteOutlined,\n  DownloadOutlined,\n  PaperClipOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Tooltip } from \"antd\";\nimport { Transforms } from \"slate\";\nimport {\n  ReactEditor,\n  RenderElementProps,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\n\nexport const FileComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const editor = useSlateStatic();\n\n  const mask = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        opacity: 0.5,\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        backgroundColor: \"black\",\n        zIndex: 9,\n      }}\n    >\n      uploading...\n    </div>\n  );\n\n  const deleteFile = () => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.delete(editor, { at: path, voids: true, reverse: true });\n    ReactEditor.focus(editor);\n  };\n\n  const downloadFile = () => {\n    window.open(element.url);\n  };\n\n  const imgFuncs = [\n    {\n      title: \"下载\",\n      icon: <DownloadOutlined />,\n      method: downloadFile,\n    },\n    {\n      title: \"删除\",\n      icon: <DeleteOutlined />,\n      method: deleteFile,\n    },\n  ];\n\n  return (\n    <div\n      {...attributes}\n      contentEditable={false}\n      style={{\n        position: \"relative\",\n        display: \"inline-block\",\n        margin: \"0 5px\",\n        verticalAlign: \"bottom\",\n      }}\n    >\n      {element.id ? mask : null}\n      <Popover\n        content={\n          <Row gutter={8}>\n            {imgFuncs.map((func) => {\n              return (\n                <Col key={func.title}>\n                  <Tooltip title={func.title}>\n                    <Button\n                      onClick={func.method}\n                      type=\"text\"\n                      icon={func.icon}\n                    ></Button>\n                  </Tooltip>\n                </Col>\n              );\n            })}\n          </Row>\n        }\n        trigger={readOnly ? [] : \"click\"}\n        placement=\"bottomLeft\"\n      >\n        <a\n          download\n          href={element.url}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <PaperClipOutlined style={{ marginRight: 2 }} />\n          {element.fileName}\n        </a>\n      </Popover>\n      {children}\n    </div>\n  );\n};\n","/* eslint-disable eqeqeq */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { DisconnectOutlined, SelectOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Form, Input, Popover, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { Editor, Element, Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\nimport { CET } from \"../common/Defines\";\n\nexport const LinkComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n  const [content, setContent] = useState<string>();\n  const [url, setUrl] = useState<string>();\n\n  const visitLink = () => {\n    window.open(element.url);\n  };\n\n  const cancelLink = (e: any) => {\n    e.preventDefault();\n    ReactEditor.focus(editor);\n\n    const { selection } = editor;\n    if (!selection) return;\n\n    Transforms.unwrapNodes(editor, {\n      match(n) {\n        return Element.isElement(n) && n.type == CET.LINK;\n      },\n    });\n  };\n\n  const formItemStyle = { marginBottom: 6 };\n\n  const submitChange = () => {\n    ReactEditor.focus(editor);\n    const link = ReactEditor.toSlateNode(editor, attributes.ref.current);\n    const linkPath = ReactEditor.findPath(editor, link);\n    if (link && linkPath) {\n      Transforms.insertText(editor, content || \"link\", {\n        at: Editor.range(editor, linkPath),\n      });\n      Transforms.setNodes(editor, { url }, { at: linkPath });\n    }\n  };\n\n  const editPanel = (\n    <Form size=\"small\">\n      <Row gutter={8} style={{ flexDirection: \"column\", width: 300 }}>\n        <Col flex=\"1\">\n          <Form.Item label=\"操作\" style={formItemStyle}>\n            <Button size=\"small\" onClick={visitLink}>\n              <SelectOutlined title=\"访问链接\" /> 访问链接\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onMouseDown={cancelLink}>\n              <DisconnectOutlined title=\"取消链接\" /> 取消链接\n            </Button>\n          </Form.Item>\n        </Col>\n        <Col flex=\"1\">\n          <Form.Item label=\"文字\" style={formItemStyle}>\n            <Input\n              value={content}\n              onChange={(el: any) => {\n                setContent(el.target.value);\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item label=\"链接\" style={formItemStyle}>\n            <Input\n              value={url}\n              onChange={(el: any) => {\n                setUrl(el.target.value);\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Row justify=\"end\">\n          <Button\n            type=\"primary\"\n            style={{ width: 100, marginRight: 4 }}\n            onClick={submitChange}\n          >\n            确定\n          </Button>\n        </Row>\n      </Row>\n    </Form>\n  );\n\n  const initEditPanel = () => {\n    const linkWrapper = attributes.ref.current;\n    const link = linkWrapper.querySelector(\"a\");\n\n    if (!link) return;\n\n    setUrl(link.href);\n    setContent(link.innerText);\n  };\n\n  return (\n    <div {...attributes} style={{ display: \"inline\", position: \"relative\" }}>\n      <Popover\n        placement=\"bottomLeft\"\n        content={editPanel}\n        trigger={readOnly ? [] : [\"click\"]}\n      >\n        <a\n          href={element.url}\n          target=\"__blank\"\n          onMouseEnter={() => initEditPanel()}\n        >\n          {children}\n        </a>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { Transforms } from \"slate\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlateStatic,\n  useReadOnly,\n} from \"slate-react\";\n\nexport const CheckBoxComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const editor = useSlateStatic();\n  const readOnly = useReadOnly();\n  return (\n    <div {...attributes}>\n      <Checkbox\n        checked={element.checked}\n        onChange={(e) => {\n          Transforms.setNodes(\n            editor,\n            {\n              checked: e.target.checked,\n            },\n            {\n              at: ReactEditor.findPath(editor, element),\n            }\n          );\n        }}\n        disabled={readOnly}\n      ></Checkbox>\n    </div>\n  );\n};\n","import { TextWrappers, CET, Marks } from \"../common/Defines\";\nimport { TD } from \"../comps/Td\";\nimport { Table } from \"../comps/Table\";\nimport { ImgComp } from \"../comps/ImgComp\";\nimport { FileComp as File } from \"../comps/FileComp\";\nimport { LinkComp } from \"../comps/LinkComp\";\nimport { TodoListComp as TODO } from \"../comps/TodoListComp\";\nimport { CheckBoxComp } from \"../comps/CheckBox\";\nimport { RenderElementProps } from \"slate-react\";\nimport { utils } from \"../common/utils\";\n\nexport type externalCompShape = {\n  comp: React.FC<RenderElementProps>;\n  name: string;\n};\n\nexport const MyElements: (\n  props: RenderElementProps & {\n    comps?: externalCompShape[];\n  }\n) => JSX.Element = (props) => {\n  const { attributes, children, element } = props;\n  let style: any = {};\n  if (TextWrappers.includes(element.type) && element.textAlign)\n    style = { ...style, ...utils.getTextAlignStyle(element.textAlign) };\n\n  // 加载外部的组件\n  const ExternalComp = (props.comps || []).find((comp) => {\n    return element.type === comp.name;\n  });\n\n  if (ExternalComp) {\n    const Comp = ExternalComp.comp;\n    return <Comp {...props}></Comp>;\n  }\n\n  switch (element.type) {\n    case CET.CHECKBOX:\n      return <CheckBoxComp {...props} />;\n    case CET.TODOLIST:\n      return <TODO {...props}></TODO>;\n    case CET.NUMBER_LIST:\n      return <ol {...attributes}>{children}</ol>;\n    case CET.NORMAL_LIST:\n      return <ul {...attributes}>{children}</ul>;\n    case CET.LIST_ITEM:\n      return (\n        <li {...attributes} style={{ color: element[Marks.Color] || \"unset\" }}>\n          {children}\n        </li>\n      );\n    case CET.DIV:\n      return (\n        <div {...attributes} style={style}>\n          {children}\n        </div>\n      );\n    case CET.H1:\n      return (\n        <h1 {...attributes} style={{ ...style }}>\n          {children}\n        </h1>\n      );\n    case CET.H2:\n      return (\n        <h2 {...attributes} style={{ ...style }}>\n          {children}\n        </h2>\n      );\n    case CET.H3:\n      return (\n        <h3 {...attributes} style={{ ...style }}>\n          {children}\n        </h3>\n      );\n    case CET.H4:\n      return (\n        <h4 {...attributes} style={{ ...style }}>\n          {children}\n        </h4>\n      );\n    case CET.IMG:\n      return <ImgComp {...props}>{children}</ImgComp>;\n    case CET.LINK:\n      return <LinkComp {...props}></LinkComp>;\n    case CET.TABLE:\n      return <Table {...props}></Table>;\n    case CET.TBODY:\n      return <tbody {...attributes}>{children}</tbody>;\n    case CET.TR:\n      const otherAttr: any = {};\n      if (element.shouldEmpty) {\n        otherAttr.contentEditable = false;\n      }\n      return (\n        <tr {...attributes} {...otherAttr}>\n          {element.shouldEmpty ? null : children}\n        </tr>\n      );\n    case CET.TD:\n      return <TD {...props}></TD>;\n    case CET.FILE:\n      return <File {...props}></File>;\n    default:\n      return <div {...attributes}>{children}</div>;\n  }\n};\n","import { Marks, EditableProps } from \"../common/Defines\";\n\nexport const MyLeaf: NonNullable<EditableProps[\"renderLeaf\"]> = ({\n  attributes,\n  children,\n  leaf,\n}) => {\n  const style: any = {};\n  if (leaf[Marks.BOLD]) style.fontWeight = \"bold\";\n  if (leaf[Marks.ITALIC]) style.fontStyle = \"italic\";\n  if (leaf[Marks.FontSize]) style.fontSize = leaf.fontSize;\n  if (leaf[Marks.Underline] || leaf[Marks.LineThrough])\n    style.textDecoration = `${leaf[Marks.Underline] ? \"underline\" : \"\"} ${\n      leaf[Marks.LineThrough] ? \"line-through\" : \"\"\n    }`;\n  if (leaf[Marks.Color]) style.color = leaf[Marks.Color];\n  if (leaf[Marks.BGColor]) style.backgroundColor = leaf[Marks.BGColor];\n\n  return (\n    <span {...attributes} style={style}>\n      {children}\n    </span>\n  );\n};\n","import React, { ReactElement, useLayoutEffect, useRef, useState } from \"react\";\nimport { EditorContainerClassName, FixlayoutBoxId } from \"../common/Defines\";\nimport { utils } from \"../common/utils\";\n\nconst style: React.CSSProperties = {\n  position: \"absolute\",\n  boxSizing: \"border-box\",\n  zIndex: 999,\n};\nexport const FixLayoutBox: React.FC<{\n  visible: boolean;\n  left: number;\n  top: number;\n  childrenComp?: ReactElement<any>;\n}> = (props) => {\n  const { visible = false, left, top } = props;\n  const [finalLeft, setFinalLeft] = useState(left);\n  const ref = useRef<any>();\n  useLayoutEffect(() => {\n    if (ref.current && visible && left >= 0) {\n      const boxDom = ref.current;\n      const boxWidth = boxDom.offsetWidth;\n      const editorContainerDom = utils.findParentByClassName(\n        boxDom,\n        EditorContainerClassName\n      ); // 包裹edtior的元素\n      if (!editorContainerDom) return;\n      const editorContainerWidth = editorContainerDom.offsetWidth;\n      // 用来调整浮窗位置，考虑情况，如果在文档最右边需要弹出此浮窗，那么考虑到浮窗还有宽度，又不能超出文档当前页，所以需要再往左移。\n      if (left + boxWidth > editorContainerWidth) {\n        setFinalLeft(editorContainerWidth - boxWidth - 14); // 完整公式：left - (left + boxWidth - editorContainerWidth ) - 14(滚动条宽度)\n      } else {\n        setFinalLeft(left);\n      }\n    }\n  }, [left, visible]);\n\n  return (\n    <div\n      ref={(e) => (ref.current = e)}\n      id={FixlayoutBoxId}\n      style={{\n        ...style,\n        display: visible === true ? \"block\" : \"none\",\n        left: finalLeft,\n        top,\n      }}\n    >\n      {props.childrenComp}\n    </div>\n  );\n};\n","import { Editor, Transforms, Element } from \"slate\";\nimport { CET, EditorType } from \"../../components/RichEditor/common/Defines\";\n\nexport const type = \"code\";\n\nexport const rule = (editor: EditorType) => {\n  const { isVoid, deleteForward, deleteBackward } = editor;\n\n  editor.isVoid = (node) => {\n    if ([type].includes(node.type)) {\n      return true;\n    }\n    return isVoid(node);\n  };\n\n  editor.deleteForward = (unit) => {\n    if (!editor.selection) return;\n\n    const afterPos = Editor.after(editor, editor.selection.anchor);\n    if (afterPos) {\n      const code = Editor.above(editor, {\n        at: afterPos,\n        match(n) {\n          return Element.isElement(n) && n.type === CET.CODE;\n        },\n      });\n      if (code) {\n        Transforms.removeNodes(editor, {\n          at: code[1],\n          hanging: true,\n        });\n        return;\n      }\n    }\n\n    deleteForward(unit);\n  };\n\n  editor.deleteBackward = (unit) => {\n    if (!editor.selection) return;\n\n    const prePos = Editor.before(editor, editor.selection.anchor);\n    if (prePos) {\n      const code = Editor.above(editor, {\n        at: prePos,\n        match(n) {\n          return Element.isElement(n) && n.type === CET.CODE;\n        },\n      });\n      if (code) {\n        Transforms.removeNodes(editor, {\n          at: code[1],\n          hanging: true,\n        });\n        return true;\n      }\n    }\n\n    deleteBackward(unit);\n  };\n\n  return editor;\n};\n","// https://github.com/scniro/react-codemirror2\n// https://codemirror.net/doc/manual.html#config\nimport { Select } from \"antd\";\nimport _ from \"lodash\";\nimport { Resizable } from \"re-resizable\";\nimport { useRef } from \"react\";\nimport { useCallback } from \"react\";\nimport { useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { ICodeMirror, Controlled as CodeMirror } from \"react-codemirror2\";\nimport { Transforms } from \"slate\";\nimport { useSlateStatic, ReactEditor, useReadOnly } from \"slate-react\";\nimport { RenderElementProps } from \"slate-react/dist/components/editable\";\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/theme/material.css\");\nrequire(\"codemirror/theme/neat.css\");\nrequire(\"codemirror/theme/darcula.css\");\nrequire(\"codemirror/theme/material-palenight.css\");\nrequire(\"codemirror/mode/xml/xml.js\");\nrequire(\"codemirror/mode/javascript/javascript.js\");\nrequire(\"codemirror/mode/jsx/jsx.js\");\nrequire(\"codemirror/mode/vue/vue.js\");\nrequire(\"codemirror/mode/clike/clike.js\");\nrequire('./source.css');\n\nconst lans = [\n  {\n    title: \"html\",\n    value: \"text/html\",\n  },\n  {\n    title: \"javascript\",\n    value: \"javascript\",\n  },\n  {\n    title: \"react\",\n    value: \"text/jsx\",\n  },\n  {\n    title: \"react-ts\",\n    value: \"text/typescript-jsx\",\n  },\n  {\n    title: \"vue\",\n    value: \"vue\",\n  },\n  {\n    title: \"java\",\n    value: \"text/x-java\",\n  },\n  {\n    title: \"c++\",\n    value: \"text/x-c++src\",\n  },\n];\n\nexport const CodeComp: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n  element,\n}) => {\n  const readOnly = useReadOnly();\n  const editor = useSlateStatic();\n  const [state, setState] = useState({\n    size: {\n      width: \"100%\",\n      height: element.height || 300,\n    },\n    showTool: false,\n  });\n  const [code, setCode] = useState(element.defaultCode || \"\");\n  const codeIns = useRef<any>(null);\n  const saveContent = useRef<any>(\n    _.debounce((value) => {\n      const path = ReactEditor.findPath(editor, element);\n      Transforms.setNodes(\n        editor,\n        {\n          children: [],\n          defaultCode: value,\n        },\n        { at: path }\n      );\n    }, 100)\n  );\n  const codeConfig = useMemo(() => {\n    return {\n      mode: element.defaultMode,\n      theme: \"vscode-dark\",\n      lineNumbers: true,\n      readOnly: readOnly ? \"nocursor\" : false,\n    };\n  }, [element.defaultMode, readOnly]);\n\n  const enableResize = () => {\n    return ReactEditor.isReadOnly(editor)\n      ? {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }\n      : {\n          top: false,\n          right: false,\n          bottom: true,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        };\n  };\n  const onResizeStop: ConstructorParameters<\n    typeof Resizable\n  >[0][\"onResizeStop\"] = (e, direction, ref, d) => {\n    setState((t) => ({\n      ...t,\n      size: {\n        ...t.size,\n        height: ref.offsetHeight,\n      },\n    }));\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        height: ref.offsetHeight,\n      },\n      { at: path }\n    );\n  };\n\n  const onLanChange = (value: string) => {\n    const path = ReactEditor.findPath(editor, element);\n    Transforms.setNodes(\n      editor,\n      {\n        children: [],\n        defaultMode: value,\n      },\n      { at: path }\n    );\n  };\n  const editorDidMount: ICodeMirror[\"editorDidMount\"] = useCallback(\n    (editor: any) => {\n      codeIns.current = editor;\n      editor.setSize(\"100%\", element.height);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const onEditorChange: ICodeMirror[\"onChange\"] = useCallback(\n    (editor, data, value) => {\n      saveContent.current(value);\n    },\n    [saveContent]\n  );\n\n  return (\n    <div className=\"CodeComp\" {...attributes} contentEditable={false} style={{ paddingTop: 30 }}>\n      <Resizable\n        enable={enableResize()}\n        style={{ display: \"inline-block\", position: \"relative\" }}\n        size={state.size}\n        onResizeStop={onResizeStop}\n        onResize={(a, b, c, d) => {\n          codeIns.current?.setSize(\"100%\", c.offsetHeight);\n        }}\n      >\n        <div\n          style={{\n            color: \"white\",\n            position: \"absolute\",\n            backgroundColor: \"#2B2B2B\",\n            right: 0,\n            width: \"100%\",\n            top: -24,\n            zIndex: 7,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems:'center'\n          }}\n        >\n          <Select\n            size=\"small\"\n            defaultValue={element.defaultMode}\n            style={{\n              width: 120,\n              color: \"white\",\n              textAlign: \"right\",\n            }}\n            bordered={false}\n            showArrow={false}\n            onChange={onLanChange}\n          >\n            {lans.map((lan) => {\n              return (\n                <Select.Option key={lan.value} value={lan.value}>\n                  {lan.title}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </div>\n        {useMemo(() => {\n          return (\n            <CodeMirror\n              value={code}\n              onBeforeChange={(editor, data, value) => {\n                setCode(value);\n              }}\n              options={codeConfig}\n              onChange={onEditorChange}\n              editorDidMount={editorDidMount}\n            />\n          );\n        }, [code, codeConfig, editorDidMount, onEditorChange])}\n      </Resizable>\n      {children}\n    </div>\n  );\n};\n","import { PersonShape } from \"./source\";\nimport { Button, Card, Col, Empty, Row, Select, Space, Spin, Tag } from \"antd\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Avatar, Typography } from \"antd\";\nimport { LoadingOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { Random } from \"mockjs\";\nimport { CypressTestFlag } from \"../../components/RichEditor/common/Defines\";\n\nconst datas: PersonShape[] = new Array(100).fill(0).map((item, index) => {\n  return {\n    name: Random.cname(),\n    id: Random.id(),\n    moreInfo: {\n      org: \"部门部门部门/部门部门部门/部门部门部门/部门部门部门\",\n    },\n  };\n});\n\nconst mountPopComp = (nowNode: HTMLElement) =>\n  ((nowNode) => {\n    let parent = nowNode.parentNode as HTMLElement;\n    while (parent != null && parent.id !== \"ChoosePersonComp\") {\n      parent = parent.parentNode as HTMLElement;\n    }\n    return parent;\n  })(nowNode) || document.body;\n\nconst matchRule = (data: PersonShape, searchContent: string) => {\n  if (searchContent === \"\") return false;\n  return (\n    data.name.indexOf(searchContent) !== -1 ||\n    String(data.id).includes(searchContent)\n  );\n};\n\nfunction fetchUsers(searchContent: string, taskId: number) {\n  return new Promise<PersonShape[]>((rel, reject) => {\n    setTimeout(() => {\n      if (taskId !== runId) {\n        console.warn(`search request canceled, reason: has new request`);\n        reject();\n        return;\n      }\n      rel(\n        _.cloneDeep(\n          _.filter(datas, (user) => {\n            return matchRule(user, searchContent);\n          })\n        )\n      );\n    }, 300);\n  });\n}\n\nvar runId: number; // 进行远程请求时候的id，如果当前请求时的taskId和此id不对应，那么说明该请求任务应该被取消\nconst getUsers = _.debounce<(a: string, b: (p: PersonShape[]) => void) => void>(\n  (searchContent, callback) => {\n    runId = new Date().getTime();\n    fetchUsers(searchContent, runId)\n      .then((users) => {\n        callback(users);\n      })\n      .catch(() => {});\n  },\n  300\n);\n\nexport const ChoosePersonComp: React.FC<{\n  initPerson?: PersonShape;\n  onChange?(person: PersonShape[] | undefined | null): void;\n}> = (props) => {\n  const { initPerson } = props;\n  const [personsList, setPersonsList] = useState<PersonShape[]>(\n    initPerson?.id ? [initPerson] : []\n  );\n  const [nowPersons, setNowPersons] = useState<PersonShape[]>([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const containerDom = useRef<HTMLDivElement>();\n  const ref = useCallback((divDom: HTMLDivElement) => {\n    if (divDom) {\n      containerDom.current = divDom;\n      setTimeout(() => {\n        divDom.querySelector(\"input\")?.focus();\n      }, 0);\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\"mounted\");\n  //   return () => {\n  //     console.log(\"unmounted\");\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    // 如果initPerson变化，说明是刚刚点击人员文字，此时应该只选中这个initPerson\n    if (initPerson?.id == null || initPerson?.id === \"\") {\n      setPersonsList([]);\n    } else {\n      setPersonsList([initPerson]);\n      setNowPersons([initPerson]);\n    }\n  }, [initPerson]);\n\n  const selectCompProps: Parameters<typeof Select>[0] = useMemo(() => {\n    return {\n      allowClear: true,\n      showSearch: true,\n      mode: \"multiple\",\n      dropdownClassName: \"choosePersonCompDropDown\",\n      style: { width: 450 },\n      filterOption: false,\n      placeholder: \"输入工号或姓名进行搜索\",\n      optionLabelProp: \"label\",\n      value: nowPersons.map((p) => p.id),\n      tagRender: (props) => {\n        return (\n          <Tag\n            {...props}\n            style={{ marginTop: 4, marginBottom: 4, textAlign: \"center\" }}\n          >\n            <Typography.Text\n              title={String(props.label)?.split(\"@\")?.join(\"\")}\n              ellipsis\n              style={{ width: 36 }}\n            >\n              {String(props.label)?.split(\"@\")?.[0]}\n            </Typography.Text>\n          </Tag>\n        );\n      },\n      notFoundContent: isFetching ? (\n        <Spin\n          size=\"small\"\n          style={{ marginLeft: 10 }}\n          indicator={<LoadingOutlined spin></LoadingOutlined>}\n        />\n      ) : (\n        <Empty />\n      ),\n      getPopupContainer: mountPopComp,\n      onClear: () => {\n        setPersonsList([]);\n        setNowPersons([]);\n      },\n      onSearch: (value) => {\n        setIsFetching(true);\n        setPersonsList([]);\n        getUsers(value, (users) => {\n          setPersonsList(users);\n          setIsFetching(false);\n        });\n      },\n      onChange: (ids) => {\n        setNowPersons((t) =>\n          _.uniqBy(\n            [\n              ...t.filter((p) => (ids as string[])?.includes?.(String(p.id))),\n              ...personsList.filter((person) =>\n                (ids as string[]).find((id) => id === String(person.id))\n              ),\n            ],\n            \"id\"\n          )\n        );\n      },\n      dropdownStyle: {\n        zIndex: Number.MAX_SAFE_INTEGER,\n      },\n    };\n  }, [isFetching, nowPersons, personsList]);\n\n  const submitPerson = () => {\n    props?.onChange?.(_.cloneDeep(nowPersons));\n  };\n\n  const renderPersonList = (person: PersonShape) => {\n    return (\n      <Row\n        style={{ flexDirection: \"row\", flexWrap: \"nowrap\" }}\n        align=\"middle\"\n        gutter={12}\n      >\n        <Col>\n          <Avatar\n            size=\"default\"\n            src={person.moreInfo?.avatarSrc}\n            icon={<UserOutlined />}\n          />\n        </Col>\n        <Col flex=\"1\">\n          <Row\n            style={{\n              width: \"calc(100% - 44px)\",\n              height: \"100%\",\n              lineHeight: 1.5,\n            }}\n            justify=\"center\"\n          >\n            <Col>\n              <Typography.Text strong>\n                {person.name}{\" \"}\n                <Typography.Text type=\"secondary\">{person.id}</Typography.Text>\n              </Typography.Text>\n              <br></br>\n              <Typography.Text\n                type=\"secondary\"\n                ellipsis\n                title={person.moreInfo?.org}\n              >\n                {person.moreInfo?.org}\n              </Typography.Text>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  };\n\n  const optionRenderComp = personsList.map((person) => {\n    return (\n      <Select.Option\n        key={person.id}\n        value={person.id}\n        label={person.name + \"@\" + person.id}\n        style={{ fontSize: 10, paddingTop: 4, paddingBottom: 4 }}\n      >\n        {renderPersonList(person)}\n      </Select.Option>\n    );\n  });\n\n  return (\n    <div\n      ref={ref}\n      id=\"ChoosePersonComp\"\n      data-no-base-class=\"choosePersonComp\"\n      {...{\n        [CypressTestFlag]: 'atPerson',\n      }}\n    >\n      <Card\n        bodyStyle={{\n          padding: 12,\n          boxShadow:\n            \"0 1px 2px -2px #00000029, 0 3px 6px #0000001f, 0 5px 12px 4px #00000017\",\n        }}\n      >\n        <Row style={{ flexDirection: \"column\" }}>\n          <Col>\n            <Space>\n              {/* 选人下拉框 */}\n              <Select {...selectCompProps}>{optionRenderComp}</Select>\n              <Button\n                type=\"primary\"\n                onClick={submitPerson}\n                style={{ float: \"right\" }}\n              >\n                确定\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n","import { type, rule } from \"./rule\";\nimport { CodeComp } from \"./source\";\nimport { Button } from \"./button\";\n\nconst exportObj = {\n  rule: rule,\n  comp: CodeComp,\n  name: type,\n  button: Button,\n};\nexport default exportObj;\n","import { Transforms } from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { EditorType, FixlayoutBoxId } from \"../../components/RichEditor/common/Defines\";\nimport { utils } from \"../../components/RichEditor/common/utils\";\nimport { ChoosePersonComp } from \"./ChoosePersonComp\";\n\nexport const type = \"atPerson\";\n\nexport const rule = (editor: EditorType) => {\n  const { isInline, insertText } = editor;\n\n  editor.isInline = (node) => {\n    if ([type].includes(node.type)) {\n      return true;\n    }\n    return isInline(node);\n  };\n\n  editor.insertText = (text) => {\n    insertText(text);\n    if (text === \"@\") {\n      // 打开选人弹窗\n      const openModal = () => {\n        const [modalX, modalY] = utils.getCursorPos(editor);\n\n        editor.setFixLayoutBox?.(\n          {\n            visible: true,\n            left: modalX,\n            top: modalY + 18,\n          },\n          <ChoosePersonComp\n            onChange={(persons) => {\n              editor.setFixLayoutBox?.({ visible: false });\n              ReactEditor.focus(editor);\n              Transforms.delete(editor, { reverse: true });\n              if (persons) {\n                Transforms.insertNodes(\n                  editor,\n                  persons.map((person) => {\n                    return {\n                      type,\n                      children: [\n                        {\n                          text: \"@\" + person.name + person.id,\n                        },\n                      ],\n                    };\n                  }) as any\n                );\n                setTimeout(() => {\n                  Transforms.move(editor);\n                  Transforms.move(editor, { reverse: true });\n                }, 0);\n              }\n            }}\n          ></ChoosePersonComp>\n        );\n        // 只有当用户mousedown和mouseup都在弹窗范围之外，才关闭\n        const isMouseDownOutSide = (e: any) => {\n          return !document\n            .querySelector(`#${FixlayoutBoxId}`)\n            ?.contains(e.target);\n        };\n        const handlePressEsc = (e: any) => {\n          if (e.key === \"Escape\") {\n            editor.setFixLayoutBox?.({ visible: false });\n            window.removeEventListener(\"mousedown\", handleMouseDown);\n            window.removeEventListener(\"keydown\", handlePressEsc);\n          }\n        };\n        const handleMouseDown = (e: any) => {\n          if (isMouseDownOutSide(e)) {\n            editor.setFixLayoutBox?.({ visible: false });\n            window.removeEventListener(\"mousedown\", handleMouseDown);\n            window.removeEventListener(\"keydown\", handlePressEsc);\n          }\n        };\n        window.addEventListener(\"mousedown\", handleMouseDown);\n        window.addEventListener(\"keydown\", handlePressEsc);\n      };\n      setTimeout(() => {\n        openModal();\n      }, 0);\n    }\n  };\n\n  return editor;\n};\n","import { Source as comp } from \"./source\";\nimport { rule, type as name } from \"./rule\";\n\nconst exportObj = {\n  comp,\n  rule,\n  name,\n};\nexport default exportObj;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { RenderElementProps } from \"slate-react\";\nimport { CypressFlagValues, CypressTestFlag } from \"../../components/RichEditor/common/Defines\";\n\nexport type PersonShape = {\n  name: string;\n  id: number | string; // 工号\n  moreInfo?: {\n    org?: string; // 组织\n    avatarSrc?: string; // 头像链接\n    [key: string]: any;\n  };\n};\n\nexport const Source: (props: RenderElementProps) => JSX.Element = ({\n  attributes,\n  children,\n}) => {\n  return (\n    <a\n      {...attributes}\n      className={CypressFlagValues.AT_PERSON_TEXT}\n      {...{\n        [CypressTestFlag]: CypressFlagValues.AT_PERSON_TEXT,\n      }}\n      style={{ margin: \"0 0.2em\" }}\n    >\n      {children}\n    </a>\n  );\n};\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  createContext,\n  ReactElement,\n} from \"react\";\nimport { createEditor, Transforms, Editor, Operation, Selection } from \"slate\";\nimport { Slate, Editable, withReact, ReactEditor } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport {\n  CET,\n  CustomElement,\n  EditableProps,\n  EditorCompShape,\n  EditorContainerClassName,\n  EditorType,\n  Marks,\n  StateShape,\n  ToolBars,\n} from \"./common/Defines\";\nimport { TableLogic } from \"./comps/Table\";\nimport { utils } from \"./common/utils\";\nimport { ToolBar } from \"./comps/TooBar/ToolBar\";\nimport { TdLogic } from \"./comps/Td\";\nimport { withCyWrap } from \"./plugins/WithCyWrap\";\nimport { HandleKeyDownEvent } from \"./EventHandler/HandleKeyDownEvent/HandleKeyDownEvent\";\nimport { MyElements } from \"./RenderElements/MyElements\";\nimport { MyLeaf } from \"./RenderElements/RenderLeaf\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport \"./RichEditor.css\";\nimport { getCopyedCells } from \"./common/globalStore\";\nimport { FixLayoutBox } from \"./comps/FixLayoutBox\";\nimport { ToDoListLogic } from \"./comps/TodoListComp\";\nimport codeComp from \"../../externalComps/Code/index\";\nimport atPerson from \"../../externalComps/AtPerson/index\";\n\ntype savedMarksShape =\n  | (Partial<{\n      [key in Marks]: any;\n    }> &\n      Partial<{\n        [key in keyof CustomElement]: CustomElement[key];\n      }> & {\n        [key: string]: any;\n      })\n  | null\n  | undefined;\n\nexport const EditorContext = createContext<{\n  savedMarks: savedMarksShape;\n  setSavedMarks: (marks: savedMarksShape) => void;\n  readOnly: boolean;\n  setReadOnly: (value: boolean) => void;\n}>({\n  savedMarks: null,\n  setSavedMarks: () => {},\n  readOnly: false,\n  setReadOnly: () => {},\n});\n\nconst loadPlugins = (plugins: ((editor: EditorType) => EditorType)[]) => {\n  return plugins.reduceRight((p, c) => {\n    return c(p);\n  }, createEditor());\n};\n\nconst EditorComp: EditorCompShape = (props) => {\n  const { plugins } = props;\n  const editorDomRef = useRef<any>(null);\n\n  const [fixBox, setFixBox] = useState<{\n    left: number;\n    top: number;\n    visible: boolean;\n    childrenComp?: ReactElement<any>;\n  }>({\n    left: 0,\n    top: 0,\n    visible: false,\n  });\n\n  /**\n   * 解决live refresh问题的链接\n   * https://github.com/ianstormtaylor/slate/issues/4081\n   */\n  const [editor] = useState(() =>\n    loadPlugins([\n      (editor) => {\n        // 定义浮窗打开逻辑\n        editor.setFixLayoutBox = ({ left = 0, top = 0, visible }, children) => {\n          setFixBox((t) => ({\n            ...t,\n            left,\n            top,\n            visible,\n            childrenComp: children,\n          }));\n        };\n        return editor;\n      },\n      ...(plugins?.map((plugin) => plugin.rule) || []),\n      withCyWrap,\n      withHistory,\n      withReact,\n    ])\n  );\n  const [value, setValue] = useState<StateShape>(() => {\n    const content =\n      props.content ||\n      window.localStorage.getItem(\"savedContent\") ||\n      JSON.stringify([{ type: CET.DIV, children: [{ text: \"\" }] }]);\n    // return TableLogic.model || JSON.parse(content);\n    return JSON.parse(content);\n  });\n  const ref = useRef<{\n    preUndos: Operation[][];\n    preSelection: Selection | null;\n  }>({\n    preUndos: [],\n    preSelection: null,\n  });\n  const [savedMarks, setSavedMarks] = useState<savedMarksShape>();\n\n  useEffect(() => {\n    if (savedMarks != null) {\n      document.body.style.cursor = \"copy\";\n    } else {\n      document.body.style.cursor = \"auto\";\n    }\n  }, [savedMarks]);\n  const [readOnly, setReadOnly] = useState(false);\n\n  useEffect(() => {\n    props.getEditor?.(editor);\n  }, [editor, fixBox, props]);\n\n  const renderElement: EditableProps[\"renderElement\"] = useCallback(\n    (props) => (\n      <MyElements\n        {...props}\n        comps={plugins?.map((plugin) => ({\n          comp: plugin.comp,\n          name: plugin.name,\n        }))}\n        editorRef={ref}\n      ></MyElements>\n    ),\n    [plugins]\n  );\n  const renderLeaf: EditableProps[\"renderLeaf\"] = useCallback((props) => {\n    return <MyLeaf {...props}></MyLeaf>;\n  }, []);\n  const MyToolBar = useMemo(() => {\n    return <ToolBar buttons={props.toolbars || []}></ToolBar>;\n  }, [props.toolbars]);\n\n  const handleSelect = () => {\n    // 处理格式刷逻辑\n    if (savedMarks != null) {\n      const hasSelectTd = TableLogic.getFirstSelectedTd(editor);\n      if (hasSelectTd) return;\n\n      const hasTextAlign = savedMarks[Marks.TextAlign];\n      const textWrappers =\n        Array.from(\n          Editor.nodes(editor, {\n            // at: editor.selection?.anchor,\n            mode: \"lowest\",\n            match(n) {\n              return utils.isTextWrapper(n) || ToDoListLogic.isTodoList(n);\n            },\n          })\n        ) || [];\n\n      for (const key of Object.values(Marks)) {\n        Editor.removeMark(editor, key);\n      }\n\n      textWrappers.forEach((textWrapper) => {\n        Transforms.unsetNodes(editor, Marks.TextAlign, {\n          at: textWrapper[1],\n        });\n      });\n\n      for (const key in savedMarks) {\n        if (key === \"children\") continue;\n        Editor.addMark(editor, key, savedMarks[key]);\n      }\n      if (hasTextAlign) {\n        textWrappers.forEach((textWrapper) => {\n          Transforms.setNodes(\n            editor,\n            {\n              [Marks.TextAlign]: savedMarks[Marks.TextAlign],\n            },\n            { at: textWrapper[1] }\n          );\n        });\n      }\n      setSavedMarks(null);\n      document.body.style.cursor = \"auto\";\n      editor.selection &&\n        Transforms.select(editor, Editor.start(editor, editor.selection));\n    }\n  };\n  const handleFocus = () => {\n    ref.current.preSelection &&\n      Editor.hasPath(editor, ref.current.preSelection.anchor.path) &&\n      Editor.hasPath(editor, ref.current.preSelection.focus.path) &&\n      Transforms.select(editor, ref.current.preSelection);\n  };\n  const handleBlur = () => {\n    ref.current.preSelection = editor.selection;\n  };\n  const handleMouseDown = (e: any) => {\n    // 取消所有表格的选中状态，因为表格部分已经阻止了自己的mousedown事件传递到父组件，所以只要能在这里触发的，都肯定不是在表格里\n    TdLogic.deselectAllTd(editor);\n  };\n  const handleKeyDown = (e: any) => HandleKeyDownEvent(e, editor);\n\n  return (\n    <div className=\"cyEditor\" style={{ position: \"relative\" }}>\n      <Slate\n        editor={editor}\n        value={value}\n        onChange={(value) => {\n          setValue(value);\n        }}\n      >\n        <EditorContext.Provider\n          value={useMemo(() => {\n            return {\n              savedMarks: savedMarks,\n              setSavedMarks: setSavedMarks,\n              readOnly,\n              setReadOnly,\n            };\n          }, [readOnly, savedMarks])}\n        >\n          {(props.toolbars || []).length === 0 ? null : MyToolBar}\n          <div\n            className={EditorContainerClassName}\n            ref={editorDomRef}\n            style={{\n              overflowY: \"auto\",\n              overflowX: \"hidden\",\n              height: window.screen.availHeight - 200,\n              border: \"1px solid\",\n              padding: 12,\n              position: \"relative\",\n            }}\n          >\n            <FixLayoutBox {...fixBox}></FixLayoutBox>\n            <Editable\n              renderElement={renderElement}\n              renderLeaf={renderLeaf}\n              autoFocus\n              readOnly={readOnly}\n              onCompositionStart={() => {\n                utils.removeRangeElement(editor);\n              }}\n              onDOMBeforeInput={(e) => {\n                // 当插入内容来源粘贴时，如果此时有已经复制的表格内容，那么拦截默认行为。\n                if (e.inputType === \"insertFromPaste\") {\n                  const copyedCells = getCopyedCells() || [];\n                  if (copyedCells.length > 0) {\n                    e.preventDefault();\n                    ReactEditor.insertData(editor, utils.getDataTransfer([]));\n                  }\n                }\n              }}\n              placeholder=\"welcome to cyEditor!\"\n              onKeyDown={handleKeyDown}\n              onMouseDown={handleMouseDown}\n              onDragStart={(e) => {\n                e.preventDefault();\n              }}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              onSelect={handleSelect}\n            />\n          </div>\n        </EditorContext.Provider>\n      </Slate>\n    </div>\n  );\n};\n\nconst CyReactEditor: EditorCompShape = (props) => {\n  return (\n    <EditorComp\n      plugins={props.plugins || [codeComp, atPerson]}\n      toolbars={props.toolbars || Object.values(ToolBars)}\n    />\n  );\n};\n\nexport default CyReactEditor;\n","import ReactDOM from \"react-dom\";\r\nimport Editor from \"./components/RichEditor/RichEditor\";\r\n\r\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}